from exalted.models.characters.charms import (
    DragonBloodedCharm,
    MartialArtsCharm,
    MartialArtsStyle,
    SolarCharm,
)
from exalted.models.characters.mortals import ExMerit, ExSpecialty
from exalted.models.characters.utils import ABILITIES

ExMerit.objects.create(
    name="Allies", merit_type="story", ratings=[1, 3, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 158)
ExMerit.objects.create(
    name="Ambidextrous", merit_type="innate", ratings=[1, 2], merit_class="standard",
).add_source("Exalted 3rd Edition", 158)
ExMerit.objects.create(
    name="Artifact", merit_type="story", ratings=[2, 3, 4, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 159)
ExMerit.objects.create(
    name="Backing", merit_type="story", ratings=[2, 3, 4], merit_class="standard",
).add_source("Exalted 3rd Edition", 159)
ExMerit.objects.create(
    name="Boundless Endurance",
    merit_type="purchased",
    ratings=[2],
    merit_class="standard",
    prereqs=[[("stamina", 3)], [("resistance", 3)],],
).add_source("Exalted 3rd Edition", 159)
ExMerit.objects.create(
    name="Command", merit_type="story", ratings=[2, 3, 4, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 159)
ExMerit.objects.create(
    name="Contacts", merit_type="story", ratings=[1, 3, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 160)
ExMerit.objects.create(
    name="Cult", merit_type="story", ratings=[1, 2, 3, 4, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 160)
ExMerit.objects.create(
    name="Danger Sense",
    merit_type="innate",
    ratings=[3],
    merit_class="standard",
    prereqs=[[("perception", 3)], [("awareness", 3)],],
).add_source("Exalted 3rd Edition", 160)
ExMerit.objects.create(
    name="Demesne", merit_type="story", ratings=[2, 4], merit_class="standard",
).add_source("Exalted 3rd Edition", 160)
ExMerit.objects.create(
    name="Direction Sense", merit_type="innate", ratings=[1], merit_class="standard",
).add_source("Exalted 3rd Edition", 160)
ExMerit.objects.create(
    name="Eidetic Memory", merit_type="innate", ratings=[2], merit_class="standard",
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Familiar", merit_type="story", ratings=[1, 2, 3], merit_class="standard",
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Fast Reflexes",
    merit_type="purchased",
    ratings=[3],
    merit_class="standard",
    prereqs=[[("wits", 3)],],
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Fleet of Foot",
    merit_type="purchased",
    ratings=[4],
    merit_class="standard",
    prereqs=[[("dexterity", 3)]],
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Followers", merit_type="story", ratings=[1, 2, 3], merit_class="standard",
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Giant",
    merit_type="innate",
    ratings=[4],
    merit_class="standard",
    prereqs=[[("stamina", 3)]],
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Hearthstone", merit_type="story", ratings=[2, 4], merit_class="standard",
).add_source("Exalted 3rd Edition", 161)
ExMerit.objects.create(
    name="Hideous", merit_type="innate", ratings=[0], merit_class="standard",
).add_source("Exalted 3rd Edition", 162)
ExMerit.objects.create(
    name="Influence",
    merit_type="story",
    ratings=[1, 2, 3, 4, 5],
    merit_class="standard",
).add_source("Exalted 3rd Edition", 162)
ExMerit.objects.create(
    name="Iron Stomach",
    merit_type="purchased",
    ratings=[1],
    merit_class="standard",
    prereqs=[[("stamina", 3)], [("resistance", 3)],],
).add_source("Exalted 3rd Edition", 162)
ExMerit.objects.create(
    name="Language", merit_type="purchased", ratings=[1], merit_class="standard",
).add_source("Exalted 3rd Edition", 162)
ExMerit.objects.create(
    name="Manse", merit_type="story", ratings=[3, 5], merit_class="standard",
).add_source("Exalted 3rd Edition", 163)
ExMerit.objects.create(
    name="Mentor", merit_type="story", ratings=[1, 2, 3], merit_class="standard",
).add_source("Exalted 3rd Edition", 163)
ExMerit.objects.create(
    name="Martial Artist",
    merit_type="purchased",
    ratings=[4],
    merit_class="standard",
    prereqs=[[("brawl", 1)]],
).add_source("Exalted 3rd Edition", 163)
ExMerit.objects.create(
    name="Mighty Thew",
    merit_type="purchased",
    ratings=[1, 2, 3],
    merit_class="standard",
    prereqs=[[("strength", 3)]],
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Natural Immunity",
    merit_type="innate",
    ratings=[2],
    merit_class="standard",
    prereqs=[[("stamina", 3)]],
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Pain Tolerance",
    merit_type="purchased",
    ratings=[4],
    merit_class="standard",
    prereqs=[[("resistance", 4)]],
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Quick Draw",
    merit_type="purchased",
    ratings=[1, 4],
    merit_class="standard",
    prereqs=[
        [("archery", 3)],
        [("brawl", 3)],
        [("melee", 3)],
        [("martial_arts", 3)],
        [("thrown", 3)],
    ],
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Retainers", merit_type="story", ratings=[2, 4], merit_class="standard",
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Resources",
    merit_type="story",
    ratings=[1, 2, 3, 4, 5],
    merit_class="standard",
).add_source("Exalted 3rd Edition", 164)
ExMerit.objects.create(
    name="Selective Conception",
    merit_type="innate",
    ratings=[1],
    merit_class="standard",
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Strong Lungs",
    merit_type="purchased",
    ratings=[1],
    merit_class="standard",
    prereqs=[[("athletics", 3)]],
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Toxin Resistance",
    merit_type="purchased",
    ratings=[3],
    merit_class="standard",
    prereqs=[[("stamina", 3)], [("resistance", 3)],],
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Chameleon", merit_type="innate", ratings=[3], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Claws/Fangs/Hooves/Horns",
    merit_type="innate",
    ratings=[1, 4],
    merit_class="supernatural",
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Enhanced Sense", merit_type="innate", ratings=[3], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Exalted Healing",
    merit_type="innate",
    ratings=[5],
    merit_class="supernatural",
).add_source("Exalted 3rd Edition", 165)
ExMerit.objects.create(
    name="Extra Limbs", merit_type="innate", ratings=[3], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Gills", merit_type="innate", ratings=[0], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Poisoned Body",
    merit_type="innate",
    ratings=[1, 2, 5],
    merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Quills", merit_type="innate", ratings=[5], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Subtlety",
    merit_type="innate",
    ratings=[2],
    merit_class="supernatural",
    prereqs=[
        [("Claws/Fangs/Hooves/Horns", 1)],
        [("Quills", 1)],
        [("Extra Limbs", 1)],
        [("Tail", 1)],
        [("Unusual Hide", 1)],
        [("Wings", 1)],
    ],
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Tail", merit_type="innate", ratings=[1, 2], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Thaumaturgist", merit_type="innate", ratings=[4], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Unusual Hide",
    merit_type="innate",
    ratings=[1, 2, 3, 4, 5],
    merit_class="supernatural",
).add_source("Exalted 3rd Edition", 166)
ExMerit.objects.create(
    name="Venomous", merit_type="innate", ratings=[3, 4], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 167)
ExMerit.objects.create(
    name="Wall Walking", merit_type="innate", ratings=[4], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 167)
ExMerit.objects.create(
    name="Wings", merit_type="innate", ratings=[3, 5], merit_class="supernatural",
).add_source("Exalted 3rd Edition", 167)

ExMerit.objects.create(
    name="Sobriquet",
    merit_type="purchased",
    ratings=[2],
    merit_class="standard",
    prereqs=[[("Influence", 1)]],
).add_source("Dragon-Blooded: What Fire Has Wrought", 142)
ExMerit.objects.create(
    name="Well-Bred",
    merit_type="innate",
    ratings=[2],
    merit_class="standard",
    prereqs=[[]],
).add_source("Dragon-Blooded: What Fire Has Wrought", 142)


for ability in ABILITIES:
    for i in range(10):
        ExSpecialty.objects.create(
            name=f"{ability.replace('_', ' ').title()} Specialty {i}", ability=ability,
        )


terrestrial_circle_sorcery = SolarCharm.objects.create(
    name="Terrestrial Circle Sorcery",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
).add_source("Exalted 3rd Edition", 360)
celestial_circle_sorcery = SolarCharm.objects.create(
    name="Celestial Circle Sorcery",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
).add_source("Exalted 3rd Edition", 361)
celestial_circle_sorcery.prerequisites.add(terrestrial_circle_sorcery)
solar_circle_sorcery = SolarCharm.objects.create(
    name="Solar Circle Sorcery",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
).add_source("Exalted 3rd Edition", 361)
solar_circle_sorcery.prerequisites.add(celestial_circle_sorcery)


wise_arrow = SolarCharm.objects.create(
    name="Wise Arrow",
    mote_cost=1,
    statistic="archery",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="instant",
).add_source("Exalted 3rd Edition", 255)
sight_without_eyes = SolarCharm.objects.create(
    name="Sight Without Eyes",
    mote_cost=1,
    statistic="archery",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="tick",
).add_source("Exalted 3rd Edition", 255)
sight_without_eyes.prerequisites.add(wise_arrow)
blood_without_balance = SolarCharm.objects.create(
    name="Blood Without Balance",
    mote_cost=3,
    statistic="archery",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 256)
blood_without_balance.prerequisites.add(sight_without_eyes)
force_without_fire = SolarCharm.objects.create(
    name="Force Without Fire",
    mote_cost=3,
    statistic="archery",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=["withering-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 256)
force_without_fire.prerequisites.add(sight_without_eyes)
trance_of_unhesitating_speed = SolarCharm.objects.create(
    name="Trance of Unhesitating Speed",
    mote_cost=4,
    willpower_cost=1,
    statistic="archery",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 256)
trance_of_unhesitating_speed.prerequisites.add(wise_arrow)
phantom_arrow_technique = SolarCharm.objects.create(
    name="Phantom Arrow Technique",
    mote_cost=1,
    statistic="archery",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="instant",
).add_source("Exalted 3rd Edition", 257)
fiery_arrow_attack = SolarCharm.objects.create(
    name="Fiery Arrow Attack",
    mote_cost=2,
    statistic="archery",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 257)
fiery_arrow_attack.prerequisites.add(phantom_arrow_technique)
there_is_no_wind = SolarCharm.objects.create(
    name="There Is No Wing",
    mote_cost=3,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["dual"],
    duration="instant",
).add_source("Exalted 3rd Edition", 257)
there_is_no_wind.prerequisites.add(sight_without_eyes)
accuracy_without_distance = SolarCharm.objects.create(
    name="Accuracy Without Distance",
    mote_cost=1,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 257)
accuracy_without_distance.prerequisites.add(force_without_fire)
arrow_storm_technique = SolarCharm.objects.create(
    name="Arrow Storm Technique",
    mote_cost=5,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 257)
arrow_storm_technique.prerequisites.add(trance_of_unhesitating_speed)
flashing_vengeance_draw = SolarCharm.objects.create(
    name="Flashing Vengeance Draw",
    mote_cost=3,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="instant",
).add_source("Exalted 3rd Edition", 258)
flashing_vengeance_draw.prerequisites.add(trance_of_unhesitating_speed)
hunters_swift_answer = SolarCharm.objects.create(
    name="Hunter's Swift Answer",
    mote_cost=5,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="instant",
).add_source("Exalted 3rd Edition", 258)
hunters_swift_answer.prerequisites.add(flashing_vengeance_draw)
immaculate_golden_bow = SolarCharm.objects.create(
    name="Immaculate Golden Bow",
    mote_cost=5,
    willpower_cost=1,
    statistic="archery",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
).add_source("Exalted 3rd Edition", 258)
immaculate_golden_bow.prerequisites.add(phantom_arrow_technique)
dazzling_flare_attack = SolarCharm.objects.create(
    name="Dazzling Flare Attack",
    mote_cost=3,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 258)
dazzling_flare_attack.prerequisites.add(fiery_arrow_attack)
seven_omens_shot = SolarCharm.objects.create(
    name="Seven Omens Shot",
    mote_cost=3,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 258)
seven_omens_shot.prerequisites.add(accuracy_without_distance)
revolving_bow_discipline = SolarCharm.objects.create(
    name="Revolving Bow Discipline",
    mote_cost=6,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["perilous", "withering-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 258)
revolving_bow_discipline.prerequisites.add(arrow_storm_technique)
finishing_snipe = SolarCharm.objects.create(
    name="Finishing Snipe",
    mote_cost=7,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decivisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 259)
finishing_snipe.prerequisites.add(hunters_swift_answer)
rain_of_feathered_death = SolarCharm.objects.create(
    name="Rain of Feathered Death",
    mote_cost=3,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 259)
rain_of_feathered_death.prerequisites.add(phantom_arrow_technique)
shadow_seeking_arrow = SolarCharm.objects.create(
    name="Shadow-Seeking Arrow",
    mote_cost=3,
    willpower_cost=0,
    initiative_cost=2,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="instant",
).add_source("Exalted 3rd Edition", 259)
shadow_seeking_arrow.prerequisites.add(dazzling_flare_attack)
searing_sunfire_interdiction = SolarCharm.objects.create(
    name="Searing Sunfire Interdiction",
    mote_cost=4,
    willpower_cost=1,
    initiative_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 259)
searing_sunfire_interdiction.prerequisites.add(dazzling_flare_attack)
solar_spike = SolarCharm.objects.create(
    name="Solar Spike",
    mote_cost=5,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 260)
solar_spike.prerequisites.add(dazzling_flare_attack)
heart_eating_incineration = SolarCharm.objects.create(
    name="Heart-Eating Incineration",
    mote_cost=3,
    anima_cost=3,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 260)
heart_eating_incineration.prerequisites.add(solar_spike)
dust_and_ash_sleight = SolarCharm.objects.create(
    name="Dust and Ash Sleight",
    mote_cost=3,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 260)
dust_and_ash_sleight.prerequisites.add(seven_omens_shot)
heavens_crash_down = SolarCharm.objects.create(
    name="Heavens Crash Down",
    mote_cost=6,
    initiative_cost=2,
    willpower_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["clash", "perilous", "withering-only"],
    duration="instant",
).add_source("Exalted 3rd Edition", 260)
heavens_crash_down.prerequisites.add(revolving_bow_discipline)
streaming_arrow_stance = SolarCharm.objects.create(
    name="Streaming Arrow Stance",
    mote_cost=6,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="scene",
).add_source("Exalted 3rd Edition", 261)
streaming_arrow_stance.prerequisites.add(finishing_snipe)
whispered_prayer_of_judgment = SolarCharm.objects.create(
    name="Whispered Prayer of Judgment",
    mote_cost=1,
    willpower_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=5,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="instant",
).add_source("Exalted 3rd Edition", 261)
whispered_prayer_of_judgment.prerequisites.add(streaming_arrow_stance)

graceful_crane_stance = SolarCharm.objects.create(
    name="Graceful Crane Stance",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
monkey_leap_technique = SolarCharm.objects.create(
    name="Monkey Leap Technique",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
soaring_crane_leap = SolarCharm.objects.create(
    name="Soaring Crane Leap",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
soaring_crane_leap.prerequisites.add(monkey_leap_technique)
foe_vaulting_method = SolarCharm.objects.create(
    name="Foe-Vaulting Method",
    mote_cost=0,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
foe_vaulting_method.prerequisites.add(graceful_crane_stance, monkey_leap_technique)
lightning_speed = SolarCharm.objects.create(
    name="Lightning Speed",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
winning_stride_discipline = SolarCharm.objects.create(
    name="Winning Stride Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=4,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
winning_stride_discipline.prerequisites.add(lightning_speed)
increasing_strength_exercise = SolarCharm.objects.create(
    name="Increasing Strength Exercise",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
ten_ox_meditation = SolarCharm.objects.create(
    name="Ten Ox Meditation",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="feat",
)
ten_ox_meditation.prerequisites.add(increasing_strength_exercise)
thunderbolt_attack_prana = SolarCharm.objects.create(
    name="Thunderbolt Attack Prana",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
thunderbolt_attack_prana.prerequisites.add(
    increasing_strength_exercise, monkey_leap_technique
)
feather_foot_style = SolarCharm.objects.create(
    name="Feather Foot Style",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute"],
    duration="running",
)
feather_foot_style.prerequisites.add(graceful_crane_stance, lightning_speed)
spider_foot_style = SolarCharm.objects.create(
    name="Spider Foot Style",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute"],
    duration="turns",
)
spider_foot_style.prerequisites.add(feather_foot_style)
unbound_eagle_approach = SolarCharm.objects.create(
    name="Unbound Eagle Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unbound_eagle_approach.prerequisites.add(soaring_crane_leap)
leaping_tiger_attack = SolarCharm.objects.create(
    name="Leaping Tiger Attack",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["dual"],
    duration="Instant",
)
leaping_tiger_attack.prerequisites.add(graceful_crane_stance, lightning_speed)
racing_hare_method = SolarCharm.objects.create(
    name="Racing Hare Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="hour",
)
racing_hare_method.prerequisites.add(lightning_speed)
onrush_burst_method = SolarCharm.objects.create(
    name="Onrush Burst Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
onrush_burst_method.prerequisites.add(lightning_speed)
arete_driven_marathon_stride = SolarCharm.objects.create(
    name="Arete-Driven Marathon Stride",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
arete_driven_marathon_stride.prerequisites.add(winning_stride_discipline)
armor_eating_strike = SolarCharm.objects.create(
    name="Armor-Eating Strike",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=3,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
armor_eating_strike.prerequisites.add(increasing_strength_exercise)
thunders_might = SolarCharm.objects.create(
    name="Thunder's Might",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
thunders_might.prerequisites.add(increasing_strength_exercise)
mountain_crossing_leap_technique = SolarCharm.objects.create(
    name="Mountain-Crossing Leap Technique",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="leaping",
)
mountain_crossing_leap_technique.prerequisites.add(unbound_eagle_approach)
eagle_wing_style = SolarCharm.objects.create(
    name="Eagle-Wing Style",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
eagle_wing_style.prerequisites.add(mountain_crossing_leap_technique)
demon_wasting_rush = SolarCharm.objects.create(
    name="Demon-Wasting Rush",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
demon_wasting_rush.prerequisites.add(racing_hare_method)
hurricane_spirit_speed = SolarCharm.objects.create(
    name="Hurricane Spirit Speed",
    mote_cost=0,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
hurricane_spirit_speed.prerequisites.add(arete_driven_marathon_stride)
godspeed_steps = SolarCharm.objects.create(
    name="Godspeed Steps",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
godspeed_steps.prerequisites.add(arete_driven_marathon_stride, racing_hare_method)
power_suffusing_form_technique = SolarCharm.objects.create(
    name="Power Suffusing Form Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
power_suffusing_form_technique.prerequisites.add(thunders_might)
legion_aurochs_method = SolarCharm.objects.create(
    name="Legion Aurochs Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
legion_aurochs_method.prerequisites.add(power_suffusing_form_technique)
triumph_forged_god_body = SolarCharm.objects.create(
    name="Triumph-Forged God-Body",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
triumph_forged_god_body.prerequisites.add(
    arete_driven_marathon_stride, ten_ox_meditation, unbound_eagle_approach
)
one_extra_step = SolarCharm.objects.create(
    name="One Extra Step",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
one_extra_step.prerequisites.add(godspeed_steps)
bonfire_anima_wings = SolarCharm.objects.create(
    name="Bonfire Anima Wings",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
bonfire_anima_wings.prerequisites.add(eagle_wing_style, onrush_burst_method)
aegis_of_unstoppable_force = SolarCharm.objects.create(
    name="Aegis of Unstoppable Force",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
aegis_of_unstoppable_force.prerequisites.add(legion_aurochs_method)
living_wind_approach = SolarCharm.objects.create(
    name="Living Wind Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
living_wind_approach.prerequisites.add(one_extra_step)
nine_aeons_thew = SolarCharm.objects.create(
    name="Nine Aeons Thew",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="athletics",
    min_statistic=5,
    min_essence=5,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
nine_aeons_thew.prerequisites.add(aegis_of_unstoppable_force)

sensory_acuity_prana = SolarCharm.objects.create(
    name="Sensory Acuity Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
surprise_anticipation_method = SolarCharm.objects.create(
    name="Surprise Anticipation Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
surprise_anticipation_method.prerequisites.add(sensory_acuity_prana)
keen_sight_technique = SolarCharm.objects.create(
    name="Keen Sight Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
keen_sight_technique.prerequisites.add(sensory_acuity_prana)
unswerving_eye_method = SolarCharm.objects.create(
    name="Unswerving Eye Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unswerving_eye_method.prerequisites.add(keen_sight_technique)
keen_taste_and_smell_technique = SolarCharm.objects.create(
    name="Keen Taste and Smell Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
keen_taste_and_smell_technique.prerequisites.add(sensory_acuity_prana)
genius_palate_summation = SolarCharm.objects.create(
    name="Genius Palate Summation",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
genius_palate_summation.prerequisites.add(keen_taste_and_smell_technique)
foe_scenting_method = SolarCharm.objects.create(
    name="Foe-Scenting Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
foe_scenting_method.prerequisites.add(keen_taste_and_smell_technique)
keen_hearing_and_touch_technique = SolarCharm.objects.create(
    name="Keen Hearing and Touch Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
keen_hearing_and_touch_technique.prerequisites.add(sensory_acuity_prana)
studied_ear_espial = SolarCharm.objects.create(
    name="Studied Ear Espial",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
studied_ear_espial.prerequisites.add(keen_hearing_and_touch_technique)
eyeless_harbinger_awareness = SolarCharm.objects.create(
    name="Eyeless Harbinger Awareness",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
eyeless_harbinger_awareness.prerequisites.add(keen_hearing_and_touch_technique)
awakening_eye = SolarCharm.objects.create(
    name="Awakening Eye",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
# awakening_eye.prerequisites.add(any_two_keen_(sense)_techniques)
inner_eye_focus = SolarCharm.objects.create(
    name="Inner Eye Focus",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
inner_eye_focus.prerequisites.add(unswerving_eye_method)
scent_honing_prana = SolarCharm.objects.create(
    name="Scent-Honing Prana",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
scent_honing_prana.prerequisites.add(foe_scenting_method)
knowing_beyond_silence = SolarCharm.objects.create(
    name="Knowing Beyond Silence",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
knowing_beyond_silence.prerequisites.add(studied_ear_espial)
living_pulse_perception = SolarCharm.objects.create(
    name="Living Pulse Perception",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
living_pulse_perception.prerequisites.add(eyeless_harbinger_awareness)
roused_dragon_detection = SolarCharm.objects.create(
    name="Roused Dragon Detection",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
roused_dragon_detection.prerequisites.add(
    knowing_beyond_silence, living_pulse_perception
)
unsurpassed_sight_discipline = SolarCharm.objects.create(
    name="Unsurpassed Sight Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unsurpassed_sight_discipline.prerequisites.add(keen_sight_technique)
blink = SolarCharm.objects.create(
    name="Blink",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
blink.prerequisites.add(inner_eye_focus)
unsurpassed_taste_and_smell_discipline = SolarCharm.objects.create(
    name="Unsurpassed Taste and Smell Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unsurpassed_taste_and_smell_discipline.prerequisites.add(keen_taste_and_smell_technique)
unsurpassed_hearing_and_touch_discipline = SolarCharm.objects.create(
    name="Unsurpassed Hearing and Touch Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unsurpassed_hearing_and_touch_discipline.prerequisites.add(
    keen_hearing_and_touch_technique
)
dedicated_unerring_ear = SolarCharm.objects.create(
    name="Dedicated Unerring Ear",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="awareness",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
dedicated_unerring_ear.prerequisites.add(unsurpassed_hearing_and_touch_discipline)
eye_of_the_unconquered_sun = SolarCharm.objects.create(
    name="Eye of the Unconquered Sun",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="awareness",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="turn",
)
# eye_of_the_unconquered_sun.prerequisites.add(awakening_eye, any_3_non_excellency_awareness_charms)

fists_of_iron_technique = SolarCharm.objects.create(
    name="Fists of Iron Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=["dual"],
    duration="Instant",
)
iron_battle_focus = SolarCharm.objects.create(
    name="Iron Battle Focus",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
iron_battle_focus.prerequisites.add(fists_of_iron_technique)
ferocious_jab = SolarCharm.objects.create(
    name="Ferocious Jab",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="",
)
wind_and_stones_defense = SolarCharm.objects.create(
    name="Wind and Stones Defense",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
wind_and_stones_defense.prerequisites.add(ferocious_jab)
heaven_thunder_hammer = SolarCharm.objects.create(
    name="Heaven Thunder Hammer",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
heaven_thunder_hammer.prerequisites.add(ferocious_jab)
vicious_lunge = SolarCharm.objects.create(
    name="Vicious Lunge",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
unbreakable_grasp = SolarCharm.objects.create(
    name="Unbreakable Grasp",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unbreakable_grasp.prerequisites.add(vicious_lunge)
devil_strangling_attitude = SolarCharm.objects.create(
    name="Devil-Strangling Attitude",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Instant",
)
devil_strangling_attitude.prerequisites.add(vicious_lunge)
crashing_wave_throw = SolarCharm.objects.create(
    name="Crashing Wave Throw",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
crashing_wave_throw.prerequisites.add(vicious_lunge)
thunderclap_rush_attack = SolarCharm.objects.create(
    name="Thunderclap Rush Attack",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
falling_hammer_strike = SolarCharm.objects.create(
    name="Falling Hammer Strike",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="Instant",
)
falling_hammer_strike.prerequisites.add(thunderclap_rush_attack)
reckless_fury_discard = SolarCharm.objects.create(
    name="Reckless Fury Discard",
    mote_cost=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="Instant",
)
reckless_fury_discard.prerequisites.add(iron_battle_focus)
solar_cross_counter = SolarCharm.objects.create(
    name="Solar Cross-Counter",
    mote_cost=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["counterattack", "decisive-only", "perilous"],
    duration="Instant",
)
solar_cross_counter.prerequisites.add(reckless_fury_discard)
ox_stunning_blow = SolarCharm.objects.create(
    name="Ox-Stunning Blow",
    mote_cost=4,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=["withering-only"],
    duration="Instant",
)
ox_stunning_blow.prerequisites.add(fists_of_iron_technique)
burning_fist_burial = SolarCharm.objects.create(
    name="Burning Fist Burial",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
burning_fist_burial.prerequisites.add(ferocious_jab)
force_rending_strike = SolarCharm.objects.create(
    name="Force-Rending Strike",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["clash", "decisive-only"],
    duration="Instant",
)
force_rending_strike.prerequisites.add(ferocious_jab)
blade_rebuking_wrath = SolarCharm.objects.create(
    name="Blade-Rebuking Wrath",
    mote_cost=5,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["clash", "uniform"],
    duration="Instant",
)
blade_rebuking_wrath.prerequisites.add(wind_and_stones_defense)
sledgehammer_fist_punch = SolarCharm.objects.create(
    name="Sledgehammer Fist Punch",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
sledgehammer_fist_punch.prerequisites.add(heaven_thunder_hammer)
oak_curling_clinch = SolarCharm.objects.create(
    name="Oak-Curling Clinch",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
oak_curling_clinch.prerequisites.add(vicious_lunge)
burning_proof_of_authority = SolarCharm.objects.create(
    name="Burning Proof of Authority",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
burning_proof_of_authority.prerequisites.add(unbreakable_grasp)
hammer_on_iron_technique = SolarCharm.objects.create(
    name="Hammer on Iron Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
hammer_on_iron_technique.prerequisites.add(falling_hammer_strike)
one_with_violence = SolarCharm.objects.create(
    name="One With Violence",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
one_with_violence.prerequisites.add(falling_hammer_strike)
dancing_with_strife_technique = SolarCharm.objects.create(
    name="Dancing With Strife Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
dancing_with_strife_technique.prerequisites.add(reckless_fury_discard)
knockout_blow = SolarCharm.objects.create(
    name="Knockout Blow",
    mote_cost=5,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["withering-only"],
    duration="Instant",
)
knockout_blow.prerequisites.add(ox_stunning_blow)
cancel_the_apocalypse = SolarCharm.objects.create(
    name="Cancel the Apocalypse",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
cancel_the_apocalypse.prerequisites.add(knockout_blow)
adamantine_fists_of_battle = SolarCharm.objects.create(
    name="Adamantine Fists of Battle",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["dual"],
    duration="Instant",
)
adamantine_fists_of_battle.prerequisites.add(burning_fist_burial)
adamantine_fists_of_battle_2 = SolarCharm.objects.create(
    name="Adamantine Fists of Battle 2",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["dual"],
    duration="Instant",
)
adamantine_fists_of_battle_2.prerequisites.add(adamantine_fists_of_battle)
intercepting_fury_smite = SolarCharm.objects.create(
    name="Intercepting Fury Smite",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
intercepting_fury_smite.prerequisites.add(force_rending_strike)
fire_eating_fist = SolarCharm.objects.create(
    name="Fire-Eating Fist",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
fire_eating_fist.prerequisites.add(intercepting_fury_smite)
river_binding_wrath = SolarCharm.objects.create(
    name="River-Binding Wrath",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
river_binding_wrath.prerequisites.add(oak_curling_clinch)
wicked_dissolve_dust = SolarCharm.objects.create(
    name="Wicked Dissolve Dust",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
wicked_dissolve_dust.prerequisites.add(river_binding_wrath, intercepting_fury_smite)
rapturous_cradle = SolarCharm.objects.create(
    name="Rapturous Cradle",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
rapturous_cradle.prerequisites.add(burning_proof_of_authority)
dragon_coil_technique = SolarCharm.objects.create(
    name="Dragon Coil Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
dragon_coil_technique.prerequisites.add(devil_strangling_attitude)
ten_calamities_technique = SolarCharm.objects.create(
    name="Ten Calamities Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["dual"],
    duration="grapple",
)
ten_calamities_technique.prerequisites.add(dragon_coil_technique)
titan_straightening_method = SolarCharm.objects.create(
    name="Titan-Straightening Method",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["withering-only"],
    duration="Instant",
)
titan_straightening_method.prerequisites.add(ten_calamities_technique)
shockwave_technique = SolarCharm.objects.create(
    name="Shockwave Technique",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["withering-only"],
    duration="Instant",
)
shockwave_technique.prerequisites.add(crashing_wave_throw)
lightning_strikes_twice = SolarCharm.objects.create(
    name="Lightning Strikes Twice",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
lightning_strikes_twice.prerequisites.add(crashing_wave_throw, heaven_thunder_hammer)
fivefold_fury_onslaught = SolarCharm.objects.create(
    name="Fivefold Fury Onslaught",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
fivefold_fury_onslaught.prerequisites.add(hammer_on_iron_technique)
striving_aftershock_method = SolarCharm.objects.create(
    name="Striving Aftershock Method",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
striving_aftershock_method.prerequisites.add(one_with_violence)
superior_violent_knowledge = SolarCharm.objects.create(
    name="Superior Violent Knowledge",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
superior_violent_knowledge.prerequisites.add(striving_aftershock_method)
inevitable_victory_meditation = SolarCharm.objects.create(
    name="Inevitable Victory Meditation",
    mote_cost=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
inevitable_victory_meditation.prerequisites.add(superior_violent_knowledge)
incarnated_fury_attack = SolarCharm.objects.create(
    name="Incarnated Fury Attack",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["withering-only"],
    duration="Instant",
)
incarnated_fury_attack.prerequisites.add(adamantine_fists_of_battle)
orichalcum_fists_of_battle = SolarCharm.objects.create(
    name="Orichalcum Fists of Battle",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="scene",
)
orichalcum_fists_of_battle.prerequisites.add(adamantine_fists_of_battle_2)
raging_wrath_repeated = SolarCharm.objects.create(
    name="Raging Wrath Repeated",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
raging_wrath_repeated.prerequisites.add(ten_calamities_technique)
rampage_berserker_attack = SolarCharm.objects.create(
    name="Rampage-Berserker Attack",
    mote_cost=7,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["perilous", "withering-only"],
    duration="Instant",
)
rampage_berserker_attack.prerequisites.add(fivefold_fury_onslaught)
supremacy_of_war_meditation = SolarCharm.objects.create(
    name="Supremacy of War Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
supremacy_of_war_meditation.prerequisites.add(inevitable_victory_meditation)
apocalypse_flare_attack = SolarCharm.objects.create(
    name="Apocalypse Flare Attack",
    mote_cost=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
apocalypse_flare_attack.prerequisites.add(fire_eating_fist)
heaven_fury_smite = SolarCharm.objects.create(
    name="Heaven Fury Smite",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="brawl",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
heaven_fury_smite.prerequisites.add(rampage_berserker_attack)
ascendant_battle_visage = SolarCharm.objects.create(
    name="Ascendant Battle Visage",
    mote_cost=15,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
ascendant_battle_visage.prerequisites.add(supremacy_of_war_meditation)

frugal_merchant_method = SolarCharm.objects.create(
    name="Frugal Merchant Method",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=1,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
insightful_buyer_technique = SolarCharm.objects.create(
    name="Insightful Buyer Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
insightful_buyer_technique.prerequisites.add(frugal_merchant_method)
consumer_evaluating_glance = SolarCharm.objects.create(
    name="Consumer-Evaluating Glance",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
consumer_evaluating_glance.prerequisites.add(frugal_merchant_method)
all_seeing_master_procurer = SolarCharm.objects.create(
    name="All-Seeing Master Procurer",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
all_seeing_master_procurer.prerequisites.add(consumer_evaluating_glance)
illimitable_master_fence = SolarCharm.objects.create(
    name="Illimitable Master Fence",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
illimitable_master_fence.prerequisites.add(all_seeing_master_procurer)
deft_officials_way = SolarCharm.objects.create(
    name="Deft Official's Way",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
measuring_glance = SolarCharm.objects.create(
    name="Measuring Glance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
measuring_glance.prerequisites.add(deft_officials_way)
enigmatic_bureau_understanding = SolarCharm.objects.create(
    name="Enigmatic Bureau Understanding",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
enigmatic_bureau_understanding.prerequisites.add(measuring_glance)
speed_the_wheels = SolarCharm.objects.create(
    name="Speed the Wheels",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="task",
)
speed_the_wheels.prerequisites.add(deft_officials_way)
bureau_rectifying_method = SolarCharm.objects.create(
    name="Bureau-Rectifying Method",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="investigation",
)
bureau_rectifying_method.prerequisites.add(speed_the_wheels)
enlightened_discourse_method = SolarCharm.objects.create(
    name="Enlightened Discourse Method",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
enlightened_discourse_method.prerequisites.add(
    deft_officials_way, frugal_merchant_method
)
irresistible_salesman_spirit = SolarCharm.objects.create(
    name="Irresistible Salesman Spirit",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
irresistible_salesman_spirit.prerequisites.add(
    consumer_evaluating_glance, insightful_buyer_technique
)
ungoverned_market_awareness = SolarCharm.objects.create(
    name="Ungoverned Market Awareness",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
ungoverned_market_awareness.prerequisites.add(illimitable_master_fence)
bureau_reforming_kata = SolarCharm.objects.create(
    name="Bureau-Reforming Kata",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
bureau_reforming_kata.prerequisites.add(
    bureau_rectifying_method, enigmatic_bureau_understanding
)
indolent_official_charm = SolarCharm.objects.create(
    name="Indolent Official Charm",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["stackable"],
    duration="Indefinite",
)
indolent_official_charm.prerequisites.add(deft_officials_way)
semantic_argument_technique = SolarCharm.objects.create(
    name="Semantic Argument Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
semantic_argument_technique.prerequisites.add(enlightened_discourse_method)
empowered_barter_stance = SolarCharm.objects.create(
    name="Empowered Barter Stance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
empowered_barter_stance.prerequisites.add(irresistible_salesman_spirit)
soul_snaring_pitch = SolarCharm.objects.create(
    name="Soul-Snaring Pitch",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["mute", "psyche"],
    duration="Instant",
)
soul_snaring_pitch.prerequisites.add(irresistible_salesman_spirit)
woe_capturing_web = SolarCharm.objects.create(
    name="Woe-Capturing Web",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
woe_capturing_web.prerequisites.add(bureau_reforming_kata)
omen_spawning_beast = SolarCharm.objects.create(
    name="Omen-Spawning Beast",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
omen_spawning_beast.prerequisites.add(woe_capturing_web)
foul_air_of_argument_technique = SolarCharm.objects.create(
    name="Foul Air of Argument Technique",
    mote_cost=13,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
foul_air_of_argument_technique.prerequisites.add(indolent_official_charm)
eclectic_verbiage_of_law = SolarCharm.objects.create(
    name="Eclectic Verbiage of Law",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
eclectic_verbiage_of_law.prerequisites.add(semantic_argument_technique)
infinitely_efficient_register = SolarCharm.objects.create(
    name="Infinitely-Efficient Register",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
infinitely_efficient_register.prerequisites.add(omen_spawning_beast)
taboo_inflicting_diatribe = SolarCharm.objects.create(
    name="Taboo-Inflicting Diatribe",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["stackable"],
    duration="Indefinite",
)
taboo_inflicting_diatribe.prerequisites.add(foul_air_of_argument_technique)
subject_hailing_ideology = SolarCharm.objects.create(
    name="Subject-Hailing Ideology",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=4,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
subject_hailing_ideology.prerequisites.add(eclectic_verbiage_of_law)
order_conferring_action = SolarCharm.objects.create(
    name="Order-Conferring Action",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=[],
    duration="week",
)
order_conferring_action.prerequisites.add(taboo_inflicting_diatribe)

tireless_workhorse_method = SolarCharm.objects.create(
    name="Tireless Workhorse Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=2,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
efficient_craftsman_technique = SolarCharm.objects.create(
    name="Efficient Craftsman Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
efficient_craftsman_technique.prerequisites.add(tireless_workhorse_method)
arete_shifting_prana = SolarCharm.objects.create(
    name="Arete-Shifting Prana",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=1,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
supreme_celestial_focus = SolarCharm.objects.create(
    name="Supreme Celestial Focus",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
supreme_celestial_focus.prerequisites.add(arete_shifting_prana)
sublime_transference = SolarCharm.objects.create(
    name="Sublime Transference",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
sublime_transference.prerequisites.add(arete_shifting_prana)
ages_echoing_wisdom = SolarCharm.objects.create(
    name="Ages-Echoing Wisdom",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
ages_echoing_wisdom.prerequisites.add(
    efficient_craftsman_technique, sublime_transference
)
dragon_soul_emergence = SolarCharm.objects.create(
    name="Dragon Soul Emergence",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
dragon_soul_emergence.prerequisites.add(ages_echoing_wisdom)
copper_spider_conception = SolarCharm.objects.create(
    name="Copper Spider Conception",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
copper_spider_conception.prerequisites.add(dragon_soul_emergence)
clay_and_breath_practice = SolarCharm.objects.create(
    name="Clay and Breath Practice",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
clay_and_breath_practice.prerequisites.add(copper_spider_conception)
spirit_gathering_industry = SolarCharm.objects.create(
    name="Spirit-Gathering Industry",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
spirit_gathering_industry.prerequisites.add(clay_and_breath_practice)
summit_piercing_touch = SolarCharm.objects.create(
    name="Summit-Piercing Touch",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
summit_piercing_touch.prerequisites.add(ages_echoing_wisdom)
vice_miracle_technique = SolarCharm.objects.create(
    name="Vice-Miracle Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
vice_miracle_technique.prerequisites.add(summit_piercing_touch)
unwinding_gyre_meditation = SolarCharm.objects.create(
    name="Unwinding Gyre Meditation",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unwinding_gyre_meditation.prerequisites.add(spirit_gathering_industry)
god_forge_within = SolarCharm.objects.create(
    name="God-Forge Within",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
god_forge_within.prerequisites.add(spirit_gathering_industry)
exegesis_of_the_distilled_form = SolarCharm.objects.create(
    name="Exegesis of the Distilled Form",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=25,
    goldxp_cost=15,
    whitexp_cost=10,
    statistic="craft",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
exegesis_of_the_distilled_form.prerequisites.add(unwinding_gyre_meditation)
spirit_stoking_elevation = SolarCharm.objects.create(
    name="Spirit-Stoking Elevation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
spirit_stoking_elevation.prerequisites.add(exegesis_of_the_distilled_form)
sun_heart_tenacity = SolarCharm.objects.create(
    name="Sun-Heart Tenacity",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
sun_heart_tenacity.prerequisites.add(god_forge_within)
wonder_forging_genius = SolarCharm.objects.create(
    name="Wonder-Forging Genius",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
wonder_forging_genius.prerequisites.add(god_forge_within, vice_miracle_technique)
dual_magnus_prana = SolarCharm.objects.create(
    name="Dual Magnus Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=30,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
dual_magnus_prana.prerequisites.add(terrestrial_circle_sorcery, wonder_forging_genius)
brass_scales_falling = SolarCharm.objects.create(
    name="Brass Scales Falling",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
red_anvils_ringing = SolarCharm.objects.create(
    name="Red Anvils Ringing",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=4,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
red_anvils_ringing.prerequisites.add(brass_scales_falling)
chains_fall_away = SolarCharm.objects.create(
    name="Chains Fall Away",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
chains_fall_away.prerequisites.add(red_anvils_ringing)
craftsman_needs_no_tools = SolarCharm.objects.create(
    name="Craftsman Needs No Tools",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="task",
)
peerless_paragon_of_craft = SolarCharm.objects.create(
    name="Peerless Paragon of Craft",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
peerless_paragon_of_craft.prerequisites.add(chains_fall_away, craftsman_needs_no_tools)
supreme_perfection_of_craft = SolarCharm.objects.create(
    name="Supreme Perfection of Craft",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
supreme_perfection_of_craft.prerequisites.add(
    peerless_paragon_of_craft, supreme_celestial_focus
)
thousand_forge_hands = SolarCharm.objects.create(
    name="Thousand-Forge Hands",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
thousand_forge_hands.prerequisites.add(craftsman_needs_no_tools)
divine_transcendence_of_craft = SolarCharm.objects.create(
    name="Divine Transcendence of Craft",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
divine_transcendence_of_craft.prerequisites.add(supreme_perfection_of_craft)
words_as_workshop_method = SolarCharm.objects.create(
    name="Words-as-Workshop Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["mute", "stackable"],
    duration="Instant",
)
words_as_workshop_method.prerequisites.add(
    craftsman_needs_no_tools, vice_miracle_technique
)
shattering_grasp = SolarCharm.objects.create(
    name="Shattering Grasp",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="task",
)
shattering_grasp.prerequisites.add(craftsman_needs_no_tools)
durability_enhancing_technique = SolarCharm.objects.create(
    name="Durability-Enhancing Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
durability_enhancing_technique.prerequisites.add(craftsman_needs_no_tools)
crack_mending_technique = SolarCharm.objects.create(
    name="Crack-Mending Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
time_heals_nothing = SolarCharm.objects.create(
    name="Time Heals Nothing",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
time_heals_nothing.prerequisites.add(crack_mending_technique)
blood_diamond_sweat = SolarCharm.objects.create(
    name="Blood Diamond Sweat",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
blood_diamond_sweat.prerequisites.add(time_heals_nothing)
object_strengthening_touch = SolarCharm.objects.create(
    name="Object-Strengthening Touch",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="scene",
)
object_strengthening_touch.prerequisites.add(durability_enhancing_technique)
chaos_resistance_preparation = SolarCharm.objects.create(
    name="Chaos-Resistance Preparation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
chaos_resistance_preparation.prerequisites.add(object_strengthening_touch)
breach_healing_method = SolarCharm.objects.create(
    name="Breach-Healing Method",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="task",
)
breach_healing_method.prerequisites.add(time_heals_nothing)
design_beyond_limit = SolarCharm.objects.create(
    name="Design Beyond Limit",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
design_beyond_limit.prerequisites.add(crack_mending_technique, craftsman_needs_no_tools)
the_art_of_permanence = SolarCharm.objects.create(
    name="The Art of Permanence",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=1,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
the_art_of_permanence.prerequisites.add(chaos_resistance_preparation)
realizing_the_form_supernal = SolarCharm.objects.create(
    name="Realizing the Form Supernal",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
realizing_the_form_supernal.prerequisites.add(breach_healing_method)
celestial_reforging_technique = SolarCharm.objects.create(
    name="Celestial Reforging Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
celestial_reforging_technique.prerequisites.add(design_beyond_limit)
flawless_handiwork_method = SolarCharm.objects.create(
    name="Flawless Handiwork Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=1,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
triumph_forging_eye = SolarCharm.objects.create(
    name="Triumph-Forging Eye",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=2,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
triumph_forging_eye.prerequisites.add(flawless_handiwork_method)
supreme_masterwork_focus = SolarCharm.objects.create(
    name="Supreme Masterwork Focus",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
supreme_masterwork_focus.prerequisites.add(flawless_handiwork_method)
supreme_masterwork_focus_2 = SolarCharm.objects.create(
    name="Supreme Masterwork Focus 2",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
supreme_masterwork_focus_2.prerequisites.add(supreme_masterwork_focus)
bright_forging_prana = SolarCharm.objects.create(
    name="Bright-Forging Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
bright_forging_prana.prerequisites.add(flawless_handiwork_method)
experiential_conjuring_of_true_void = SolarCharm.objects.create(
    name="Experiential Conjuring of True Void",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=4,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=["salient"],
    duration="Instant",
)
experiential_conjuring_of_true_void.prerequisites.add(flawless_handiwork_method)
unbroken_image_focus = SolarCharm.objects.create(
    name="Unbroken Image Focus",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=1,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["salient"],
    duration="Instant",
)
unbroken_image_focus.prerequisites.add(experiential_conjuring_of_true_void)
first_movement_of_the_demiurge = SolarCharm.objects.create(
    name="First Movement of the Demiurge",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
first_movement_of_the_demiurge.prerequisites.add(experiential_conjuring_of_true_void)
essence_forging_kata = SolarCharm.objects.create(
    name="Essence-Forging Kata",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="day",
)
essence_forging_kata.prerequisites.add(unbroken_image_focus)
mind_expanding_meditation = SolarCharm.objects.create(
    name="Mind-Expanding Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=1,
    goldxp_cost=0,
    whitexp_cost=1,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
mind_expanding_meditation.prerequisites.add(essence_forging_kata)
inspiration_renewing_vision = SolarCharm.objects.create(
    name="Inspiration-Renewing Vision",
    mote_cost=12,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=2,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
inspiration_renewing_vision.prerequisites.add(
    essence_forging_kata, supreme_masterwork_focus_2
)
divine_inspiration_technique = SolarCharm.objects.create(
    name="Divine Inspiration Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
divine_inspiration_technique.prerequisites.add(
    first_movement_of_the_demiurge, supreme_masterwork_focus_2
)
horizon_unveiling_insight = SolarCharm.objects.create(
    name="Horizon-Unveiling Insight",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
horizon_unveiling_insight.prerequisites.add(inspiration_renewing_vision)
holistic_miracle_understanding = SolarCharm.objects.create(
    name="Holistic Miracle Understanding",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
holistic_miracle_understanding.prerequisites.add(divine_inspiration_technique)

reed_in_the_wind = SolarCharm.objects.create(
    name="Reed in the Wind",
    mote_cost=0,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="Instant",
)
dust_motes_whirling = SolarCharm.objects.create(
    name="Dust Motes Whirling",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
dust_motes_whirling.prerequisites.add(reed_in_the_wind)
shadow_dancer_method = SolarCharm.objects.create(
    name="Shadow Dancer Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
shadow_dancer_method.prerequisites.add(dust_motes_whirling)
reflex_sidestep_technique = SolarCharm.objects.create(
    name="Reflex Sidestep Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
reflex_sidestep_technique.prerequisites.add(reed_in_the_wind)
leaping_dodge_method = SolarCharm.objects.create(
    name="Leaping Dodge Method",
    mote_cost=1,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
leaping_dodge_method.prerequisites.add(reflex_sidestep_technique)
searing_quicksilver_flight = SolarCharm.objects.create(
    name="Searing Quicksilver Flight",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=4,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
searing_quicksilver_flight.prerequisites.add(reed_in_the_wind)
drifting_leaf_elusion = SolarCharm.objects.create(
    name="Drifting Leaf Elusion",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
shadow_over_water = SolarCharm.objects.create(
    name="Shadow Over Water",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
shadow_over_water.prerequisites.add(drifting_leaf_elusion)
fleet_dreaming_image = SolarCharm.objects.create(
    name="Fleet Dreaming Image",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
fleet_dreaming_image.prerequisites.add(dust_motes_whirling)
drifting_shadow_focus = SolarCharm.objects.create(
    name="Drifting Shadow Focus",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
drifting_shadow_focus.prerequisites.add(reflex_sidestep_technique)
force_stealing_feint = SolarCharm.objects.create(
    name="Force-Stealing Feint",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
force_stealing_feint.prerequisites.add(searing_quicksilver_flight)
seven_shadow_evasion = SolarCharm.objects.create(
    name="Seven Shadow Evasion",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
seven_shadow_evasion.prerequisites.add(force_stealing_feint)
safety_between_heartbeats = SolarCharm.objects.create(
    name="Safety Between Heartbeats",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
safety_between_heartbeats.prerequisites.add(force_stealing_feint)
fourfold_shiver_binding = SolarCharm.objects.create(
    name="Fourfold Shiver Binding",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
fourfold_shiver_binding.prerequisites.add(drifting_leaf_elusion)
flow_like_blood = SolarCharm.objects.create(
    name="Flow Like Blood",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="scene",
)
flow_like_blood.prerequisites.add(shadow_over_water)
rumor_of_form = SolarCharm.objects.create(
    name="Rumor of Form",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
rumor_of_form.prerequisites.add(shadow_over_water)
way_of_whispers_technique = SolarCharm.objects.create(
    name="Way of Whispers Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
way_of_whispers_technique.prerequisites.add(rumor_of_form)
vaporous_division = SolarCharm.objects.create(
    name="Vaporous Division",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
vaporous_division.prerequisites.add(rumor_of_form)
sunlight_bleeding_away = SolarCharm.objects.create(
    name="Sunlight Bleeding Away",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
sunlight_bleeding_away.prerequisites.add(fleet_dreaming_image)
thousand_steps_stillness = SolarCharm.objects.create(
    name="Thousand Steps' Stillness",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
thousand_steps_stillness.prerequisites.add(safety_between_heartbeats)
unbowed_willow_meditation = SolarCharm.objects.create(
    name="Unbowed Willow Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unbowed_willow_meditation.prerequisites.add(thousand_steps_stillness)
hundred_shadow_ways = SolarCharm.objects.create(
    name="Hundred Shadow Ways",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["stackable"],
    duration="scene",
)
hundred_shadow_ways.prerequisites.add(vaporous_division)
living_bonds_unburdened = SolarCharm.objects.create(
    name="Living Bonds Unburdened",
    mote_cost=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
living_bonds_unburdened.prerequisites.add(vaporous_division)
unbridled_shade_attitude = SolarCharm.objects.create(
    name="Unbridled Shade Attitude",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unbridled_shade_attitude.prerequisites.add(living_bonds_unburdened)
harm_dismissing_meditation = SolarCharm.objects.create(
    name="Harm-Dismissing Meditation",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="turn",
)
harm_dismissing_meditation.prerequisites.add(living_bonds_unburdened)
refinement_of_flowing_shadows = SolarCharm.objects.create(
    name="Refinement of Flowing Shadows",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=["perilous"],
    duration="Instant",
)
refinement_of_flowing_shadows.prerequisites.add(seven_shadow_evasion)

enduring_mental_toughness = SolarCharm.objects.create(
    name="Enduring Mental Toughness",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Instant",
)
# None or any 5 presence, resistance, or socialize charms
stubborn_boar_defense = SolarCharm.objects.create(
    name="Stubborn Boar Defense",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=2,
    min_essence=1,
    charm_type="permanent",
    keywords=["bridge"],
    duration="Permanent",
)
# None or any 3 bureaucracy, presence, war charms
integrity_protecting_prana = SolarCharm.objects.create(
    name="Integrity-Protecting Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
destiny_manifesting_method = SolarCharm.objects.create(
    name="Destiny-Manifesting Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=1,
    min_essence=1,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
# Any 10 in one ability
legend_soul_revival = SolarCharm.objects.create(
    name="Legend-Soul Revival",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
legend_soul_revival.prerequisites.add(destiny_manifesting_method)
spirit_maintaining_maneuver = SolarCharm.objects.create(
    name="Spirit-Maintaining Maneuver",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
spirit_maintaining_maneuver.prerequisites.add(enduring_mental_toughness)
undying_solar_resolve = SolarCharm.objects.create(
    name="Undying Solar Resolve",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=["bridge"],
    duration="Permanent",
)
# stubborn_boar_defense or any 8 social charms
undying_solar_resolve.prerequisites.add(stubborn_boar_defense)
temptation_resisting_stance = SolarCharm.objects.create(
    name="Temptation-Resisting Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
temptation_resisting_stance.prerequisites.add(stubborn_boar_defense)
mind_cleansing_prana = SolarCharm.objects.create(
    name="Mind-Cleansing Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["bridge", "mute"],
    duration="Instant",
)
# temptation_resisting_stance or 6 martial arts charms
mind_cleansing_prana.prerequisites.add(temptation_resisting_stance)
clear_mind_discipline = SolarCharm.objects.create(
    name="Clear Mind Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Instant",
)
# mind_cleansing_prana or 3 martial_arts charms
clear_mind_discipline.prerequisites.add(mind_cleansing_prana)
energy_restoration_prana = SolarCharm.objects.create(
    name="Energy Restoration Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Instant",
)
# mind_cleansing_prana or 3 martial_arts charms
energy_restoration_prana.prerequisites.add(mind_cleansing_prana)
steel_heart_stance = SolarCharm.objects.create(
    name="Steel Heart Stance",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Instant",
)
# stubborn_boar_defense or any 4 archery, brawl, melee, thrown, or war charms
steel_heart_stance.prerequisites.add(stubborn_boar_defense)
righteous_lion_defense = SolarCharm.objects.create(
    name="Righteous Lion Defense",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["bridge"],
    duration="Permanent",
)
# steel_heart_stance or any 5 charms reflecting the principle being defended
righteous_lion_defense.prerequisites.add(steel_heart_stance)
watchful_eyes_of_heaven = SolarCharm.objects.create(
    name="Watchful Eyes of Heaven",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
watchful_eyes_of_heaven.prerequisites.add(righteous_lion_defense)
accord_of_the_unbreakable_spirit = SolarCharm.objects.create(
    name="Accord of the Unbreakable Spirit",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["bridge"],
    duration="hour",
)
# integrity_protecting_prana or any 3 bureaucracy, performance, or socialize charms
accord_of_the_unbreakable_spirit.prerequisites.add(integrity_protecting_prana)
phoenix_renewal_tactic = SolarCharm.objects.create(
    name="Phoenix Renewal Tactic",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
phoenix_renewal_tactic.prerequisites.add(destiny_manifesting_method)
sun_king_radiance = SolarCharm.objects.create(
    name="Sun King Radiance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
# any 5 performance, presence, or socialize charms
soul_nourishing_technique = SolarCharm.objects.create(
    name="Soul-Nourishing Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
soul_nourishing_technique.prerequisites.add(sun_king_radiance)
spirit_tempering_practice = SolarCharm.objects.create(
    name="Spirit-Tempering Practice",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
spirit_tempering_practice.prerequisites.add(spirit_maintaining_maneuver)
empowered_soul_technique = SolarCharm.objects.create(
    name="Empowered Soul Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["bridge"],
    duration="Instant",
)
# spirit_tempering_practice or any 5 lore, presence, or socialize charms
empowered_soul_technique.prerequisites.add(spirit_tempering_practice)
transcendent_heros_meditation = SolarCharm.objects.create(
    name="Transcendent Hero's Meditation",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
transcendent_heros_meditation.prerequisites.add(spirit_maintaining_maneuver)
righteous_soul_judgment = SolarCharm.objects.create(
    name="Righteous Soul Judgment",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
# undying_solar_resolve or any 5 athletics, resistance, or survival charms
righteous_soul_judgment.prerequisites.add(undying_solar_resolve)
barque_of_transcendent_vision = SolarCharm.objects.create(
    name="Barque of Transcendent Vision",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["bridge"],
    duration="Instant",
)
# mind_cleansing_prana or any 3 martial_arts charms
barque_of_transcendent_vision.prerequisites.add(mind_cleansing_prana)
unhesitating_dedication = SolarCharm.objects.create(
    name="Unhesitating Dedication",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unhesitating_dedication.prerequisites.add(righteous_lion_defense)
invincible_solar_aegis = SolarCharm.objects.create(
    name="Invincible Solar Aegis",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Indefinite",
)
# righteous_lion_defense or any 6 charms that reflect the focal principle
invincible_solar_aegis.prerequisites.add(righteous_lion_defense)
eminent_paragon_approach = SolarCharm.objects.create(
    name="Eminent Paragon Approach",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["bridge"],
    duration="Instant",
)
# soul_nourishing_technique or any 5 charms
eminent_paragon_approach.prerequisites.add(soul_nourishing_technique)
divine_mantle = SolarCharm.objects.create(
    name="Divine Mantle",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["bridge"],
    duration="Instant",
)
# eminent_paragon_approach, invincible_solar_aegis or any 15 caste charms
divine_mantle.prerequisites.add(eminent_paragon_approach, invincible_solar_aegis)
body_restoring_benison = SolarCharm.objects.create(
    name="Body-Restoring Benison",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=["bridge"],
    duration="Permanent",
)
# barque_of_transcendant_vision or 5 martial_arts charms
body_restoring_benison.prerequisites.add(barque_of_transcendent_vision)
inviolable_essence_merging = SolarCharm.objects.create(
    name="Inviolable Essence-Merging",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
inviolable_essence_merging.prerequisites.add(
    body_restoring_benison, energy_restoration_prana
)

watchmans_infallible_eye = SolarCharm.objects.create(
    name="Watchman's Infallible Eye",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
inquisitors_unfailing_notice = SolarCharm.objects.create(
    name="Inquisitor's Unfailing Notice",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=2,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
inquisitors_unfailing_notice.prerequisites.add(watchmans_infallible_eye)
crafty_observation_method = SolarCharm.objects.create(
    name="Crafty Observation Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
crafty_observation_method.prerequisites.add(watchmans_infallible_eye)
divine_induction_technique = SolarCharm.objects.create(
    name="Divine Induction Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=4,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
divine_induction_technique.prerequisites.add(crafty_observation_method)
evidence_discerning_method = SolarCharm.objects.create(
    name="Evidence-Discerning Method",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
evidence_discerning_method.prerequisites.add(crafty_observation_method)
judges_ear_technique = SolarCharm.objects.create(
    name="Judge's Ear Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
judges_ear_technique.prerequisites.add(crafty_observation_method)
miraculous_stunning_insight = SolarCharm.objects.create(
    name="Miraculous Stunning Insight",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["mute"],
    duration="Permanent",
)
miraculous_stunning_insight.prerequisites.add(divine_induction_technique)
watchful_justiciars_eye = SolarCharm.objects.create(
    name="Watchful Justiciar's Eye",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
watchful_justiciars_eye.prerequisites.add(evidence_discerning_method)
irresistible_questioning_technique = SolarCharm.objects.create(
    name="Irresistible Questioning Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
irresistible_questioning_technique.prerequisites.add(judges_ear_technique)
dauntless_inquisitor_attitude = SolarCharm.objects.create(
    name="Dauntless Inquisitor Attitude",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="scene",
)
dauntless_inquisitor_attitude.prerequisites.add(miraculous_stunning_insight)
evidence_restoring_prana = SolarCharm.objects.create(
    name="Evidence-Restoring Prana",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Varies",
)
evidence_restoring_prana.prerequisites.add(evidence_discerning_method)
ten_magistrate_eyes = SolarCharm.objects.create(
    name="Ten Magistrate Eyes",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
ten_magistrate_eyes.prerequisites.add(evidence_discerning_method, judges_ear_technique)
unknown_wisdom_epiphany = SolarCharm.objects.create(
    name="Unknown Wisdom Epiphany",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
unknown_wisdom_epiphany.prerequisites.add(ten_magistrate_eyes)
enlightened_touch_insight = SolarCharm.objects.create(
    name="Enlightened Touch Insight",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
enlightened_touch_insight.prerequisites.add(unknown_wisdom_epiphany)
judge_generals_stance = SolarCharm.objects.create(
    name="Judge-General's Stance",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
judge_generals_stance.prerequisites.add(dauntless_inquisitor_attitude)
empathic_recall_discipline = SolarCharm.objects.create(
    name="Empathic Recall Discipline",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
empathic_recall_discipline.prerequisites.add(enlightened_touch_insight)
mind_manse_meditation = SolarCharm.objects.create(
    name="Mind Manse Meditation",
    mote_cost=12,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
mind_manse_meditation.prerequisites.add(
    empathic_recall_discipline, evidence_restoring_prana
)

seasoned_criminal_method = SolarCharm.objects.create(
    name="Seasoned Criminal Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=1,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
spurious_presence = SolarCharm.objects.create(
    name="Spurious Presence",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
spurious_presence.prerequisites.add(seasoned_criminal_method)
preying_on_uncertainty_approach = SolarCharm.objects.create(
    name="Preying on Uncertainty Approach",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
preying_on_uncertainty_approach.prerequisites.add(spurious_presence)
clever_bandits_rook = SolarCharm.objects.create(
    name="Clever Bandit's Rook",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
clever_bandits_rook.prerequisites.add(seasoned_criminal_method)
swift_gamblers_eye = SolarCharm.objects.create(
    name="Swift Gambler's Eye",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
lightning_hand_sleight = SolarCharm.objects.create(
    name="Lightning-Hand Sleight",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
lightning_hand_sleight.prerequisites.add(swift_gamblers_eye)
flawless_pickpocketing_technique = SolarCharm.objects.create(
    name="Flawless Pickpocketing Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
lock_opening_touch = SolarCharm.objects.create(
    name="Lock-Opening Touch",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
flawlessly_impenetrable_disguise = SolarCharm.objects.create(
    name="Flawlessly Impenetrable Disguise",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="sleeps",
)
phantom_hood_technique = SolarCharm.objects.create(
    name="Phantom Hood Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
phantom_hood_technique.prerequisites.add(preying_on_uncertainty_approach)
doubt_sealing_heist = SolarCharm.objects.create(
    name="Doubt-Sealing Heist",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
doubt_sealing_heist.prerequisites.add(clever_bandits_rook)
living_shadow_preparedness = SolarCharm.objects.create(
    name="Living Shadow Preparedness",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unshakable_rogues_spirit = SolarCharm.objects.create(
    name="Unshakable Rogue's Spirit",
    mote_cost=0,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unshakable_rogues_spirit.prerequisites.add(living_shadow_preparedness)
master_plan_meditation = SolarCharm.objects.create(
    name="Master Plan Meditation",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
master_plan_meditation.prerequisites.add(unshakable_rogues_spirit)
proof_eating_palm = SolarCharm.objects.create(
    name="Proof-Eating Palm",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
proof_eating_palm.prerequisites.add(lightning_hand_sleight)
stealing_from_plain_sight_spirit = SolarCharm.objects.create(
    name="Stealing From Plain Sight Spirit",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
stealing_from_plain_sight_spirit.prerequisites.add(flawless_pickpocketing_technique)
magpies_invisible_talon = SolarCharm.objects.create(
    name="Magpie's Invisible Talon",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
magpies_invisible_talon.prerequisites.add(stealing_from_plain_sight_spirit)
perfect_mirror = SolarCharm.objects.create(
    name="Perfect Mirror",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["mute"],
    duration="Permanent",
)
perfect_mirror.prerequisites.add(flawlessly_impenetrable_disguise)
fate_shifting_solar_arete = SolarCharm.objects.create(
    name="Fate-Shifting Solar Arete",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
fate_shifting_solar_arete.prerequisites.add(
    lightning_hand_sleight, unshakable_rogues_spirit
)
skillful_reappropriation_phantom_sting_search = SolarCharm.objects.create(
    name="Skillful Reappropriation (Phantom Sting Search)",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
skillful_reappropriation_phantom_sting_search.prerequisites.add(magpies_invisible_talon)
reversal_of_fortune = SolarCharm.objects.create(
    name="Reversal of Fortune",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
reversal_of_fortune.prerequisites.add(flawless_pickpocketing_technique)
iron_wolves_grasp = SolarCharm.objects.create(
    name="Iron Wolves' Grasp",
    mote_cost=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
iron_wolves_grasp.prerequisites.add(
    stealing_from_plain_sight_spirit, reversal_of_fortune
)
door_evading_technique = SolarCharm.objects.create(
    name="Door-Evading Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=4,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
door_evading_technique.prerequisites.add(lock_opening_touch)
flashing_ruse_prana = SolarCharm.objects.create(
    name="Flashing Ruse Prana",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
flashing_ruse_prana.prerequisites.add(flawlessly_impenetrable_disguise)
split_deception_method = SolarCharm.objects.create(
    name="Split Deception Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
split_deception_method.prerequisites.add(perfect_mirror)
null_anima_gloves = SolarCharm.objects.create(
    name="Null Anima Gloves",
    mote_cost=12,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
null_anima_gloves.prerequisites.add(
    iron_wolves_grasp, proof_eating_palm, skillful_reappropriation_phantom_sting_search
)
nights_eye_meditation = SolarCharm.objects.create(
    name="Night's Eye Meditation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
nights_eye_meditation.prerequisites.add(null_anima_gloves)
unbroken_darkness_approach = SolarCharm.objects.create(
    name="Unbroken Darkness Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="larceny",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
unbroken_darkness_approach.prerequisites.add(nights_eye_meditation)

whirling_brush_method = SolarCharm.objects.create(
    name="Whirling Brush Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute", "written-only"],
    duration="",
)
flawless_brush_discipline = SolarCharm.objects.create(
    name="Flawless Brush Discipline",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["written-only"],
    duration="Instant",
)
flawless_brush_discipline.prerequisites.add(whirling_brush_method)
letter_within_a_letter_technique = SolarCharm.objects.create(
    name="Letter-Within-A-Letter Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mute", "written-only"],
    duration="",
)
subtle_speech_method = SolarCharm.objects.create(
    name="Subtle Speech Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="conveyed",
)
flowing_elegant_hand = SolarCharm.objects.create(
    name="Flowing Elegant Hand",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mute", "written-only"],
    duration="",
)
strange_tongue_understanding = SolarCharm.objects.create(
    name="Strange Tongue Understanding",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
poetic_expression_style = SolarCharm.objects.create(
    name="Poetic Expression Style",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=4,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
poetic_expression_style.prerequisites.add(strange_tongue_understanding)
mingled_tongue_technique = SolarCharm.objects.create(
    name="Mingled Tongue Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
sagacious_reading_of_intent = SolarCharm.objects.create(
    name="Sagacious Reading of Intent",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
word_shield_invocation = SolarCharm.objects.create(
    name="Word-Shield Invocation",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
word_shield_invocation.prerequisites.add(sagacious_reading_of_intent)
stolen_voice_technique = SolarCharm.objects.create(
    name="Stolen Voice Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["written-only"],
    duration="Instant",
)
stolen_voice_technique.prerequisites.add(flawless_brush_discipline)
moving_the_unseen_hand = SolarCharm.objects.create(
    name="Moving the Unseen Hand",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["mute", "written-only"],
    duration="Instant",
)
moving_the_unseen_hand.prerequisites.add(stolen_voice_technique)
essence_laden_missive = SolarCharm.objects.create(
    name="Essence-Laden Missive",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute", "psyche", "written-only"],
    duration="Instant",
)
essence_laden_missive.prerequisites.add(letter_within_a_letter_technique)
voice_caging_calligraphy = SolarCharm.objects.create(
    name="Voice-Caging Calligraphy",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute", "psyche", "written-only"],
    duration="Instant",
)
voice_caging_calligraphy.prerequisites.add(essence_laden_missive)
single_voice_kata = SolarCharm.objects.create(
    name="Single Voice Kata",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
single_voice_kata.prerequisites.add(mingled_tongue_technique)
vanishing_immersion_style = SolarCharm.objects.create(
    name="Vanishing Immersion Style",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
vanishing_immersion_style.prerequisites.add(word_shield_invocation)
discerning_savants_eye = SolarCharm.objects.create(
    name="Discerning Savant's Eye",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
discerning_savants_eye.prerequisites.add(sagacious_reading_of_intent)
power_snaring_image = SolarCharm.objects.create(
    name="Power-Snaring Image",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["written-only"],
    duration="Instant",
)
power_snaring_image.prerequisites.add(stolen_voice_technique)
flashing_quill_atemi = SolarCharm.objects.create(
    name="Flashing Quill Atemi",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["written-only"],
    duration="minute",
)
flashing_quill_atemi.prerequisites.add(power_snaring_image)
mind_swallowing_missive = SolarCharm.objects.create(
    name="Mind-Swallowing Missive",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["psyche", "written-only"],
    duration="Indefinite",
)
mind_swallowing_missive.prerequisites.add(essence_laden_missive)
cup_boils_over = SolarCharm.objects.create(
    name="Cup Boils Over",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["written-only"],
    duration="Instant",
)
cup_boils_over.prerequisites.add(mind_swallowing_missive, voice_caging_calligraphy)
twisted_words_technique = SolarCharm.objects.create(
    name="Twisted Words Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["psyche"],
    duration="Instant",
)
twisted_words_technique.prerequisites.add(
    flowing_elegant_hand, letter_within_a_letter_technique, subtle_speech_method
)
perfect_recollection_discipline = SolarCharm.objects.create(
    name="Perfect Recollection Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
perfect_recollection_discipline.prerequisites.add(discerning_savants_eye)
excellent_emissarys_tongue = SolarCharm.objects.create(
    name="Excellent Emissary's Tongue",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
excellent_emissarys_tongue.prerequisites.add(
    single_voice_kata, strange_tongue_understanding
)
swift_sages_eye = SolarCharm.objects.create(
    name="Swift Sage's Eye",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="text",
)
swift_sages_eye.prerequisites.add(perfect_recollection_discipline)
mind_scribing_method = SolarCharm.objects.create(
    name="Mind-Scribing Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
mind_scribing_method.prerequisites.add(perfect_recollection_discipline)
heaven_drawing_discipline = SolarCharm.objects.create(
    name="Heaven-Drawing Discipline",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
heaven_drawing_discipline.prerequisites.add(mind_scribing_method)
perfect_celestial_author = SolarCharm.objects.create(
    name="Perfect Celestial Author",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=["written-only"],
    duration="Permanent",
)
perfect_celestial_author.prerequisites.add(flashing_quill_atemi)
unbreakable_fascination_method = SolarCharm.objects.create(
    name="Unbreakable Fascination Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="linguistics",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["psyche"],
    duration="Instant",
)
unbreakable_fascination_method.prerequisites.add(twisted_words_technique)

wyld_dispelling_prana = SolarCharm.objects.create(
    name="Wyld-Dispelling Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Varies",
)
chaos_repelling_pattern = SolarCharm.objects.create(
    name="Chaos-Repelling Pattern",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="hour",
)
chaos_repelling_pattern.prerequisites.add(wyld_dispelling_prana)
harmonious_academic_methodology = SolarCharm.objects.create(
    name="Harmonious Academic Methodology",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
first_knowledges_grace = SolarCharm.objects.create(
    name="First Knowledge's Grace",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
first_knowledges_grace.prerequisites.add(harmonious_academic_methodology)
flowing_mind_prana = SolarCharm.objects.create(
    name="Flowing Mind Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
flowing_mind_prana.prerequisites.add(first_knowledges_grace)
essence_lending_method = SolarCharm.objects.create(
    name="Essence-Lending Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=1,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
will_bolstering_method = SolarCharm.objects.create(
    name="Will-Bolstering Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
will_bolstering_method.prerequisites.add(essence_lending_method)
hidden_wisdom_bestowal = SolarCharm.objects.create(
    name="Hidden Wisdom Bestowal",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute"],
    duration="scene",
)
hidden_wisdom_bestowal.prerequisites.add(flowing_mind_prana)
tireless_learner_method = SolarCharm.objects.create(
    name="Tireless Learner Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
tireless_learner_method.prerequisites.add(flowing_mind_prana)
bottomless_wellspring_approach = SolarCharm.objects.create(
    name="Bottomless Wellspring Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
bottomless_wellspring_approach.prerequisites.add(harmonious_academic_methodology)
lore_inducing_concentration = SolarCharm.objects.create(
    name="Lore-Inducing Concentration",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
lore_inducing_concentration.prerequisites.add(bottomless_wellspring_approach)
truth_rendering_gaze = SolarCharm.objects.create(
    name="Truth-Rendering Gaze",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
truth_rendering_gaze.prerequisites.add(lore_inducing_concentration)
wound_accepting_technique = SolarCharm.objects.create(
    name="Wound-Accepting Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wound_accepting_technique.prerequisites.add(will_bolstering_method)
essence_font_technique = SolarCharm.objects.create(
    name="Essence Font Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
essence_font_technique.prerequisites.add(will_bolstering_method)
legendary_scholars_curriculum = SolarCharm.objects.create(
    name="Legendary Scholar's Curriculum",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
legendary_scholars_curriculum.prerequisites.add(flowing_mind_prana)
selfsame_master_instructor = SolarCharm.objects.create(
    name="Selfsame Master Instructor",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
selfsame_master_instructor.prerequisites.add(legendary_scholars_curriculum)
sacred_relic_understanding = SolarCharm.objects.create(
    name="Sacred Relic Understanding",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
sacred_relic_understanding.prerequisites.add(truth_rendering_gaze)
wake_the_sleeper = SolarCharm.objects.create(
    name="Wake the Sleeper",
    mote_cost=15,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wake_the_sleeper.prerequisites.add(sacred_relic_understanding)
heaven_turning_calculations = SolarCharm.objects.create(
    name="Heaven-Turning Calculations",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
heaven_turning_calculations.prerequisites.add(truth_rendering_gaze)
injury_forcing_technique = SolarCharm.objects.create(
    name="Injury-Forcing Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
injury_forcing_technique.prerequisites.add(wound_accepting_technique)
essence_draining_touch = SolarCharm.objects.create(
    name="Essence-Draining Touch",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
essence_draining_touch.prerequisites.add(injury_forcing_technique)
essence_twining_method = SolarCharm.objects.create(
    name="Essence-Twining Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
essence_twining_method.prerequisites.add(essence_draining_touch)
force_draining_whisper = SolarCharm.objects.create(
    name="Force-Draining Whisper",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["clash", "decisive-only"],
    duration="Instant",
)
force_draining_whisper.prerequisites.add(essence_draining_touch)
immanent_solar_glory = SolarCharm.objects.create(
    name="Immanent Solar Glory",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
immanent_solar_glory.prerequisites.add(essence_font_technique)
flowing_essence_conversion = SolarCharm.objects.create(
    name="Flowing Essence Conversion",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
flowing_essence_conversion.prerequisites.add(immanent_solar_glory)
power_restoring_invocation = SolarCharm.objects.create(
    name="Power-Restoring Invocation",
    mote_cost=0,
    initiative_cost=2,
    anima_cost=3,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["perilous"],
    duration="Instant",
)
power_restoring_invocation.prerequisites.add(flowing_essence_conversion)
surging_essence_flow = SolarCharm.objects.create(
    name="Surging Essence Flow",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
surging_essence_flow.prerequisites.add(flowing_essence_conversion)
order_affirming_blow = SolarCharm.objects.create(
    name="Order-Affirming Blow",
    mote_cost=15,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wyld_shaping_technique = SolarCharm.objects.create(
    name="Wyld-Shaping Technique",
    mote_cost=15,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wyld_shaping_technique.prerequisites.add(
    chaos_repelling_pattern, order_affirming_blow, truth_rendering_gaze
)
hero_induction_method = SolarCharm.objects.create(
    name="Hero-Induction Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
hero_induction_method.prerequisites.add(wyld_shaping_technique)
wyld_cauldron_mastery = SolarCharm.objects.create(
    name="Wyld Cauldron Mastery",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
wyld_cauldron_mastery.prerequisites.add(wyld_shaping_technique)
wyld_called_weapon = SolarCharm.objects.create(
    name="Wyld-Called Weapon",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
wyld_called_weapon.prerequisites.add(wyld_shaping_technique)
wyld_forging_focus = SolarCharm.objects.create(
    name="Wyld-Forging Focus",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
wyld_forging_focus.prerequisites.add(wyld_shaping_technique)
tome_rearing_gesture = SolarCharm.objects.create(
    name="Tome-Rearing Gesture",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
tome_rearing_gesture.prerequisites.add(wyld_shaping_technique, mind_scribing_method)
power_awarding_prana = SolarCharm.objects.create(
    name="Power-Awarding Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["mute", "stackable"],
    duration="Indefinite",
)
power_awarding_prana.prerequisites.add(
    essence_font_technique, selfsame_master_instructor
)
prophet_of_seventeen_cycles = SolarCharm.objects.create(
    name="Prophet of Seventeen Cycles",
    mote_cost=12,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
prophet_of_seventeen_cycles.prerequisites.add(truth_rendering_gaze)
will_shattering_illusion = SolarCharm.objects.create(
    name="Will-Shattering Illusion",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
will_shattering_illusion.prerequisites.add(
    chaos_repelling_pattern, force_draining_whisper
)
surging_inner_fire = SolarCharm.objects.create(
    name="Surging Inner Fire",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
surging_inner_fire.prerequisites.add(power_restoring_invocation)
seal_of_infinite_wisdom = SolarCharm.objects.create(
    name="Seal of Infinite Wisdom",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
seal_of_infinite_wisdom.prerequisites.add(surging_essence_flow)
sevenfold_savant_mantle = SolarCharm.objects.create(
    name="Sevenfold Savant Mantle",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
sevenfold_savant_mantle.prerequisites.add(wyld_cauldron_mastery)
power_beyond_reason = SolarCharm.objects.create(
    name="Power Beyond Reason",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
power_beyond_reason.prerequisites.add(sevenfold_savant_mantle)
manse_raising_method = SolarCharm.objects.create(
    name="Manse-Raising Method",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
manse_raising_method.prerequisites.add(wyld_called_weapon)
demiurgic_suspiration = SolarCharm.objects.create(
    name="Demiurgic Suspiration",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
demiurgic_suspiration.prerequisites.add(wyld_forging_focus)
god_kings_shrike_dogstar_ruminations = SolarCharm.objects.create(
    name="God-King's Shrike (Dogstar Ruminations)",
    mote_cost=30,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
god_kings_shrike_dogstar_ruminations.prerequisites.add(prophet_of_seventeen_cycles)
incalculable_flowing_mind = SolarCharm.objects.create(
    name="Incalculable Flowing Mind",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
incalculable_flowing_mind.prerequisites.add(seal_of_infinite_wisdom)
unstoppable_magnus_approach = SolarCharm.objects.create(
    name="Unstoppable Magnus Approach",
    mote_cost=5,
    initiative_cost=10,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="Instant",
)
unstoppable_magnus_approach.prerequisites.add(
    incalculable_flowing_mind, surging_inner_fire
)
savant_of_nine_glories = SolarCharm.objects.create(
    name="Savant of Nine Glories",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
savant_of_nine_glories.prerequisites.add(demiurgic_suspiration)

ailment_rectifying_method = SolarCharm.objects.create(
    name="Ailment-Rectifying Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=1,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
plague_banishing_incitation = SolarCharm.objects.create(
    name="Plague-Banishing Incitation",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
plague_banishing_incitation.prerequisites.add(ailment_rectifying_method)
wound_mending_care_technique = SolarCharm.objects.create(
    name="Wound-Mending Care Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wound_cleansing_meditation = SolarCharm.objects.create(
    name="Wound-Cleansing Meditation",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wound_cleansing_meditation.prerequisites.add(wound_mending_care_technique)
flawless_diagnosis_technique = SolarCharm.objects.create(
    name="Flawless Diagnosis Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=1,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
contagion_curing_touch = SolarCharm.objects.create(
    name="Contagion-Curing Touch",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
contagion_curing_touch.prerequisites.add(plague_banishing_incitation)
instant_treatment_methodology = SolarCharm.objects.create(
    name="Instant Treatment Methodology",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
instant_treatment_methodology.prerequisites.add(wound_cleansing_meditation)
wound_banishing_strike = SolarCharm.objects.create(
    name="Wound-Banishing Strike",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
wound_banishing_strike.prerequisites.add(instant_treatment_methodology)
touch_of_blissful_release = SolarCharm.objects.create(
    name="Touch of Blissful Release",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
touch_of_blissful_release.prerequisites.add(flawless_diagnosis_technique)
feit_of_imparted_nature = SolarCharm.objects.create(
    name="Feit of Imparted Nature",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
feit_of_imparted_nature.prerequisites.add(touch_of_blissful_release)
body_purifying_admonitions = SolarCharm.objects.create(
    name="Body-Purifying Admonitions",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
body_purifying_admonitions.prerequisites.add(touch_of_blissful_release)
anointment_of_miraculous_health = SolarCharm.objects.create(
    name="Anointment of Miraculous Health",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
anointment_of_miraculous_health.prerequisites.add(instant_treatment_methodology)
body_sculpting_essence_method = SolarCharm.objects.create(
    name="Body-Sculpting Essence Method",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
body_sculpting_essence_method.prerequisites.add(anointment_of_miraculous_health)
wholeness_restoring_meditation = SolarCharm.objects.create(
    name="Wholeness-Restoring Meditation",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wholeness_restoring_meditation.prerequisites.add(anointment_of_miraculous_health)
healing_trance_meditation = SolarCharm.objects.create(
    name="Healing Trance Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
healing_trance_meditation.prerequisites.add(
    contagion_curing_touch, wholeness_restoring_meditation
)
life_exchanging_prana = SolarCharm.objects.create(
    name="Life-Exchanging Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    lhl_cost=1,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
life_exchanging_prana.prerequisites.add(feit_of_imparted_nature)
anodyne_of_celestial_dreaming = SolarCharm.objects.create(
    name="Anodyne of Celestial Dreaming",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
anodyne_of_celestial_dreaming.prerequisites.add(touch_of_blissful_release)
master_chirurgeon_meditation = SolarCharm.objects.create(
    name="Master Chirurgeon Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
benison_of_celestial_healing = SolarCharm.objects.create(
    name="Benison of Celestial Healing",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
benison_of_celestial_healing.prerequisites.add(master_chirurgeon_meditation)
life_sculpting_hands_technique = SolarCharm.objects.create(
    name="Life-Sculpting Hands Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
life_sculpting_hands_technique.prerequisites.add(benison_of_celestial_healing)
healers_unerring_hands = SolarCharm.objects.create(
    name="Healer's Unerring Hands",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
healers_unerring_hands.prerequisites.add(life_sculpting_hands_technique)
immaculate_solar_physician = SolarCharm.objects.create(
    name="Immaculate Solar Physician",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
immaculate_solar_physician.prerequisites.add(healers_unerring_hands)
perfect_celestial_chirurgeon = SolarCharm.objects.create(
    name="Perfect Celestial Chirurgeon",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
perfect_celestial_chirurgeon.prerequisites.add(healers_unerring_hands)

excellent_strike = SolarCharm.objects.create(
    name="Excellent Strike",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="",
)
fire_and_stones_strike = SolarCharm.objects.create(
    name="Fire and Stones Strike",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["dual"],
    duration="Instant",
)
fire_and_stones_strike.prerequisites.add(excellent_strike)
one_weapon_two_blows = SolarCharm.objects.create(
    name="One Weapon, Two Blows",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
one_weapon_two_blows.prerequisites.add(excellent_strike)
peony_blossom_technique = SolarCharm.objects.create(
    name="Peony Blossom Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
peony_blossom_technique.prerequisites.add(one_weapon_two_blows)
dipping_swallow_defense = SolarCharm.objects.create(
    name="Dipping Swallow Defense",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
bulwark_stance = SolarCharm.objects.create(
    name="Bulwark Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
bulwark_stance.prerequisites.add(dipping_swallow_defense)
war_lion_stance = SolarCharm.objects.create(
    name="War Lion Stance",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
war_lion_stance.prerequisites.add(dipping_swallow_defense)
guard_breaking_technique = SolarCharm.objects.create(
    name="Guard-Breaking Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
guard_breaking_technique.prerequisites.add(war_lion_stance)
solar_counterattack = SolarCharm.objects.create(
    name="Solar Counterattack",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["counterattack", "decisive-only"],
    duration="Instant",
)
solar_counterattack.prerequisites.add(dipping_swallow_defense)
call_the_blade = SolarCharm.objects.create(
    name="Call the Blade",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
summoning_the_loyal_steel = SolarCharm.objects.create(
    name="Summoning the Loyal Steel",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
summoning_the_loyal_steel.prerequisites.add(call_the_blade)
rising_sun_slash = SolarCharm.objects.create(
    name="Rising Sun Slash",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
rising_sun_slash.prerequisites.add(fire_and_stones_strike)
agile_dragonfly_blade = SolarCharm.objects.create(
    name="Agile Dragonfly Blade",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
agile_dragonfly_blade.prerequisites.add(one_weapon_two_blows)
iron_whirlwind_attack = SolarCharm.objects.create(
    name="Iron Whirlwind Attack",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
iron_whirlwind_attack.prerequisites.add(peony_blossom_technique)
fivefold_bulwark_stance = SolarCharm.objects.create(
    name="Fivefold Bulwark Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
fivefold_bulwark_stance.prerequisites.add(bulwark_stance)
heavenly_guardian_defense = SolarCharm.objects.create(
    name="Heavenly Guardian Defense",
    mote_cost=4,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous", "decisive-only"],
    duration="Instant",
)
heavenly_guardian_defense.prerequisites.add(bulwark_stance)
hail_shattering_practice = SolarCharm.objects.create(
    name="Hail-Shattering Practice",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
hail_shattering_practice.prerequisites.add(dipping_swallow_defense)
calm_and_ready_focus = SolarCharm.objects.create(
    name="Calm and Ready Focus",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
calm_and_ready_focus.prerequisites.add(war_lion_stance)
unassailable_guardian_posture = SolarCharm.objects.create(
    name="Unassailable Guardian Posture",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
unassailable_guardian_posture.prerequisites.add(war_lion_stance)
ready_in_eight_directions_stance = SolarCharm.objects.create(
    name="Ready in Eight Directions Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["counterattack", "decisive-only"],
    duration="turn",
)
ready_in_eight_directions_stance.prerequisites.add(solar_counterattack)
glorious_solar_saber = SolarCharm.objects.create(
    name="Glorious Solar Saber",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
glorious_solar_saber.prerequisites.add(summoning_the_loyal_steel)
iron_raptor_technique = SolarCharm.objects.create(
    name="Iron Raptor Technique",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["mute", "uniform"],
    duration="Instant",
)
iron_raptor_technique.prerequisites.add(call_the_blade, excellent_strike)
sandstorm_wind_attack = SolarCharm.objects.create(
    name="Sandstorm-Wind Attack",
    mote_cost=5,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
sandstorm_wind_attack.prerequisites.add(call_the_blade, excellent_strike)
edge_of_morning_sunlight = SolarCharm.objects.create(
    name="Edge of Morning Sunlight",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
edge_of_morning_sunlight.prerequisites.add(sandstorm_wind_attack)
foe_cleaving_focus = SolarCharm.objects.create(
    name="Foe-Cleaving Focus",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
foe_cleaving_focus.prerequisites.add(rising_sun_slash)
hungry_tiger_technique = SolarCharm.objects.create(
    name="Hungry Tiger Technique",
    mote_cost=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["dual", "perilous"],
    duration="Instant",
)
hungry_tiger_technique.prerequisites.add(rising_sun_slash)
invincible_fury_of_the_dawn = SolarCharm.objects.create(
    name="Invincible Fury of the Dawn",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
invincible_fury_of_the_dawn.prerequisites.add(iron_whirlwind_attack)
perfect_strike_discipline = SolarCharm.objects.create(
    name="Perfect Strike Discipline",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
perfect_strike_discipline.prerequisites.add(dipping_swallow_defense, excellent_strike)
flashing_edge_of_dawn = SolarCharm.objects.create(
    name="Flashing Edge of Dawn",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["counterattack", "withering-only"],
    duration="Instant",
)
flashing_edge_of_dawn.prerequisites.add(one_weapon_two_blows, solar_counterattack)
fervent_blow = SolarCharm.objects.create(
    name="Fervent Blow",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["clash", "decisive-only"],
    duration="Instant",
)
fervent_blow.prerequisites.add(flashing_edge_of_dawn)
over_and_under_method = SolarCharm.objects.create(
    name="Over-and-Under Method",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
over_and_under_method.prerequisites.add(fervent_blow)
immortal_blade_triumphant = SolarCharm.objects.create(
    name="Immortal Blade Triumphant",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
immortal_blade_triumphant.prerequisites.add(glorious_solar_saber)
corona_of_radiance = SolarCharm.objects.create(
    name="Corona of Radiance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
corona_of_radiance.prerequisites.add(edge_of_morning_sunlight)
sharp_light_of_judgment_stance = SolarCharm.objects.create(
    name="Sharp Light of Judgment Stance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
sharp_light_of_judgment_stance.prerequisites.add(corona_of_radiance)
blazing_solar_bolt = SolarCharm.objects.create(
    name="Blazing Solar Bolt",
    mote_cost=5,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
blazing_solar_bolt.prerequisites.add(corona_of_radiance)
heaven_sword_flash = SolarCharm.objects.create(
    name="Heaven Sword Flash",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=["decisive-only", "perilous"],
    duration="Instant",
)
heaven_sword_flash.prerequisites.add(invincible_fury_of_the_dawn)
circle_of_bright_reaving = SolarCharm.objects.create(
    name="Circle of Bright Reaving",
    mote_cost=6,
    initiative_cost=2,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=["withering-only", "perilous"],
    duration="Instant",
)
circle_of_bright_reaving.prerequisites.add(heaven_sword_flash)
protection_of_celestial_bliss = SolarCharm.objects.create(
    name="Protection of Celestial Bliss",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    statistic="melee",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=["decisive-only"],
    duration="Permanent",
)
protection_of_celestial_bliss.prerequisites.add(heavenly_guardian_defense)

spirit_detecting_glance = SolarCharm.objects.create(
    name="Spirit-Detecting Glance",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=1,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
uncanny_perception_technique = SolarCharm.objects.create(
    name="Uncanny Perception Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
uncanny_perception_technique.prerequisites.add(spirit_detecting_glance)
keen_unnatural_eye = SolarCharm.objects.create(
    name="Keen Unnatural Eye",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
keen_unnatural_eye.prerequisites.add(uncanny_perception_technique)
spirit_cutting_attack = SolarCharm.objects.create(
    name="Spirit-Cutting Attack",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="Instant",
)
spirit_cutting_attack.prerequisites.add(spirit_detecting_glance)
spirit_draining_stance = SolarCharm.objects.create(
    name="Spirit-Draining Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
spirit_draining_stance.prerequisites.add(spirit_cutting_attack)
ghost_eating_technique = SolarCharm.objects.create(
    name="Ghost-Eating Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
ghost_eating_technique.prerequisites.add(spirit_cutting_attack)
phantom_seizing_strike = SolarCharm.objects.create(
    name="Phantom-Seizing Strike",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["uniform"],
    duration="Instant",
)
phantom_seizing_strike.prerequisites.add(ghost_eating_technique)
spirit_slaying_stance = SolarCharm.objects.create(
    name="Spirit-Slaying Stance",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
spirit_slaying_stance.prerequisites.add(phantom_seizing_strike)
uncanny_shroud_defense = SolarCharm.objects.create(
    name="Uncanny Shroud Defense",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
uncanny_shroud_defense.prerequisites.add(spirit_cutting_attack)
spirit_manifesting_word = SolarCharm.objects.create(
    name="Spirit-Manifesting Word",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
ancient_tongue_understanding = SolarCharm.objects.create(
    name="Ancient Tongue Understanding",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
supernal_control_method = SolarCharm.objects.create(
    name="Supernal Control Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
supernal_control_method.prerequisites.add(ancient_tongue_understanding)
all_encompassing_sorcerers_sight = SolarCharm.objects.create(
    name="All-Encompassing Sorcerer's Sight",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
all_encompassing_sorcerers_sight.prerequisites.add(spirit_detecting_glance)
carnal_spirit_rending = SolarCharm.objects.create(
    name="Carnal Spirit Rending",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
carnal_spirit_rending.prerequisites.add(ghost_eating_technique)
burning_exorcism_technique = SolarCharm.objects.create(
    name="Burning Exorcism Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
burning_exorcism_technique.prerequisites.add(carnal_spirit_rending)
breath_drinker_method = SolarCharm.objects.create(
    name="Breath-Drinker Method",
    mote_cost=0,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
breath_drinker_method.prerequisites.add(spirit_draining_stance)
spirit_repelling_diagram = SolarCharm.objects.create(
    name="Spirit-Repelling Diagram",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
spirit_repelling_diagram.prerequisites.add(spirit_cutting_attack)
nine_specters_ban = SolarCharm.objects.create(
    name="Nine Specters Ban",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
nine_specters_ban.prerequisites.add(spirit_repelling_diagram, uncanny_shroud_defense)
spirit_caging_mandala = SolarCharm.objects.create(
    name="Spirit-Caging Mandala",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="",
)
material_exegesis_prana = SolarCharm.objects.create(
    name="Material Exegesis Prana",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
material_exegesis_prana.prerequisites.add(spirit_manifesting_word)
dark_minders_observances = SolarCharm.objects.create(
    name="Dark-Minder's Observances",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Instant",
)
dark_minders_observances.prerequisites.add(ancient_tongue_understanding)
burning_eye_of_the_deliverer = SolarCharm.objects.create(
    name="Burning Eye of the Deliverer",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
burning_eye_of_the_deliverer.prerequisites.add(all_encompassing_sorcerers_sight)
soul_projection_method = SolarCharm.objects.create(
    name="Soul Projection Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
soul_projection_method.prerequisites.add(burning_exorcism_technique)
wyld_binding_prana = SolarCharm.objects.create(
    name="Wyld-Binding Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
wyld_binding_prana.prerequisites.add(spirit_caging_mandala)
spirit_draining_mudra = SolarCharm.objects.create(
    name="Spirit-Draining Mudra",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
spirit_draining_mudra.prerequisites.add(spirit_caging_mandala)
demon_compelling_noose = SolarCharm.objects.create(
    name="Demon-Compelling Noose",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
demon_compelling_noose.prerequisites.add(spirit_draining_mudra)
all_souls_benediction = SolarCharm.objects.create(
    name="All Souls Benediction",
    mote_cost=16,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
all_souls_benediction.prerequisites.add(material_exegesis_prana)
gloaming_eye_understanding = SolarCharm.objects.create(
    name="Gloaming Eye Understanding",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["stackable"],
    duration="Indefinite",
)
gloaming_eye_understanding.prerequisites.add(dark_minders_observances)
sorcerers_burning_chakra = SolarCharm.objects.create(
    name="Sorcerer's Burning Chakra",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
sorcerers_burning_chakra.prerequisites.add(burning_eye_of_the_deliverer)
immortal_soul_vigil = SolarCharm.objects.create(
    name="Immortal Soul Vigil",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
immortal_soul_vigil.prerequisites.add(soul_projection_method)
spirit_shredding_exorcism = SolarCharm.objects.create(
    name="Spirit-Shredding Exorcism",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
spirit_shredding_exorcism.prerequisites.add(spirit_draining_mudra)
spirit_drawing_oculus = SolarCharm.objects.create(
    name="Spirit-Drawing Oculus",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
spirit_drawing_oculus.prerequisites.add(sorcerers_burning_chakra)
ephemeral_induction_technique = SolarCharm.objects.create(
    name="Ephemeral Induction Technique",
    mote_cost=20,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=5,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
ephemeral_induction_technique.prerequisites.add(
    carnal_spirit_rending, gloaming_eye_understanding, wyld_binding_prana
)

masterful_performance_exercise = SolarCharm.objects.create(
    name="Masterful Performance Exercise",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
soul_firing_performance = SolarCharm.objects.create(
    name="Soul-Firing Performance",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
soul_firing_performance.prerequisites.add(masterful_performance_exercise)
stillness_drawing_meditation = SolarCharm.objects.create(
    name="Stillness-Drawing Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
stillness_drawing_meditation.prerequisites.add(masterful_performance_exercise)
trance_of_fugue_vision = SolarCharm.objects.create(
    name="Trance of Fugue Vision",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
trance_of_fugue_vision.prerequisites.add(stillness_drawing_meditation)
penultimate_unity_of_form = SolarCharm.objects.create(
    name="Penultimate Unity of Form",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Action",
)
penultimate_unity_of_form.prerequisites.add(trance_of_fugue_vision)
soul_bracing_momentous_power = SolarCharm.objects.create(
    name="Soul-Bracing Momentous Power",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
soul_bracing_momentous_power.prerequisites.add(penultimate_unity_of_form)
unmatched_showmanship_style = SolarCharm.objects.create(
    name="Unmatched Showmanship Style",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=["mute"],
    duration="Permanent",
)
unmatched_showmanship_style.prerequisites.add(trance_of_fugue_vision)
soul_voice = SolarCharm.objects.create(
    name="Soul Voice",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="action",
)
soul_voice.prerequisites.add(unmatched_showmanship_style)
pivotal_encore_performance = SolarCharm.objects.create(
    name="Pivotal Encore Performance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=1,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
pivotal_encore_performance.prerequisites.add(soul_voice)
respect_commanding_attitude = SolarCharm.objects.create(
    name="Respect-Commanding Attitude",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="action",
)
phantom_conjuring_performance = SolarCharm.objects.create(
    name="Phantom-Conjuring Performance",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
phantom_conjuring_performance.prerequisites.add(
    masterful_performance_exercise, respect_commanding_attitude
)
memory_reweaving_discipline = SolarCharm.objects.create(
    name="Memory-Reweaving Discipline",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["psyche"],
    duration="Instant",
)
demon_wracking_shout = SolarCharm.objects.create(
    name="Demon Wracking Shout",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
impassioned_orator_technique = SolarCharm.objects.create(
    name="Impassioned Orator Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
impassioned_orator_technique.prerequisites.add(masterful_performance_exercise)
fury_inciting_speech = SolarCharm.objects.create(
    name="Fury Inciting Speech",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
fury_inciting_speech.prerequisites.add(impassioned_orator_technique)
dogmatic_contagion_discipline = SolarCharm.objects.create(
    name="Dogmatic Contagion Discipline",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
dogmatic_contagion_discipline.prerequisites.add(fury_inciting_speech)
infectious_zealotry_approach = SolarCharm.objects.create(
    name="Infectious Zealotry Approach",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
infectious_zealotry_approach.prerequisites.add(dogmatic_contagion_discipline)
perfect_harmony_technique = SolarCharm.objects.create(
    name="Perfect Harmony Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
perfect_harmony_technique.prerequisites.add(masterful_performance_exercise)
mood_inducing_music = SolarCharm.objects.create(
    name="Mood-Inducing Music",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="performance",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="song",
)
mood_inducing_music.prerequisites.add(perfect_harmony_technique)

listener_swaying_argument = SolarCharm.objects.create(
    name="Listener-Swaying Argument",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
harmonious_presence_meditation = SolarCharm.objects.create(
    name="Harmonious Presence Meditation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
excellent_friend_approach = SolarCharm.objects.create(
    name="Excellent Friend Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
excellent_friend_approach.prerequisites.add(
    harmonious_presence_meditation, listener_swaying_argument
)
tigers_dread_symmetry = SolarCharm.objects.create(
    name="Tiger's Dread Symmetry",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
impassioned_discourse_technique = SolarCharm.objects.create(
    name="Impassioned Discourse Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
impassioned_discourse_technique.prerequisites.add(listener_swaying_argument)
empowering_shout = SolarCharm.objects.create(
    name="Empowering Shout",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
empowering_shout.prerequisites.add(impassioned_discourse_technique)
majestic_radiant_presence = SolarCharm.objects.create(
    name="Majestic Radiant Presence",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
majestic_radiant_presence.prerequisites.add(harmonious_presence_meditation)
underling_promoting_touch = SolarCharm.objects.create(
    name="Underling-Promoting Touch",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
underling_promoting_touch.prerequisites.add(majestic_radiant_presence)
threefold_magnetic_ardor = SolarCharm.objects.create(
    name="Threefold Magnetic Ardor",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
threefold_magnetic_ardor.prerequisites.add(
    harmonious_presence_meditation, listener_swaying_argument
)
awakened_carnal_demiurge = SolarCharm.objects.create(
    name="Awakened Carnal Demiurge",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
awakened_carnal_demiurge.prerequisites.add(threefold_magnetic_ardor)
enemy_castigating_solar_judgment = SolarCharm.objects.create(
    name="Enemy-Castigating Solar Judgment",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
enemy_castigating_solar_judgment.prerequisites.add(
    impassioned_discourse_technique, majestic_radiant_presence
)
fulminating_word = SolarCharm.objects.create(
    name="Fulminating Word",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
fulminating_word.prerequisites.add(impassioned_discourse_technique)
authority_radiating_stance = SolarCharm.objects.create(
    name="Authority-Radiating Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
authority_radiating_stance.prerequisites.add(majestic_radiant_presence)
terrifying_apparition_of_glory = SolarCharm.objects.create(
    name="Terrifying Apparition of Glory",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
terrifying_apparition_of_glory.prerequisites.add(majestic_radiant_presence)
blazing_glorious_icon = SolarCharm.objects.create(
    name="Blazing Glorious Icon",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
blazing_glorious_icon.prerequisites.add(majestic_radiant_presence)
mind_wiping_gaze = SolarCharm.objects.create(
    name="Mind-Wiping Gaze",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
mind_wiping_gaze.prerequisites.add(blazing_glorious_icon)
hypnotic_tongue_technique = SolarCharm.objects.create(
    name="Hypnotic Tongue Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["psyche", "mute"],
    duration="Indefinite",
)
hypnotic_tongue_technique.prerequisites.add(mind_wiping_gaze, fulminating_word)
worshipful_lackey_acquisition = SolarCharm.objects.create(
    name="Worshipful Lackey Acquisition",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
worshipful_lackey_acquisition.prerequisites.add(underling_promoting_touch)
prophet_uplifting_evocation = SolarCharm.objects.create(
    name="Prophet-Uplifting Evocation",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=2,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
prophet_uplifting_evocation.prerequisites.add(underling_promoting_touch)
shedding_infinite_radiance = SolarCharm.objects.create(
    name="Shedding Infinite Radiance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["stackable"],
    duration="Indefinite",
)
shedding_infinite_radiance.prerequisites.add(prophet_uplifting_evocation)
rose_lipped_seduction_style = SolarCharm.objects.create(
    name="Rose-Lipped Seduction Style",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
rose_lipped_seduction_style.prerequisites.add(awakened_carnal_demiurge)
crowned_king_of_eternity = SolarCharm.objects.create(
    name="Crowned King of Eternity",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
crowned_king_of_eternity.prerequisites.add(authority_radiating_stance, fulminating_word)
favor_conferring_prana = SolarCharm.objects.create(
    name="Favor-Conferring Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
favor_conferring_prana.prerequisites.add(empowering_shout, underling_promoting_touch)
countenance_of_vast_wrath = SolarCharm.objects.create(
    name="Countenance of Vast Wrath",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="presence",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
countenance_of_vast_wrath.prerequisites.add(terrifying_apparition_of_glory)

durability_of_oak_meditation = SolarCharm.objects.create(
    name="Durability of Oak Meditation",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["dual"],
    duration="tick",
)
spirit_strengthens_the_skin = SolarCharm.objects.create(
    name="Spirit Strengthens the Skin",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["withering-only"],
    duration="Instant",
)
spirit_strengthens_the_skin.prerequisites.add(durability_of_oak_meditation)
iron_skin_concentration = SolarCharm.objects.create(
    name="Iron Skin Concentration",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["dual"],
    duration="Indefinite",
)
iron_skin_concentration.prerequisites.add(spirit_strengthens_the_skin)
ox_body_technique = SolarCharm.objects.create(
    name="Ox-Body Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=1,
    min_essence=1,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
body_mending_meditation = SolarCharm.objects.create(
    name="Body-Mending Meditation",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
body_mending_meditation.prerequisites.add(ox_body_technique)
front_line_warriors_stamina = SolarCharm.objects.create(
    name="Front-Line Warrior's Stamina",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["perilous"],
    duration="Instant",
)
front_line_warriors_stamina.prerequisites.add(ox_body_technique)
whirlwind_armor_donning_prana = SolarCharm.objects.create(
    name="Whirlwind Armor-Donning Prana",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=1,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
armored_scouts_invigoration = SolarCharm.objects.create(
    name="Armored Scout's Invigoration",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
armored_scouts_invigoration.prerequisites.add(whirlwind_armor_donning_prana)
poison_resisting_meditation = SolarCharm.objects.create(
    name="Poison-Resisting Meditation",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
essence_gathering_temper = SolarCharm.objects.create(
    name="Essence-Gathering Temper",
    mote_cost=0,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["perilous", "withering-only"],
    duration="Instant",
)
diamond_body_prana = SolarCharm.objects.create(
    name="Diamond-Body Prana",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["dual"],
    duration="scene",
)
diamond_body_prana.prerequisites.add(iron_skin_concentration)
iron_kettle_body = SolarCharm.objects.create(
    name="Iron Kettle Body",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["withering-only"],
    duration="turn",
)
iron_kettle_body.prerequisites.add(iron_skin_concentration)
adamant_skin_technique = SolarCharm.objects.create(
    name="Adamant Skin Technique",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
adamant_skin_technique.prerequisites.add(diamond_body_prana, iron_kettle_body)
tiger_warriors_endurance = SolarCharm.objects.create(
    name="Tiger Warrior's Endurance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
tiger_warriors_endurance.prerequisites.add(
    body_mending_meditation, front_line_warriors_stamina
)
hauberk_summoning_gesture = SolarCharm.objects.create(
    name="Hauberk-Summoning Gesture",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
hauberk_summoning_gesture.prerequisites.add(whirlwind_armor_donning_prana)
illness_resisting_meditation = SolarCharm.objects.create(
    name="Illness-Resisting Meditation",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
illness_resisting_meditation.prerequisites.add(poison_resisting_meditation)
willpower_enhancing_spirit = SolarCharm.objects.create(
    name="Willpower-Enhancing Spirit",
    mote_cost=0,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous", "decisive-only"],
    duration="Instant",
)
willpower_enhancing_spirit.prerequisites.add(essence_gathering_temper)
battle_fury_focus = SolarCharm.objects.create(
    name="Battle Fury Focus",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
battle_fury_focus.prerequisites.add(willpower_enhancing_spirit)
wound_knitting_exercise = SolarCharm.objects.create(
    name="Wound-Knitting Exercise",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="healed",
)
wound_knitting_exercise.prerequisites.add(tiger_warriors_endurance)
unbreakable_warriors_mastery = SolarCharm.objects.create(
    name="Unbreakable Warrior's Mastery",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
unbreakable_warriors_mastery.prerequisites.add(wound_knitting_exercise)
ruin_abasing_shrug = SolarCharm.objects.create(
    name="Ruin-Abasing Shrug",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
ruin_abasing_shrug.prerequisites.add(adamant_skin_technique)
glorious_solar_plate = SolarCharm.objects.create(
    name="Glorious Solar Plate",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=4,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
glorious_solar_plate.prerequisites.add(hauberk_summoning_gesture)
immunity_to_everything_technique = SolarCharm.objects.create(
    name="Immunity to Everything Technique",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
immunity_to_everything_technique.prerequisites.add(illness_resisting_meditation)
fury_fed_ardor = SolarCharm.objects.create(
    name="Fury-Fed Ardor",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
fury_fed_ardor.prerequisites.add(willpower_enhancing_spirit)
bloodthirsty_sword_dancer_spirit = SolarCharm.objects.create(
    name="Bloodthirsty Sword-Dancer Spirit",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
bloodthirsty_sword_dancer_spirit.prerequisites.add(battle_fury_focus)
aegis_of_invincible_might = SolarCharm.objects.create(
    name="Aegis of Invincible Might",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=5,
    charm_type="permanent",
    keywords=["dual", "perilous"],
    duration="Permanent",
)
aegis_of_invincible_might.prerequisites.add(adamant_skin_technique)

master_horsemans_techniques = SolarCharm.objects.create(
    name="Master Horseman's Techniques",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=1,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
flashing_thunderbolt_steed = SolarCharm.objects.create(
    name="Flashing Thunderbolt Steed",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="hour",
)
flashing_thunderbolt_steed.prerequisites.add(master_horsemans_techniques)
elusive_mount_technique = SolarCharm.objects.create(
    name="Elusive Mount Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
elusive_mount_technique.prerequisites.add(flashing_thunderbolt_steed)
wind_racing_essence_infusion = SolarCharm.objects.create(
    name="Wind-Racing Essence Infusion",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
wind_racing_essence_infusion.prerequisites.add(flashing_thunderbolt_steed)
single_spirit_method = SolarCharm.objects.create(
    name="Single Spirit Method",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
single_spirit_method.prerequisites.add(master_horsemans_techniques)
seasoned_beast_riders_approach = SolarCharm.objects.create(
    name="Seasoned Beast-Rider's Approach",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
worthy_mount_technique = SolarCharm.objects.create(
    name="Worthy Mount Technique",
    mote_cost=0,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Permanent",
)
worthy_mount_technique.prerequisites.add(seasoned_beast_riders_approach)
mount_preservation_method = SolarCharm.objects.create(
    name="Mount Preservation Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=1,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
mount_preservation_method.prerequisites.add(worthy_mount_technique)
harmonious_tacking_technique = SolarCharm.objects.create(
    name="Harmonious Tacking Technique",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
harmonious_tacking_technique.prerequisites.add(master_horsemans_techniques)
untouchable_horsemans_attitude = SolarCharm.objects.create(
    name="Untouchable Horseman's Attitude",
    mote_cost=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="Instant",
)
untouchable_horsemans_attitude.prerequisites.add(elusive_mount_technique)
immortal_chargers_gallop = SolarCharm.objects.create(
    name="Immortal Charger's Gallop",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
immortal_chargers_gallop.prerequisites.add(wind_racing_essence_infusion)
supernal_lash_discipline = SolarCharm.objects.create(
    name="Supernal Lash Discipline",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["perilous"],
    duration="scene",
)
supernal_lash_discipline.prerequisites.add(immortal_chargers_gallop)
speed_fury_focus = SolarCharm.objects.create(
    name="Speed-Fury Focus",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
speed_fury_focus.prerequisites.add(immortal_chargers_gallop)
inexhaustible_destriers_gait = SolarCharm.objects.create(
    name="Inexhaustible Destrier's Gait",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
inexhaustible_destriers_gait.prerequisites.add(immortal_chargers_gallop)
coursing_firebolt_flash = SolarCharm.objects.create(
    name="Coursing Firebolt Flash",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
coursing_firebolt_flash.prerequisites.add(wind_racing_essence_infusion)
saddle_staying_courses = SolarCharm.objects.create(
    name="Saddle-Staying Courses",
    mote_cost=4,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
saddle_staying_courses.prerequisites.add(single_spirit_method)
horse_stealing_leap = SolarCharm.objects.create(
    name="Horse-Stealing Leap",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
horse_stealing_leap.prerequisites.add(saddle_staying_courses)
immortal_riders_advantage = SolarCharm.objects.create(
    name="Immortal Rider's Advantage",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
immortal_riders_advantage.prerequisites.add(seasoned_beast_riders_approach)
horse_healing_technique = SolarCharm.objects.create(
    name="Horse-Healing Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=1,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
horse_healing_technique.prerequisites.add(mount_preservation_method)
rousing_backlash_assault = SolarCharm.objects.create(
    name="Rousing Backlash Assault",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["counterattack", "decisive-only"],
    duration="Instant",
)
rousing_backlash_assault.prerequisites.add(worthy_mount_technique)
woe_and_storm_evasion = SolarCharm.objects.create(
    name="Woe and Storm Evasion",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
woe_and_storm_evasion.prerequisites.add(worthy_mount_technique)
resilience_of_the_chosen_mount = SolarCharm.objects.create(
    name="Resilience of the Chosen Mount",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
resilience_of_the_chosen_mount.prerequisites.add(woe_and_storm_evasion)
phantom_steed = SolarCharm.objects.create(
    name="Phantom Steed",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
phantom_steed.prerequisites.add(master_horsemans_techniques)
hero_rides_away = SolarCharm.objects.create(
    name="Hero Rides Away",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
hero_rides_away.prerequisites.add(master_horsemans_techniques)
phantom_riders_approach = SolarCharm.objects.create(
    name="Phantom Rider's Approach",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
phantom_riders_approach.prerequisites.add(untouchable_horsemans_attitude)
fierce_chargers_pulse = SolarCharm.objects.create(
    name="Fierce Charger's Pulse",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
fierce_chargers_pulse.prerequisites.add(speed_fury_focus)
grizzled_cataphracts_way = SolarCharm.objects.create(
    name="Grizzled Cataphract's Way",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
grizzled_cataphracts_way.prerequisites.add(speed_fury_focus)
rapid_cavalry_approach = SolarCharm.objects.create(
    name="Rapid Cavalry Approach",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["perilous"],
    duration="scene",
)
rapid_cavalry_approach.prerequisites.add(coursing_firebolt_flash)
sometimes_horses_fly_approach = SolarCharm.objects.create(
    name="Sometimes Horses Fly Approach",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
sometimes_horses_fly_approach.prerequisites.add(coursing_firebolt_flash)
soaring_pegasus_style = SolarCharm.objects.create(
    name="Soaring Pegasus Style",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
soaring_pegasus_style.prerequisites.add(sometimes_horses_fly_approach)
whirlwind_horse_armoring_prana = SolarCharm.objects.create(
    name="Whirlwind Horse-Armoring Prana",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
whirlwind_horse_armoring_prana.prerequisites.add(harmonious_tacking_technique)
bard_lightening_prana = SolarCharm.objects.create(
    name="Bard-Lightening Prana",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
bard_lightening_prana.prerequisites.add(whirlwind_horse_armoring_prana)
untouchable_solar_steed = SolarCharm.objects.create(
    name="Untouchable Solar Steed",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
untouchable_solar_steed.prerequisites.add(immortal_riders_advantage)
wrathful_mount_invigoration = SolarCharm.objects.create(
    name="Wrathful Mount Invigoration",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=4,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
wrathful_mount_invigoration.prerequisites.add(immortal_riders_advantage)
seven_cyclones_rearing = SolarCharm.objects.create(
    name="Seven Cyclones Rearing",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["clash", "decisive-only"],
    duration="Instant",
)
seven_cyclones_rearing.prerequisites.add(rousing_backlash_assault)
iron_simhata_style = SolarCharm.objects.create(
    name="Iron Simhata Style",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
iron_simhata_style.prerequisites.add(resilience_of_the_chosen_mount)

salty_dog_method = SolarCharm.objects.create(
    name="Salty Dog Method",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
shipwreck_surviving_stamina = SolarCharm.objects.create(
    name="Shipwreck-Surviving Stamina",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
shipwreck_surviving_stamina.prerequisites.add(salty_dog_method)
fathoms_fed_spirit = SolarCharm.objects.create(
    name="Fathoms-Fed Spirit",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
fathoms_fed_spirit.prerequisites.add(salty_dog_method)
safe_bearing_technique = SolarCharm.objects.create(
    name="Safe Bearing Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="passed",
)
safe_bearing_technique.prerequisites.add(salty_dog_method)
ship_claiming_stance = SolarCharm.objects.create(
    name="Ship-Claiming Stance",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
ship_sleeking_technique = SolarCharm.objects.create(
    name="Ship-Sleeking Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
ship_sleeking_technique.prerequisites.add(ship_claiming_stance)
orichalcum_letters_of_marque = SolarCharm.objects.create(
    name="Orichalcum Letters of Marque",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
orichalcum_letters_of_marque.prerequisites.add(ship_claiming_stance)
immortal_mariners_advantage = SolarCharm.objects.create(
    name="Immortal Mariner's Advantage",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
legendary_captains_signature = SolarCharm.objects.create(
    name="Legendary Captain's Signature",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
legendary_captains_signature.prerequisites.add(immortal_mariners_advantage)
sea_ambush_technique = SolarCharm.objects.create(
    name="Sea Ambush Technique",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
sea_ambush_technique.prerequisites.add(legendary_captains_signature)
deck_sweeping_fusillade = SolarCharm.objects.create(
    name="Deck-Sweeping Fusillade",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
deck_sweeping_fusillade.prerequisites.add(legendary_captains_signature)
ship_breaker_method = SolarCharm.objects.create(
    name="Ship-Breaker Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
ship_breaker_method.prerequisites.add(legendary_captains_signature)
superior_positioning_technique = SolarCharm.objects.create(
    name="Superior Positioning Technique",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
superior_positioning_technique.prerequisites.add(legendary_captains_signature)
ship_imperiled_vigor = SolarCharm.objects.create(
    name="Ship-Imperiled Vigor",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
ship_imperiled_vigor.prerequisites.add(salty_dog_method)
weather_anticipating_intuition = SolarCharm.objects.create(
    name="Weather-Anticipating Intuition",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
weather_anticipating_intuition.prerequisites.add(safe_bearing_technique)
tide_cutting_essence_infusion = SolarCharm.objects.create(
    name="Tide-Cutting Essence Infusion",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
tide_cutting_essence_infusion.prerequisites.add(ship_sleeking_technique)
wave_riding_discipline = SolarCharm.objects.create(
    name="Wave-Riding Discipline",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
wave_riding_discipline.prerequisites.add(ship_sleeking_technique)
hull_preserving_technique = SolarCharm.objects.create(
    name="Hull-Preserving Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
hull_preserving_technique.prerequisites.add(ship_claiming_stance)
hull_taming_transfusion = SolarCharm.objects.create(
    name="Hull-Taming Transfusion",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
hull_taming_transfusion.prerequisites.add(hull_preserving_technique)
ship_leavening_meditation = SolarCharm.objects.create(
    name="Ship-Leavening Meditation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
ship_leavening_meditation.prerequisites.add(hull_preserving_technique)
indomitable_voyagers_perseverance = SolarCharm.objects.create(
    name="Indomitable Voyager's Perseverance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
indomitable_voyagers_perseverance.prerequisites.add(immortal_mariners_advantage)
ocean_conquering_avatar = SolarCharm.objects.create(
    name="Ocean-Conquering Avatar",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
ocean_conquering_avatar.prerequisites.add(indomitable_voyagers_perseverance)
wind_defying_course_technique = SolarCharm.objects.create(
    name="Wind-Defying Course Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="hour",
)
wind_defying_course_technique.prerequisites.add(immortal_mariners_advantage)
current_cutting_technique = SolarCharm.objects.create(
    name="Current-Cutting Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="hour",
)
current_cutting_technique.prerequisites.add(wind_defying_course_technique)
implacable_sea_wolf_spirit = SolarCharm.objects.create(
    name="Implacable Sea Wolf Spirit",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["pilot"],
    duration="scene",
)
implacable_sea_wolf_spirit.prerequisites.add(legendary_captains_signature)
deadly_ichneumon_assault = SolarCharm.objects.create(
    name="Deadly Ichneumon Assault",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["pilot"],
    duration="Instant",
)
deadly_ichneumon_assault.prerequisites.add(ship_breaker_method)
rail_storming_fervor = SolarCharm.objects.create(
    name="Rail-Storming Fervor",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
rail_storming_fervor.prerequisites.add(deadly_ichneumon_assault)
sea_serpent_flash = SolarCharm.objects.create(
    name="Sea Serpent Flash",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["pilot"],
    duration="Instant",
)
sea_serpent_flash.prerequisites.add(superior_positioning_technique)
tide_carried_omens = SolarCharm.objects.create(
    name="Tide-Carried Omens",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
tide_carried_omens.prerequisites.add(weather_anticipating_intuition)
chaos_cutting_galley = SolarCharm.objects.create(
    name="Chaos-Cutting Galley",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
chaos_cutting_galley.prerequisites.add(hull_preserving_technique)
blood_and_salt_bondage = SolarCharm.objects.create(
    name="Blood and Salt Bondage",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
blood_and_salt_bondage.prerequisites.add(hull_taming_transfusion)
ship_sustaining_spirit = SolarCharm.objects.create(
    name="Ship-Sustaining Spirit",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["stackable"],
    duration="Indefinite",
)
ship_sustaining_spirit.prerequisites.add(ship_leavening_meditation)
burning_anima_sails = SolarCharm.objects.create(
    name="Burning Anima Sails",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
burning_anima_sails.prerequisites.add(blood_and_salt_bondage, ship_sustaining_spirit)
storm_weathering_essence_infusion = SolarCharm.objects.create(
    name="Storm-Weathering Essence Infusion",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["pilot"],
    duration="hour",
)
storm_weathering_essence_infusion.prerequisites.add(current_cutting_technique)
invincible_admiral_method = SolarCharm.objects.create(
    name="Invincible Admiral Method",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
invincible_admiral_method.prerequisites.add(legendary_captains_signature)
sea_devil_training_technique = SolarCharm.objects.create(
    name="Sea Devil Training Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
sea_devil_training_technique.prerequisites.add(invincible_admiral_method)
ship_rolling_juggernaut_method = SolarCharm.objects.create(
    name="Ship-Rolling Juggernaut Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["pilot"],
    duration="Instant",
)
ship_rolling_juggernaut_method.prerequisites.add(implacable_sea_wolf_spirit)
ship_razing_renewal = SolarCharm.objects.create(
    name="Ship-Razing Renewal",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["pilot"],
    duration="Permanent",
)
ship_razing_renewal.prerequisites.add(ship_rolling_juggernaut_method)
black_fathoms_blessed = SolarCharm.objects.create(
    name="Black Fathoms Blessed",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)

mastery_of_small_manners = SolarCharm.objects.create(
    name="Mastery of Small Manners",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
motive_discerning_technique = SolarCharm.objects.create(
    name="Motive-Discerning Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
quicksilver_falcons_eye = SolarCharm.objects.create(
    name="Quicksilver Falcon's Eye",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
quicksilver_falcons_eye.prerequisites.add(motive_discerning_technique)
umbral_eyes_focus = SolarCharm.objects.create(
    name="Umbral Eyes Focus",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
umbral_eyes_focus.prerequisites.add(quicksilver_falcons_eye)
humble_servant_approach = SolarCharm.objects.create(
    name="Humble Servant Approach",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
humble_servant_approach.prerequisites.add(motive_discerning_technique)
shadow_over_day = SolarCharm.objects.create(
    name="Shadow Over Day",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
night_passes_over = SolarCharm.objects.create(
    name="Night Passes Over",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
night_passes_over.prerequisites.add(shadow_over_day)
intent_tracing_stare = SolarCharm.objects.create(
    name="Intent-Tracing Stare",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
intent_tracing_stare.prerequisites.add(motive_discerning_technique, shadow_over_day)
culture_hero_approach = SolarCharm.objects.create(
    name="Culture Hero Approach",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
culture_hero_approach.prerequisites.add(mastery_of_small_manners)
unimpeachable_discourse_technique = SolarCharm.objects.create(
    name="Unimpeachable Discourse Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
unimpeachable_discourse_technique.prerequisites.add(mastery_of_small_manners)
indecent_proposal_method = SolarCharm.objects.create(
    name="Indecent Proposal Method",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute"],
    duration="Instant",
)
indecent_proposal_method.prerequisites.add(unimpeachable_discourse_technique)
dauntless_assayer_method = SolarCharm.objects.create(
    name="Dauntless Assayer Method",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
dauntless_assayer_method.prerequisites.add(motive_discerning_technique)
preeminent_gala_knife = SolarCharm.objects.create(
    name="Preeminent Gala Knife",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
preeminent_gala_knife.prerequisites.add(dauntless_assayer_method)
wise_eyed_courtier_method = SolarCharm.objects.create(
    name="Wise-Eyed Courtier Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wise_eyed_courtier_method.prerequisites.add(humble_servant_approach)
discretionary_gesture = SolarCharm.objects.create(
    name="Discretionary Gesture",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
discretionary_gesture.prerequisites.add(intent_tracing_stare)
deep_eyed_soul_gazing = SolarCharm.objects.create(
    name="Deep-Eyed Soul Gazing",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
deep_eyed_soul_gazing.prerequisites.add(intent_tracing_stare)
easily_discarded_presence_method = SolarCharm.objects.create(
    name="Easily-Discarded Presence Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
easily_discarded_presence_method.prerequisites.add(shadow_over_day)
guarded_thoughts_meditation = SolarCharm.objects.create(
    name="Guarded Thoughts Meditation",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
guarded_thoughts_meditation.prerequisites.add(shadow_over_day)
penumbra_self_meditation = SolarCharm.objects.create(
    name="Penumbra Self Meditation",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["stackable"],
    duration="Indefinite",
)
penumbra_self_meditation.prerequisites.add(guarded_thoughts_meditation)
inverted_ego_mask = SolarCharm.objects.create(
    name="Inverted Ego Mask",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
inverted_ego_mask.prerequisites.add(penumbra_self_meditation)
cunning_insight_technique = SolarCharm.objects.create(
    name="Cunning Insight Technique",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
cunning_insight_technique.prerequisites.add(unimpeachable_discourse_technique)
doubt_sowing_contention_method = SolarCharm.objects.create(
    name="Doubt-Sowing Contention Method",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
doubt_sowing_contention_method.prerequisites.add(cunning_insight_technique)
effective_counterargument = SolarCharm.objects.create(
    name="Effective Counterargument",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["counterattack"],
    duration="Instant",
)
effective_counterargument.prerequisites.add(unimpeachable_discourse_technique)
wise_counsel_flashing_soul_reform = SolarCharm.objects.create(
    name="Wise Counsel (Flashing Soul Reform)",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
wise_counsel_flashing_soul_reform.prerequisites.add(effective_counterargument)
endless_obsession_feint = SolarCharm.objects.create(
    name="Endless Obsession Feint",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
endless_obsession_feint.prerequisites.add(wise_counsel_flashing_soul_reform)
aspersions_cast_aside = SolarCharm.objects.create(
    name="Aspersions Cast Aside",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
aspersions_cast_aside.prerequisites.add(unimpeachable_discourse_technique)
asp_bites_its_tail = SolarCharm.objects.create(
    name="Asp Bites Its Tail",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["counterattack", "mute"],
    duration="Instant",
)
asp_bites_its_tail.prerequisites.add(aspersions_cast_aside, effective_counterargument)
fete_watcher_stance = SolarCharm.objects.create(
    name="Fete-Watcher Stance",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
fete_watcher_stance.prerequisites.add(wise_eyed_courtier_method)
seen_and_seeing_method = SolarCharm.objects.create(
    name="Seen and Seeing Method",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
seen_and_seeing_method.prerequisites.add(deep_eyed_soul_gazing)
face_charming_prana = SolarCharm.objects.create(
    name="Face-Charming Prana",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
face_charming_prana.prerequisites.add(seen_and_seeing_method)
selfsame_master_procurer = SolarCharm.objects.create(
    name="Selfsame Master Procurer",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
selfsame_master_procurer.prerequisites.add(easily_discarded_presence_method)
soul_void_kata = SolarCharm.objects.create(
    name="Soul-Void Kata",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
soul_void_kata.prerequisites.add(face_charming_prana, inverted_ego_mask)
knowing_the_souls_price = SolarCharm.objects.create(
    name="Knowing the Soul's Price",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
knowing_the_souls_price.prerequisites.add(
    seen_and_seeing_method, wise_eyed_courtier_method
)
understanding_the_court = SolarCharm.objects.create(
    name="Understanding the Court",
    mote_cost=20,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
understanding_the_court.prerequisites.add(
    culture_hero_approach, knowing_the_souls_price
)
unbound_social_mastery = SolarCharm.objects.create(
    name="Unbound Social Mastery",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
unbound_social_mastery.prerequisites.add(understanding_the_court)
heart_eclipsing_shroud = SolarCharm.objects.create(
    name="Heart-Eclipsing Shroud",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["mute"],
    duration="Permanent",
)
heart_eclipsing_shroud.prerequisites.add(inverted_ego_mask)
hundred_faced_stranger = SolarCharm.objects.create(
    name="Hundred-Faced Stranger",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
hundred_faced_stranger.prerequisites.add(heart_eclipsing_shroud)
legend_mask_methodology = SolarCharm.objects.create(
    name="Legend Mask Methodology",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
legend_mask_methodology.prerequisites.add(hundred_faced_stranger)
friend_of_a_friend_approach = SolarCharm.objects.create(
    name="Friend of a Friend Approach",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
venomous_rumors_technique = SolarCharm.objects.create(
    name="Venomous Rumors Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
venomous_rumors_technique.prerequisites.add(understanding_the_court)
even_touched_prophet = SolarCharm.objects.create(
    name="Even-Touched Prophet",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
even_touched_prophet.prerequisites.add(unbound_social_mastery)
elusive_dream_defense = SolarCharm.objects.create(
    name="Elusive Dream Defense",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
elusive_dream_defense.prerequisites.add(even_touched_prophet)
draw_the_curtain = SolarCharm.objects.create(
    name="Draw the Curtain",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
draw_the_curtain.prerequisites.add(legend_mask_methodology)
at_your_service = SolarCharm.objects.create(
    name="At Your Service",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
at_your_service.prerequisites.add(draw_the_curtain, knowing_the_souls_price)
fugue_empowered_other = SolarCharm.objects.create(
    name="Fugue-Empowered Other",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
fugue_empowered_other.prerequisites.add(draw_the_curtain)
soul_reprisal = SolarCharm.objects.create(
    name="Soul Reprisal",
    mote_cost=16,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=20,
    lhl_cost=0,
    hl_cost=0,
    statistic="socialize",
    min_statistic=5,
    min_essence=5,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
soul_reprisal.prerequisites.add(fugue_empowered_other)

perfect_shadow_stillness = SolarCharm.objects.create(
    name="Perfect Shadow Stillness",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
invisible_statue_spirit = SolarCharm.objects.create(
    name="Invisible Statue Spirit",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Indefinite",
)
invisible_statue_spirit.prerequisites.add(perfect_shadow_stillness)
easily_overlooked_presence_method = SolarCharm.objects.create(
    name="Easily-Overlooked Presence Method",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
blinding_battle_feint = SolarCharm.objects.create(
    name="Blinding Battle Feint",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
stalking_wolf_attitude = SolarCharm.objects.create(
    name="Stalking Wolf Attitude",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="Indefinite",
)
stalking_wolf_attitude.prerequisites.add(blinding_battle_feint)
guardian_fog_approach = SolarCharm.objects.create(
    name="Guardian Fog Approach",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
guardian_fog_approach.prerequisites.add(blinding_battle_feint)
blurred_form_style = SolarCharm.objects.create(
    name="Blurred Form Style",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Indefinite",
)
blurred_form_style.prerequisites.add(invisible_statue_spirit)
mental_invisibility_technique = SolarCharm.objects.create(
    name="Mental Invisibility Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="scene",
)
mental_invisibility_technique.prerequisites.add(easily_overlooked_presence_method)
shadow_victors_repose = SolarCharm.objects.create(
    name="Shadow Victor's Repose",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
shadow_victors_repose.prerequisites.add(blinding_battle_feint)
flash_eyed_killers_insight = SolarCharm.objects.create(
    name="Flash-Eyed Killer's Insight",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
flash_eyed_killers_insight.prerequisites.add(shadow_victors_repose)
hidden_snake_recoil = SolarCharm.objects.create(
    name="Hidden Snake Recoil",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
hidden_snake_recoil.prerequisites.add(stalking_wolf_attitude)
dark_sentinels_way = SolarCharm.objects.create(
    name="Dark Sentinel's Way",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
dark_sentinels_way.prerequisites.add(guardian_fog_approach)
smoke_and_shadow_cover = SolarCharm.objects.create(
    name="Smoke and Shadow Cover",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
smoke_and_shadow_cover.prerequisites.add(dark_sentinels_way)
sun_swallowing_practice = SolarCharm.objects.create(
    name="Sun Swallowing Practice",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute", "stackable"],
    duration="Indefinite",
)
sun_swallowing_practice.prerequisites.add(blurred_form_style)
vanishing_from_minds_eye_method = SolarCharm.objects.create(
    name="Vanishing From Mind's Eye Method",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Indefinite",
)
vanishing_from_minds_eye_method.prerequisites.add(mental_invisibility_technique)
sound_and_scent_banishing_attitude = SolarCharm.objects.create(
    name="Sound and Scent Banishing Attitude",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute", "stackable"],
    duration="hour",
)
sound_and_scent_banishing_attitude.prerequisites.add(
    blurred_form_style, vanishing_from_minds_eye_method
)
ten_whispers_silence_meditation = SolarCharm.objects.create(
    name="Ten Whispers Silence Meditation",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="scene",
)
ten_whispers_silence_meditation.prerequisites.add(sound_and_scent_banishing_attitude)
mind_shroud_meditation = SolarCharm.objects.create(
    name="Mind Shroud Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
mind_shroud_meditation.prerequisites.add(flash_eyed_killers_insight)
shadow_replacement_technique = SolarCharm.objects.create(
    name="Shadow Replacement Technique",
    mote_cost=8,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["perilous", "mute"],
    duration="Indefinite",
)
shadow_replacement_technique.prerequisites.add(dark_sentinels_way)
shadow_crossing_leap_technique = SolarCharm.objects.create(
    name="Shadow-Crossing Leap Technique",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
shadow_crossing_leap_technique.prerequisites.add(smoke_and_shadow_cover)
fivefold_shadow_burial = SolarCharm.objects.create(
    name="Fivefold Shadow Burial",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=4,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
fivefold_shadow_burial.prerequisites.add(sound_and_scent_banishing_attitude)
false_image_feint = SolarCharm.objects.create(
    name="False Image Feint",
    mote_cost=7,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["perilous", "mute"],
    duration="Instant",
)
false_image_feint.prerequisites.add(
    hidden_snake_recoil, vanishing_from_minds_eye_method
)
flashing_nocturne_prana = SolarCharm.objects.create(
    name="Flashing Nocturne Prana",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="stealth",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["perilous", "mute"],
    duration="Indefinite",
)
flashing_nocturne_prana.prerequisites.add(shadow_crossing_leap_technique)

food_gathering_exercise = SolarCharm.objects.create(
    name="Food-Gathering Exercise",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=1,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="hour",
)
hardship_surviving_mendicant_spirit = SolarCharm.objects.create(
    name="Hardship-Surviving Mendicant Spirit",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="day",
)
friendship_with_animals_approach = SolarCharm.objects.create(
    name="Friendship with Animals Approach",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
trackless_region_navigation = SolarCharm.objects.create(
    name="Trackless Region Navigation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
trackless_region_navigation.prerequisites.add(hardship_surviving_mendicant_spirit)
unshakeable_bloodhound_technique = SolarCharm.objects.create(
    name="Unshakeable Bloodhound Technique",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
unshakeable_bloodhound_technique.prerequisites.add(trackless_region_navigation)
spirit_tied_pet = SolarCharm.objects.create(
    name="Spirit-Tied Pet",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=1,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
spirit_tied_pet.prerequisites.add(friendship_with_animals_approach)
beast_mastering_behavior = SolarCharm.objects.create(
    name="Beast-Mastering Behavior",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="week",
)
beast_mastering_behavior.prerequisites.add(spirit_tied_pet)
deadly_onslaught_coordination = SolarCharm.objects.create(
    name="Deadly Onslaught Coordination",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
deadly_onslaught_coordination.prerequisites.add(beast_mastering_behavior)
bestial_traits_technique = SolarCharm.objects.create(
    name="Bestial Traits Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=2,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
bestial_traits_technique.prerequisites.add(spirit_tied_pet)
hide_hardening_practice = SolarCharm.objects.create(
    name="Hide-Hardening Practice",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
hide_hardening_practice.prerequisites.add(bestial_traits_technique)
life_of_the_aurochs = SolarCharm.objects.create(
    name="Life of the Aurochs",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=["stackable"],
    duration="Permanent",
)
life_of_the_aurochs.prerequisites.add(bestial_traits_technique)
familiar_honing_instruction = SolarCharm.objects.create(
    name="Familiar-Honing Instruction",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=["mute"],
    duration="Instant",
)
familiar_honing_instruction.prerequisites.add(spirit_tied_pet)
spirit_hunting_hound = SolarCharm.objects.create(
    name="Spirit-Hunting Hound",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
spirit_hunting_hound.prerequisites.add(familiar_honing_instruction)
ambush_predator_style = SolarCharm.objects.create(
    name="Ambush Predator Style",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
ambush_predator_style.prerequisites.add(familiar_honing_instruction)
element_resisting_prana = SolarCharm.objects.create(
    name="Element-Resisting Prana",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
element_resisting_prana.prerequisites.add(hardship_surviving_mendicant_spirit)
traceless_passage = SolarCharm.objects.create(
    name="Traceless Passage",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
traceless_passage.prerequisites.add(unshakeable_bloodhound_technique)
eye_deceiving_camouflage = SolarCharm.objects.create(
    name="Eye-Deceiving Camouflage",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
eye_deceiving_camouflage.prerequisites.add(traceless_passage)
red_toothed_execution_order = SolarCharm.objects.create(
    name="Red-Toothed Execution Order",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
red_toothed_execution_order.prerequisites.add(deadly_onslaught_coordination)
ghost_panther_slinking = SolarCharm.objects.create(
    name="Ghost Panther Slinking",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
ghost_panther_slinking.prerequisites.add(
    beast_mastering_behavior, bestial_traits_technique
)
saga_beast_virtue = SolarCharm.objects.create(
    name="Saga Beast Virtue",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
saga_beast_virtue.prerequisites.add(hide_hardening_practice, life_of_the_aurochs)
phantom_rending_fangs = SolarCharm.objects.create(
    name="Phantom-Rending Fangs",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="turn",
)
phantom_rending_fangs.prerequisites.add(spirit_hunting_hound)
force_building_predator_style = SolarCharm.objects.create(
    name="Force-Building Predator Style",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=4,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
force_building_predator_style.prerequisites.add(ambush_predator_style)
crimson_talon_vigor = SolarCharm.objects.create(
    name="Crimson Talon Vigor",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
crimson_talon_vigor.prerequisites.add(force_building_predator_style)
deadly_predator_method = SolarCharm.objects.create(
    name="Deadly Predator Method",
    mote_cost=15,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Indefinite",
)
deadly_predator_method.prerequisites.add(
    crimson_talon_vigor, red_toothed_execution_order, saga_beast_virtue
)

precision_of_the_striking_raptor = SolarCharm.objects.create(
    name="Precision of the Striking Raptor",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=1,
    min_essence=1,
    charm_type="supplemental",
    keywords=["withering-only"],
    duration="",
)
steel_storm_descending = SolarCharm.objects.create(
    name="Steel Storm Descending",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
steel_storm_descending.prerequisites.add(precision_of_the_striking_raptor)
flashing_draw_mastery = SolarCharm.objects.create(
    name="Flashing Draw Mastery",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
flashing_draw_mastery.prerequisites.add(steel_storm_descending)
joint_wounding_attack = SolarCharm.objects.create(
    name="Joint-Wounding Attack",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only", "stackable"],
    duration="Instant",
)
joint_wounding_attack.prerequisites.add(precision_of_the_striking_raptor)
angle_tracing_edge = SolarCharm.objects.create(
    name="Angle-Tracing Edge",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["uniform"],
    duration="Instant",
)
angle_tracing_edge.prerequisites.add(precision_of_the_striking_raptor)
triple_distance_attack_technique = SolarCharm.objects.create(
    name="Triple Distance Attack Technique",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="",
)
cascade_of_cutting_terror = SolarCharm.objects.create(
    name="Cascade of Cutting Terror",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["decisive-only"],
    duration="Instant",
)
cascade_of_cutting_terror.prerequisites.add(triple_distance_attack_technique)
swarm_culling_instinct = SolarCharm.objects.create(
    name="Swarm-Culling Instinct",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["uniform"],
    duration="Instant",
)
swarm_culling_instinct.prerequisites.add(flashing_draw_mastery)
mist_on_water_attack = SolarCharm.objects.create(
    name="Mist on Water Attack",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only", "mute"],
    duration="Instant",
)
mist_on_water_attack.prerequisites.add(joint_wounding_attack)
observer_deceiving_attack = SolarCharm.objects.create(
    name="Observer-Deceiving Attack",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mute", "uniform"],
    duration="Instant",
)
observer_deceiving_attack.prerequisites.add(joint_wounding_attack)
flying_steel_ruse = SolarCharm.objects.create(
    name="Flying Steel Ruse",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
flying_steel_ruse.prerequisites.add(observer_deceiving_attack)
empty_palm_technique = SolarCharm.objects.create(
    name="Empty Palm Technique",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
empty_palm_technique.prerequisites.add(observer_deceiving_attack)
fallen_weapon_deflection = SolarCharm.objects.create(
    name="Fallen Weapon Deflection",
    mote_cost=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
fallen_weapon_deflection.prerequisites.add(empty_palm_technique)
mist_gathering_practice = SolarCharm.objects.create(
    name="Mist-Gathering Practice",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mute"],
    duration="Instant",
)
mist_gathering_practice.prerequisites.add(joint_wounding_attack)
shower_of_deadly_blades = SolarCharm.objects.create(
    name="Shower of Deadly Blades",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["withering-only"],
    duration="Instant",
)
shower_of_deadly_blades.prerequisites.add(cascade_of_cutting_terror)
shrike_saving_discretion = SolarCharm.objects.create(
    name="Shrike Saving Discretion",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Instant",
)
shrike_saving_discretion.prerequisites.add(swarm_culling_instinct)
crimson_razor_wind = SolarCharm.objects.create(
    name="Crimson Razor Wind",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only", "mute"],
    duration="Instant",
)
crimson_razor_wind.prerequisites.add(observer_deceiving_attack)
sharp_hand_feint = SolarCharm.objects.create(
    name="Sharp Hand Feint",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
sharp_hand_feint.prerequisites.add(observer_deceiving_attack)
shadow_wind_slash_shadow_wind_kill = SolarCharm.objects.create(
    name="Shadow Wind Slash (Shadow Wind Kill)",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["clash", "decisive-only"],
    duration="Instant",
)
shadow_wind_slash_shadow_wind_kill.prerequisites.add(sharp_hand_feint)
shadow_thrust_spark = SolarCharm.objects.create(
    name="Shadow Thrust Spark",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
shadow_thrust_spark.prerequisites.add(sharp_hand_feint)
savage_wolf_attack = SolarCharm.objects.create(
    name="Savage Wolf Attack",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["withering-only"],
    duration="Instant",
)
savage_wolf_attack.prerequisites.add(fallen_weapon_deflection)
falling_icicle_strike = SolarCharm.objects.create(
    name="Falling Icicle Strike",
    mote_cost=6,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["decisive-only"],
    duration="Instant",
)
falling_icicle_strike.prerequisites.add(mist_gathering_practice)
fiery_solar_chakram = SolarCharm.objects.create(
    name="Fiery Solar Chakram",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only"],
    duration="Instant",
)
fiery_solar_chakram.prerequisites.add(cascade_of_cutting_terror)
cutting_circle_of_destruction = SolarCharm.objects.create(
    name="Cutting Circle of Destruction",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=4,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
cutting_circle_of_destruction.prerequisites.add(falling_icicle_strike)

war_god_descendent = SolarCharm.objects.create(
    name="War God Descendent",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=1,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
immortal_commanders_presence = SolarCharm.objects.create(
    name="Immortal Commander's Presence",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=2,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
immortal_commanders_presence.prerequisites.add(war_god_descendent)
league_of_iron_preparation = SolarCharm.objects.create(
    name="League of Iron Preparation",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
league_of_iron_preparation.prerequisites.add(war_god_descendent)
rout_stemming_gesture = SolarCharm.objects.create(
    name="Rout-Stemming Gesture",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
rout_stemming_gesture.prerequisites.add(war_god_descendent)
holistic_battle_understanding = SolarCharm.objects.create(
    name="Holistic Battle Understanding",
    mote_cost=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
holistic_battle_understanding.prerequisites.add(war_god_descendent)
ideal_battle_knowledge_prana = SolarCharm.objects.create(
    name="Ideal Battle Knowledge Prana",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
tiger_warrior_training_technique = SolarCharm.objects.create(
    name="Tiger Warrior Training Technique",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Indefinite",
)
tiger_warrior_training_technique.prerequisites.add(league_of_iron_preparation)
magnanimity_of_the_unstoppable_icon = SolarCharm.objects.create(
    name="Magnanimity of the Unstoppable Icon",
    mote_cost=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
magnanimity_of_the_unstoppable_icon.prerequisites.add(rout_stemming_gesture)
redoubt_raising_gesture = SolarCharm.objects.create(
    name="Redoubt-Raising Gesture",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=3,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
redoubt_raising_gesture.prerequisites.add(holistic_battle_understanding)
general_of_the_all_seeing_sun = SolarCharm.objects.create(
    name="General of the All-Seeing Sun",
    mote_cost=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    duration="Instant",
)
general_of_the_all_seeing_sun.prerequisites.add(redoubt_raising_gesture)
immortal_warlords_tactic = SolarCharm.objects.create(
    name="Immortal Warlord's Tactic",
    mote_cost=4,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
immortal_warlords_tactic.prerequisites.add(ideal_battle_knowledge_prana)
battle_path_ascendant = SolarCharm.objects.create(
    name="Battle Path Ascendant",
    mote_cost=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
battle_path_ascendant.prerequisites.add(ideal_battle_knowledge_prana)
march_of_the_returner = SolarCharm.objects.create(
    name="March of the Returner",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="Instant",
)
march_of_the_returner.prerequisites.add(magnanimity_of_the_unstoppable_icon)
supremacy_of_the_divine_army = SolarCharm.objects.create(
    name="Supremacy of the Divine Army",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
supremacy_of_the_divine_army.prerequisites.add(march_of_the_returner)
four_glories_meditation = SolarCharm.objects.create(
    name="Four Glories Meditation",
    mote_cost=0,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=[],
    duration="Permanent",
)
four_glories_meditation.prerequisites.add(general_of_the_all_seeing_sun)
transcendent_warlords_genius = SolarCharm.objects.create(
    name="Transcendent Warlord's Genius",
    mote_cost=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    duration="Instant",
)
transcendent_warlords_genius.prerequisites.add(battle_path_ascendant)
battle_visionarys_foresight = SolarCharm.objects.create(
    name="Battle-Visionary's Foresight",
    mote_cost=10,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=[],
    duration="scene",
)
battle_visionarys_foresight.prerequisites.add(
    general_of_the_all_seeing_sun, transcendent_warlords_genius
)

snake = MartialArtsStyle.objects.create(
    name="Snake Style",
    weapons="unarmed attacks, seven-section staff, hooked sword",
    armor="light",
).add_source("Exalted 3rd Edition", 427)

serpentine_evasion = MartialArtsCharm.objects.create(
    name="Serpentine Evasion",
    mote_cost=2,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 427)
striking_cobra_technique = MartialArtsCharm.objects.create(
    name="Striking Cobra Technique",
    mote_cost=3,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemento",
    keywords=["dual", "mastery"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 427)
snake_form = MartialArtsCharm.objects.create(
    name="Snake Form",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form"],
    style=snake,
    duration="scene",
).add_source("Exalted 3rd Edition", 427)
snake_form.prerequisites.add(serpentine_evasion, striking_cobra_technique)
armor_penetrating_fang_strike = MartialArtsCharm.objects.create(
    name="Armor-Penetrating Fang Strike",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["dual", "terrestrial"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 428)
armor_penetrating_fang_strike.prerequisites.add(snake_form)
crippling_pressure_point_strike = MartialArtsCharm.objects.create(
    name="Crippling Pressure-Point Strike",
    mote_cost=3,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["decisive-only", "terrestrial"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 428)
crippling_pressure_point_strike.prerequisites.add(snake_form)
essence_fangs_and_scales_technique = MartialArtsCharm.objects.create(
    name="Essence Fangs and Scales Technique",
    mote_cost=1,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="permanent",
    keywords=["mastery"],
    style=snake,
    duration="permanent",
).add_source("Exalted 3rd Edition", 429)
essence_fangs_and_scales_technique.prerequisites.add(snake_form)
uncoiling_serpent_prana = MartialArtsCharm.objects.create(
    name="Uncoiling Serpent Prana",
    mote_cost=7,
    initiative_cost=3,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=3,
    charm_type="simple",
    keywords=["terrestrial", "uniform"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 429)
uncoiling_serpent_prana.prerequisites.add(essence_fangs_and_scales_technique)
snake_strikes_the_heel = MartialArtsCharm.objects.create(
    name="Snake Strikes the Heel",
    mote_cost=2,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["clash", "dual", "terrestrial"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 429)
snake_strikes_the_heel.prerequisites.add(snake_form)
countless_coils_evasion = MartialArtsCharm.objects.create(
    name="Countless Coils Evasion",
    mote_cost=7,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only", "perilous", "terrestrial"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 429)
countless_coils_evasion.prerequisites.add(snake_strikes_the_heel)
essence_venom_strike = MartialArtsCharm.objects.create(
    name="Essence Venom Strike",
    mote_cost=6,
    initiative_cost=3,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["aggravated", "decisive-only", "mastery", "terrestrial"],
    style=snake,
    duration="instant",
).add_source("Exalted 3rd Edition", 430)
essence_venom_strike.prerequisites.add(
    armor_penetrating_fang_strike,
    countless_coils_evasion,
    crippling_pressure_point_strike,
    uncoiling_serpent_prana,
)


tiger = MartialArtsStyle.objects.create(
    name="Tiger Style", weapons="unarmed attacks", armor="light armor"
).add_source("Exalted 3rd Edition", 431)

striking_fury_claws = MartialArtsCharm.objects.create(
    name="Striking Fury Claws",
    mote_cost=6,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery", "withering-only"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 431)
crimson_leaping_cat_technique = MartialArtsCharm.objects.create(
    name="Crimson Leaping Cat Technique",
    mote_cost=4,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["uniform"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 431)
tiger_form = MartialArtsCharm.objects.create(
    name="Tiger Form",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form", "terrestrial"],
    style=tiger,
    duration="scene",
).add_source("Exalted 3rd Edition", 431)
tiger_form.prerequisites.add(crimson_leaping_cat_technique, striking_fury_claws)
celestial_tiger_hide = MartialArtsCharm.objects.create(
    name="Celestial Tiger Hide",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["terrestrial"],
    style=tiger,
    duration="scene",
).add_source("Exalted 3rd Edition", 432)
celestial_tiger_hide.prerequisites.add(tiger_form)
iron_claw_grip = MartialArtsCharm.objects.create(
    name="Iron Claw Grip",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 432)
iron_claw_grip.prerequisites.add(tiger_form)
prey_maiming_frenzy = MartialArtsCharm.objects.create(
    name="Prey-Maiming Frenzy",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "terrestrial"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 432)
prey_maiming_frenzy.prerequisites.add(iron_claw_grip)
raging_tiger_pounce = MartialArtsCharm.objects.create(
    name="Raging Tiger Pounce",
    mote_cost=4,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mastery", "uniform"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 432)
raging_tiger_pounce.prerequisites.add(tiger_form)
spine_shattering_bite = MartialArtsCharm.objects.create(
    name="Spine-Shattering Bite",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 433)
spine_shattering_bite.prerequisites.add(raging_tiger_pounce)
stalking_cat_movement_meditation = MartialArtsCharm.objects.create(
    name="Stalking Cat Movement Meditation",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery"],
    style=tiger,
    duration="scene",
).add_source("Exalted 3rd Edition", 433)
stalking_cat_movement_meditation.prerequisites.add(tiger_form)
leap_from_cloaking_shadows = MartialArtsCharm.objects.create(
    name="Leap From Cloaking Shadows",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=tiger,
    duration="instant",
).add_source("Exalted 3rd Edition", 433)
leap_from_cloaking_shadows.prerequisites.add(stalking_cat_movement_meditation)
angry_predator_frenzy = MartialArtsCharm.objects.create(
    name="Angry Predator Frenzy",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["mastery", "terrestrial"],
    style=tiger,
    duration="permanent",
).add_source("Exalted 3rd Edition", 433)
angry_predator_frenzy.prerequisites.add(
    celestial_tiger_hide,
    prey_maiming_frenzy,
    spine_shattering_bite,
    leap_from_cloaking_shadows,
)


single_point = MartialArtsStyle.objects.create(
    name="Single Point Shining Into the Void Style",
    weapons="slashing swords, reaper daiklaives",
    armor="light and medium",
).add_source("Exalted 3rd Edition", 434)

gathering_light_concentration = MartialArtsCharm.objects.create(
    name="Gathering Light Concentration",
    mote_cost=3,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 434)
shining_starfall_execution = MartialArtsCharm.objects.create(
    name="Shining Starfall Execution",
    mote_cost=6,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only", "mastery"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 434)
single_point_form = MartialArtsCharm.objects.create(
    name="Single Point Shining Into the Void Form",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["form", "mastery", "terrestrial"],
    style=single_point,
    duration="scene",
).add_source("Exalted 3rd Edition", 434)
single_point_form.prerequisites.add(
    gathering_light_concentration, shining_starfall_execution
)
fatal_stroke_flash = MartialArtsCharm.objects.create(
    name="Fatal Stroke Flash",
    mote_cost=1,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 435)
fatal_stroke_flash.prerequisites.add(single_point_form)
liquid_steel_flow = MartialArtsCharm.objects.create(
    name="Liquid Steel Flow",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["dual", "mastery", "terrestrial"],
    style=single_point,
    duration="round",
).add_source("Exalted 3rd Edition", 436)
liquid_steel_flow.prerequisites.add(fatal_stroke_flash)
void_slicing_wind = MartialArtsCharm.objects.create(
    name="Void-Slicing Wind",
    mote_cost=6,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "terrestrial"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 436)
void_slicing_wind.prerequisites.add(single_point_form)
horizon_swallowed_star_flash = MartialArtsCharm.objects.create(
    name="Horizon-Swallowed Star Flash",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["clash", "decisive-only", "mastery", "terrestrial"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 436)
horizon_swallowed_star_flash.prerequisites.add(single_point_form)
six_demon_scabbard_binding = MartialArtsCharm.objects.create(
    name="Six-Demon Scabbard Binding",
    mote_cost=1,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["clash", "decisive-only", "terrestrial"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 436)
six_demon_scabbard_binding.prerequisites.add(horizon_swallowed_star_flash)
binding_nova_flare = MartialArtsCharm.objects.create(
    name="Blinding Nova Flare",
    mote_cost=0,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=single_point,
    duration="instant",
).add_source("Exalted 3rd Edition", 436)
binding_nova_flare.prerequisites.add(
    liquid_steel_flow, six_demon_scabbard_binding, void_slicing_wind
)


white_reaper = MartialArtsStyle.objects.create(
    name="White Reaper Style",
    weapons="scythes and spears, staff or unarmed strike",
    armor="all",
).add_source("Exalted 3rd Edition", 438)

falling_scythe_flash = MartialArtsCharm.objects.create(
    name="Falling Scythe Flash",
    mote_cost=5,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["dual"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 438)
revolving_crescent_defense = MartialArtsCharm.objects.create(
    name="Revolving Crescent Defense",
    mote_cost=4,
    initiative_cost=1,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 438)
white_reaper_form = MartialArtsCharm.objects.create(
    name="White Reaper Form",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form"],
    style=white_reaper,
    duration="scene",
).add_source("Exalted 3rd Edition", 438)
white_reaper_form.prerequisites.add(falling_scythe_flash, revolving_crescent_defense)
bleeding_crescent_strike = MartialArtsCharm.objects.create(
    name="Bleeding Crescent Strike",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["mastery", "terrestial", "uniform"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 439)
bleeding_crescent_strike.prerequisites.add(white_reaper_form)
greatest_killer_attitude = MartialArtsCharm.objects.create(
    name="Greatest Killer Attitude",
    mote_cost=3,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["dual"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 439)
greatest_killer_attitude.prerequisites.add(bleeding_crescent_strike)
enemies_like_grass = MartialArtsCharm.objects.create(
    name="Enemies Like Grass",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["dual", "terrestrial"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 440)
enemies_like_grass.prerequisites.add(white_reaper_form)
flickering_corona_barrier = MartialArtsCharm.objects.create(
    name="Flickering Corona Barrier",
    mote_cost=2,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=white_reaper,
    duration="instant",
).add_source("Exalted 3rd Edition", 440)
flickering_corona_barrier.prerequisites.add(white_reaper_form)
impenetrable_white_shroud = MartialArtsCharm.objects.create(
    name="Impenetrable White Shroud",
    mote_cost=4,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=[],
    style=white_reaper,
    duration="scene",
).add_source("Exalted 3rd Edition", 440)
impenetrable_white_shroud.prerequisites.add(flickering_corona_barrier)
snow_follows_winter = MartialArtsCharm.objects.create(
    name="Snow Follows Winter",
    mote_cost=0,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["mastery"],
    style=white_reaper,
    duration="permanent",
).add_source("Exalted 3rd Edition", 440)
snow_follows_winter.prerequisites.add(
    enemies_like_grass, greatest_killer_attitude, impenetrable_white_shroud
)


ebon_shadow = MartialArtsStyle.objects.create(
    name="Ebon Shadow Style",
    weapons="chains, unarmed, sais, tiger claws, knives",
    armor="none",
).add_source("Exalted 3rd Edition", 441)

nothing_but_shadows = MartialArtsCharm.objects.create(
    name="Nothing But Shadows",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["decisive-only", "mastery"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 441)
seven_points_of_weakness_strike = MartialArtsCharm.objects.create(
    name="Seven Points of Weakness Strike",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery", "withering-only"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 441)
ebon_shadow_form = MartialArtsCharm.objects.create(
    name="Ebon Shadow Form",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form", "mute"],
    style=ebon_shadow,
    duration="scene",
).add_source("Exalted 3rd Edition", 441)
ebon_shadow_form.prerequisites.add(nothing_but_shadows, seven_points_of_weakness_strike)
elusive_flicker_evasion = MartialArtsCharm.objects.create(
    name="Elusive Flicker Evasion",
    mote_cost=4,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 442)
elusive_flicker_evasion.prerequisites.add(ebon_shadow_form)
shadow_body_dissolution = MartialArtsCharm.objects.create(
    name="Shadow-Body Dissolution",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only", "mute", "terrestrial"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 442)
shadow_body_dissolution.prerequisites.add(elusive_flicker_evasion)
shadow_stepping_motion = MartialArtsCharm.objects.create(
    name="Shadow-Stepping Motion",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["dual", "mute"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 443)
shadow_stepping_motion.prerequisites.add(ebon_shadow_form)
throat_slitting_shadow_atemi = MartialArtsCharm.objects.create(
    name="Throat-Slitting Shadow Atemi",
    mote_cost=1,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=3,
    charm_type="supplemental",
    keywords=["decisive-only", "terrestrial"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 443)
throat_slitting_shadow_atemi.prerequisites.add(shadow_stepping_motion)
umbra_noose_execution = MartialArtsCharm.objects.create(
    name="Umbra Noose Execution",
    mote_cost=5,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "mastery"],
    style=ebon_shadow,
    duration="instant",
).add_source("Exalted 3rd Edition", 443)
umbra_noose_execution.prerequisites.add(
    shadow_body_dissolution, throat_slitting_shadow_atemi
)


crane = MartialArtsStyle.objects.create(
    name="Crane Style", weapons="war fan and hook sword, unarmed", armor="none"
).add_source("Exalted 3rd Edition", 443)

empowering_justice_redirection = MartialArtsCharm.objects.create(
    name="Empowering Justice Redirection",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery", "withering-only"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 443)
fluttering_cry_of_warning = MartialArtsCharm.objects.create(
    name="Fluttering Cry of Warning",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=crane,
    duration="turn",
).add_source("Exalted 3rd Edition", 444)
crane_form = MartialArtsCharm.objects.create(
    name="Crane Form",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["form"],
    style=crane,
    duration="scene",
).add_source("Exalted 3rd Edition", 444)
crane_form.prerequisites.add(empowering_justice_redirection, fluttering_cry_of_warning)
crossed_wings_denial = MartialArtsCharm.objects.create(
    name="Crossed Wings Denial",
    mote_cost=6,
    initiative_cost=4,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only", "terrestrial"],
    style=crane,
    duration="turn",
).add_source("Exalted 3rd Edition", 444)
crossed_wings_denial.prerequisites.add(crane_form)
feather_stirred_arrow_deflection = MartialArtsCharm.objects.create(
    name="Feather-Stirred Arrow Deflection",
    mote_cost=2,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["terrestrial", "uniform"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 444)
feather_stirred_arrow_deflection.prerequisites.add(crossed_wings_denial)
humbling_enlightenment_commentary = MartialArtsCharm.objects.create(
    name="Humbling Enlightenment Commentary",
    mote_cost=1,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 445)
humbling_enlightenment_commentary.prerequisites.add(crane_form)
wings_spread_to_sky = MartialArtsCharm.objects.create(
    name="Wings Spread to Sky",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["dual"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 445)
wings_spread_to_sky.prerequisites.add(crossed_wings_denial)
kindly_sifus_quill = MartialArtsCharm.objects.create(
    name="Kindly Sifu's Quill",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only", "mastery"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 445)
kindly_sifus_quill.prerequisites.add(humbling_enlightenment_commentary)
mournful_cranes_cry = MartialArtsCharm.objects.create(
    name="Mournful Crane's Cry",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 445)
mournful_cranes_cry.prerequisites.add(humbling_enlightenment_commentary)
wisdom_of_the_celestial_crane = MartialArtsCharm.objects.create(
    name="Wisdom of the Celestial Crane",
    mote_cost=7,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=4,
    charm_type="reflexive",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=crane,
    duration="instant",
).add_source("Exalted 3rd Edition", 446)
wisdom_of_the_celestial_crane.prerequisites.add(
    feather_stirred_arrow_deflection,
    kindly_sifus_quill,
    mournful_cranes_cry,
    wings_spread_to_sky,
)


silver_voiced = MartialArtsStyle.objects.create(
    name="Silver-Voiced Nightingale Style", weapons="unarmed", armor="light"
).add_source("Exalted 3rd Edition", 447)

voice_of_the_night_bird = MartialArtsCharm.objects.create(
    name="Voice of the Night Bird",
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="permanent",
    keywords=["mastery"],
    style=silver_voiced,
    duration="permanent",
).add_source("Exalted 3rd Edition", 447)
inspiring_battle_hymn = MartialArtsCharm.objects.create(
    name="Inspiring Battle Hymn",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 447)
inspiring_battle_hymn.prerequisites.add(voice_of_the_night_bird)
terrifying_battle_shriek = MartialArtsCharm.objects.create(
    name="Terrifying Battle Shriek",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["mastery"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 447)
terrifying_battle_shriek.prerequisites.add(voice_of_the_night_bird)
silver_voiced_nightingale_form = MartialArtsCharm.objects.create(
    name="Silver-Voiced Nightingale Form",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form"],
    style=silver_voiced,
    duration="scene",
).add_source("Exalted 3rd Edition", 448)
silver_voiced_nightingale_form.prerequisites.add(
    inspiring_battle_hymn, terrifying_battle_shriek
)
hearing_the_hearts_song = MartialArtsCharm.objects.create(
    name="Hearing the Heart's Song",
    mote_cost=5,
    initiative_cost=2,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery", "perilous", "decisive-only"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 448)
hearing_the_hearts_song.prerequisites.add(silver_voiced_nightingale_form)
harmony_in_opposition_stance = MartialArtsCharm.objects.create(
    name="Harmony in Opposition Stance",
    mote_cost=4,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["terrestrial"],
    style=silver_voiced,
    duration="scene",
).add_source("Exalted 3rd Edition", 448)
harmony_in_opposition_stance.prerequisites.add(hearing_the_hearts_song)
haunting_heart_rending_melody = MartialArtsCharm.objects.create(
    name="Haunting Heart-Rending Melody",
    mote_cost=1,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["terrestrial"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 448)
haunting_heart_rending_melody.prerequisites.add(silver_voiced_nightingale_form)
resounding_songbirds_cry = MartialArtsCharm.objects.create(
    name="Resounding Songbird's Cry",
    mote_cost=3,
    initiative_cost=2,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["terrestrial"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 449)
resounding_songbirds_cry.prerequisites.add(haunting_heart_rending_melody)
flashing_blade_harmony = MartialArtsCharm.objects.create(
    name="Flashing Blade Harmony",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["dual", "mastery"],
    style=silver_voiced,
    duration="instant",
).add_source("Exalted 3rd Edition", 449)
flashing_blade_harmony.prerequisites.add(silver_voiced_nightingale_form)
aria_of_victory = MartialArtsCharm.objects.create(
    name="Aria of Victory",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["prelious", "terrestrial"],
    style=silver_voiced,
    duration="scene",
).add_source("Exalted 3rd Edition", 449)
aria_of_victory.prerequisites.add(flashing_blade_harmony)
shattering_discord_cacophony = MartialArtsCharm.objects.create(
    name="Shattering Discord Cacophony",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "mastery", "terrestrial"],
    style=silver_voiced,
    duration="turn",
).add_source("Exalted 3rd Edition", 450)
shattering_discord_cacophony.prerequisites.add(
    aria_of_victory, harmony_in_opposition_stance, resounding_songbirds_cry
)


righteous_devil = MartialArtsStyle.objects.create(
    name="Righteous Devil Style", weapons="firewands", armor="light and medium"
).add_source("Exalted 3rd Edition", 450)

blossom_of_inevitable_demise = MartialArtsCharm.objects.create(
    name="Blossom of Inevitable Demise",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["dual"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 450)
cloud_of_ebon_devils = MartialArtsCharm.objects.create(
    name="Cloud of Ebon Devils",
    mote_cost=2,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 450)
kiss_of_the_sun_concentration = MartialArtsCharm.objects.create(
    name="Kiss of the Sun Concentration",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["dual", "mastery"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 450)
righteous_devil_form = MartialArtsCharm.objects.create(
    name="Righteous Devil Form",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=2,
    charm_type="simple",
    keywords=["form"],
    style=righteous_devil,
    duration="scene",
).add_source("Exalted 3rd Edition", 451)
righteous_devil_form.prerequisites.add(
    blossom_of_inevitable_demise, cloud_of_ebon_devils, kiss_of_the_sun_concentration
)
azure_abacus_meditation = MartialArtsCharm.objects.create(
    name="Azure Abacus Meditation",
    mote_cost=4,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="supplemental",
    keywords=["terrestrial", "withering-only"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 451)
azure_abacus_meditation.prerequisites.add(righteous_devil_form)
burning_judgment_halo = MartialArtsCharm.objects.create(
    name="Burning Judgment Halo",
    mote_cost=5,
    initiative_cost=4,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["perilous", "terrestrial"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 451)
burning_judgment_halo.prerequisites.add(righteous_devil_form)
phoenix_flies_on_golden_wings = MartialArtsCharm.objects.create(
    name="Phoenix Flies on Golden Wings",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["dual"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 452)
phoenix_flies_on_golden_wings.prerequisites.add(righteous_devil_form)
dancing_devil_trigger_finger = MartialArtsCharm.objects.create(
    name="Dancing Devil Trigger Finger",
    mote_cost=10,
    initiative_cost=3,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["decisive-only", "perilous", "terrestrial"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 452)
dancing_devil_trigger_finger.prerequisites.add(phoenix_flies_on_golden_wings)
caress_of_1000_hells = MartialArtsCharm.objects.create(
    name="Caress of 1,000 Hells",
    mote_cost=6,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=["aggravated", "decisive-only", "terrestrial"],
    style=righteous_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 452)
caress_of_1000_hells.prerequisites.add(
    azure_abacus_meditation, burning_judgment_halo, dancing_devil_trigger_finger
)


black_claw = MartialArtsStyle.objects.create(
    name="Black Claw Style", weapons="unarmed", armor="none"
).add_source("Exalted 3rd Edition", 453)

open_palm_caress = MartialArtsCharm.objects.create(
    name="Open Palm Caress",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=["mastery"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 453)
torn_lotus_defense = MartialArtsCharm.objects.create(
    name="Torn Lotus Defense",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["counterattack", "mastery", "terrestrial", "uniform"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 453)
flexing_the_emerald_claw = MartialArtsCharm.objects.create(
    name="Flexing the Emerald Claw",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplemental",
    keywords=["decisive-only"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 454)
flexing_the_emerald_claw.prerequisites.add(open_palm_caress, torn_lotus_defense)
black_claw_form = MartialArtsCharm.objects.create(
    name="Black Claw Form",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="simple",
    keywords=["form"],
    style=black_claw,
    duration="scene",
).add_source("Exalted 3rd Edition", 454)
black_claw_form.prerequisites.add(flexing_the_emerald_claw)
doe_eyes_defense = MartialArtsCharm.objects.create(
    name="Doe Eyes Defense",
    mote_cost=4,
    initiative_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery", "terrestrial", "uniform"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 455)
doe_eyes_defense.prerequisites.add(black_claw_form)
storm_calming_embrace = MartialArtsCharm.objects.create(
    name="Storm-Calming Embrace",
    mote_cost=2,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only", "mastery"],
    style=black_claw,
    duration="until released",
).add_source("Exalted 3rd Edition", 455)
storm_calming_embrace.prerequisites.add(black_claw_form)
table_turning_reversal = MartialArtsCharm.objects.create(
    name="Table-Turning Reversal",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["counterattack", "decisive-only"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 455)
table_turning_reversal.prerequisites.add(black_claw_form)
outrage_kindling_cry = MartialArtsCharm.objects.create(
    name="Outrage-Kindling Cry",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["counterattack", "terrestrial"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 455)
outrage_kindling_cry.prerequisites.add(
    doe_eyes_defense, storm_calming_embrace, table_turning_reversal
)
heart_ripping_claw = MartialArtsCharm.objects.create(
    name="Heart-Ripping Claw",
    mote_cost=10,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["aggravated", "decisive-only", "mastery", "terrestrial"],
    style=black_claw,
    duration="instant",
).add_source("Exalted 3rd Edition", 456)
heart_ripping_claw.prerequisites.add(outrage_kindling_cry)
dreaming_pearl = MartialArtsStyle.objects.create(
    name="Dreaming Pearl Courtesan",
    weapons="unarmed strikes, war fans, whips, improvised weapons",
    armor="None",
).add_source("Exalted 3rd Edition", 456)

demure_carp_feint = MartialArtsCharm.objects.create(
    name="Demure Carp Feint",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery", "uniform"],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 456)
elegant_weapon_repertoire = MartialArtsCharm.objects.create(
    name="Elegant Weapon Repertoire",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="supplementary",
    keywords=["dual", "mastery"],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 457)
pearlescent_filigree_defense = MartialArtsCharm.objects.create(
    name="Pearlescent Filigree Defense",
    mote_cost=1,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="reflexive",
    keywords=["mastery"],
    style=dreaming_pearl,
    duration="scene",
).add_source("Exalted 3rd Edition", 458)
dreaming_pearl_courtesan_form = MartialArtsCharm.objects.create(
    name="Dreaming Pearl Courtesan Form",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="simple",
    keywords=["form"],
    style=dreaming_pearl,
    duration="scene",
).add_source("Exalted 3rd Edition", 458)
dreaming_pearl_courtesan_form.prerequisites.add(
    demure_carp_feint, elegant_weapon_repertoire, pearlescent_filigree_defense
)
flurry_of_august_leaves = MartialArtsCharm.objects.create(
    name="Flurry of August Leaves",
    mote_cost=3,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=["decisive-only"],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 458)
flurry_of_august_leaves.prerequisites.add(dreaming_pearl_courtesan_form)
vindictive_concubines_pillow_book = MartialArtsCharm.objects.create(
    name="Vindictive Concubine's Pillow Book",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only", "terrestrial"],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 459)
vindictive_concubines_pillow_book.prerequisites.add(flurry_of_august_leaves)
fragant_pearl_fascination_kata = MartialArtsCharm.objects.create(
    name="Fragrant Petal Fascination Kata",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="supplemental",
    keywords=[],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 459)
fragant_pearl_fascination_kata.prerequisites.add(dreaming_pearl_courtesan_form)
seven_storms_escape_prana = MartialArtsCharm.objects.create(
    name="Seven Storms Escape Prana",
    mote_cost=4,
    initiative_cost=2,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    charm_type="reflexive",
    keywords=["mastery"],
    style=dreaming_pearl,
    duration="instant",
).add_source("Exalted 3rd Edition", 459)
seven_storms_escape_prana.prerequisites.add(fragant_pearl_fascination_kata)
invoking_the_chimeras_coils = MartialArtsCharm.objects.create(
    name="Invoking the Chimera's Coils",
    mote_cost=8,
    initiative_cost=0,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["mastery", "terrestrial"],
    style=dreaming_pearl,
    duration="permanent",
).add_source("Exalted 3rd Edition", 459)
invoking_the_chimeras_coils.prerequisites.add(
    seven_storms_escape_prana, vindictive_concubines_pillow_book
)


steel_devil = MartialArtsStyle.objects.create(
    name="Steel Devil", weapons="dual wielding paired swords", armor="light and medium"
).add_source("Exalted 3rd Edition", 461)

naked_fang_draw = MartialArtsCharm.objects.create(
    name="Naked Fang Draw",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    charm_type="supplemental",
    keywords=[],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 461)
double_attack_technique = MartialArtsCharm.objects.create(
    name="Double Attack Technique",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    charm_type="simple",
    keywords=["terrestrial", "withering-only"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 461)
double_attack_technique.prerequisites.add(naked_fang_draw)
triple_attack_technique = MartialArtsCharm.objects.create(
    name="Triple Attack Technique",
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="permanent",
    keywords=["mastery", "terrestrial", "withering-only"],
    style=steel_devil,
    duration="permanent",
).add_source("Exalted 3rd Edition", 462)
triple_attack_technique.prerequisites.add(double_attack_technique)
steel_devil_strike = MartialArtsCharm.objects.create(
    name="Steel Devil Strike",
    mote_cost=5,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    charm_type="reflexive",
    keywords=["decisive-only", "mastery"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 462)
steel_devil_strike.prerequisites.add(double_attack_technique)
steel_devil_form = MartialArtsCharm.objects.create(
    name="Steel Devil Form",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=1,
    charm_type="simple",
    keywords=["form"],
    style=steel_devil,
    duration="scene",
).add_source("Exalted 3rd Edition", 462)
steel_devil_form.prerequisites.add(steel_devil_strike)
seconds_between_strife = MartialArtsCharm.objects.create(
    name="Seconds Between Strife",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="supplemental",
    keywords=[],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 462)
seconds_between_strife.prerequisites.add(steel_devil_form)
sonic_slash = MartialArtsCharm.objects.create(
    name="Sonic Slash",
    mote_cost=5,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["decisive-only", "terrestrial"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 462)
sonic_slash.prerequisites.add(seconds_between_strife)
dual_slaying_stance = MartialArtsCharm.objects.create(
    name="Dual-Slaying Stance",
    mote_cost=5,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="simple",
    keywords=["form", "terrestrial"],
    style=steel_devil,
    duration="scene",
).add_source("Exalted 3rd Edition", 463)
dual_slaying_stance.prerequisites.add(steel_devil_form)
twin_blade_defense = MartialArtsCharm.objects.create(
    name="Twins-Blade Defense",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=[],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 463)
twin_blade_defense.prerequisites.add(dual_slaying_stance)
iron_lotus_unfurling = MartialArtsCharm.objects.create(
    name="Iron Lotus Unfurling",
    mote_cost=5,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["counterattack", "decisive-only"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 464)
iron_lotus_unfurling.prerequisites.add(twin_blade_defense)
empty_mind_strike = MartialArtsCharm.objects.create(
    name="Empty Mind Strike",
    mote_cost=4,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    charm_type="reflexive",
    keywords=["decisive-only"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 464)
empty_mind_strike.prerequisites.add(steel_devil_form)
dervish_blade_frenzy = MartialArtsCharm.objects.create(
    name="Dervish Blade Frenzy",
    mote_cost=12,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="reflexive",
    keywords=["mastery", "withering-only"],
    style=steel_devil,
    duration="instant",
).add_source("Exalted 3rd Edition", 464)
dervish_blade_frenzy.prerequisites.add(empty_mind_strike)
whirling_guillotine_dance = MartialArtsCharm.objects.create(
    name="Whirling Guillotine Dance",
    mote_cost=10,
    willpower_cost=1,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    charm_type="simple",
    keywords=["form", "mastery"],
    style=steel_devil,
    duration="scene",
).add_source("Exalted 3rd Edition", 464)
whirling_guillotine_dance.prerequisites.add(
    dervish_blade_frenzy, iron_lotus_unfurling, sonic_slash
)

unobstructed_hunter_s_aim = DragonBloodedCharm.objects.create(
    name="Unobstructed Hunter's Aim",
    mote_cost=1,
    statistic="archery",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "uniform", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 163)
sky_calming_draw = DragonBloodedCharm.objects.create(
    name="Sky-Calming Draw",
    mote_cost=3,
    statistic="archery",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 163)
death_from_nowhere = DragonBloodedCharm.objects.create(
    name="Death From Nowhere",
    mote_cost=4,
    statistic="archery",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air/water", "balanced", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 164)
death_from_nowhere.prerequisites.add(sky_calming_draw)
harvest_of_the_hunter = DragonBloodedCharm.objects.create(
    name="Harvest of the Hunter",
    mote_cost=1,
    statistic="archery",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 164)
arrow_thorn_technique = DragonBloodedCharm.objects.create(
    name="Arrow Thorn Technique",
    mote_cost=3,
    statistic="archery",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "dual", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 164)
arrow_thorn_technique.prerequisites.add(harvest_of_the_hunter)
boughs_of_burning_autumn = DragonBloodedCharm.objects.create(
    name="Boughs of Burning Autumn",
    mote_cost=2,
    statistic="archery",
    min_statistic=4,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire/wood", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 164)
boughs_of_burning_autumn.prerequisites.add(harvest_of_the_hunter)
life_swelling_sap_strike = DragonBloodedCharm.objects.create(
    name="Life-Swelling Sap Strike",
    mote_cost=3,
    statistic="archery",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 164)
life_swelling_sap_strike.prerequisites.add(harvest_of_the_hunter)
arbor_sentinel_technique = DragonBloodedCharm.objects.create(
    name="Arbor Sentinel Technique",
    mote_cost=4,
    statistic="archery",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
arbor_sentinel_technique.prerequisites.add(life_swelling_sap_strike)
drawing_lightning_style = DragonBloodedCharm.objects.create(
    name="Drawing Lightning Style",
    mote_cost=4,
    statistic="archery",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "aura", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
drawing_lightning_style.prerequisites.add(death_from_nowhere)
spring_follows_winter = DragonBloodedCharm.objects.create(
    name="Spring Follows Winter",
    mote_cost=2,
    statistic="archery",
    min_statistic=4,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "perilous", "uniform", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
spring_follows_winter.prerequisites.add(death_from_nowhere)
horizon_spanning_arc = DragonBloodedCharm.objects.create(
    name="Horizon-Spanning Arc",
    mote_cost=4,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
earth_s_judgment_awakened = DragonBloodedCharm.objects.create(
    name="Earth's Judgment Awakened",
    mote_cost=6,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["counterattack", "decisive-only", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
blazing_phoenix_pinion = DragonBloodedCharm.objects.create(
    name="Blazing Phoenix Pinion",
    mote_cost=8,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 165)
fang_of_the_depths_draw = DragonBloodedCharm.objects.create(
    name="Fang-of-the-Depths Draw",
    mote_cost=2,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["signature (water)", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 166)
heartbeats_before_death = DragonBloodedCharm.objects.create(
    name="Heartbeats Before Death",
    mote_cost=1,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "signature (wood)", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 166)
dragonfly_finds_mate = DragonBloodedCharm.objects.create(
    name="Dragonfly Finds Mate",
    mote_cost=5,
    statistic="archery",
    min_statistic=4,
    min_essence=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "perilous", "withering-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 166)
dragonfly_finds_mate.prerequisites.add(spring_follows_winter)
salamander_swallows_flames = DragonBloodedCharm.objects.create(
    name="Salamander Swallows Flames",
    mote_cost=0,
    statistic="archery",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["clash", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 166)
salamander_swallows_flames.prerequisites.add(
    boughs_of_burning_autumn, dragonfly_finds_mate
)
seven_year_swarm_volley = DragonBloodedCharm.objects.create(
    name="Seven-Year Swarm Volley",
    mote_cost=6,
    statistic="archery",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 167)
seven_year_swarm_volley.prerequisites.add(dragonfly_finds_mate)
sparrow_dives_at_hawk = DragonBloodedCharm.objects.create(
    name="Sparrow Dives at Hawk",
    mote_cost=0,
    statistic="archery",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["aura", "clash", "decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 167)
sparrow_dives_at_hawk.prerequisites.add(dragonfly_finds_mate)
swallows_defend_the_nest = DragonBloodedCharm.objects.create(
    name="Swallows Defend the Nest",
    mote_cost=8,
    statistic="archery",
    min_statistic=5,
    min_essence=5,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "clash", "decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 167)
swallows_defend_the_nest.prerequisites.add(sparrow_dives_at_hawk)
arrow_rain_tempest = DragonBloodedCharm.objects.create(
    name="Arrow Rain Tempest",
    mote_cost=6,
    statistic="archery",
    min_statistic=5,
    min_essence=5,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 168)
arrow_rain_tempest.prerequisites.add(swallows_defend_the_nest)
effortlessly_rising_flame = DragonBloodedCharm.objects.create(
    name="Effortlessly Rising Flame",
    mote_cost=2,
    statistic="athletics",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 168)
bellows_pumping_stride = DragonBloodedCharm.objects.create(
    name="Bellows-Pumping Stride",
    mote_cost=3,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 168)
verdant_dragon_s_footsteps = DragonBloodedCharm.objects.create(
    name="Verdant Dragon's Footsteps",
    mote_cost=4,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 168)
verdant_dragon_s_footsteps.prerequisites.add(bellows_pumping_stride)
soaring_leap_technique = DragonBloodedCharm.objects.create(
    name="Soaring Leap Technique",
    mote_cost=1,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
strength_of_stone_technique = DragonBloodedCharm.objects.create(
    name="Strength of Stone Technique",
    mote_cost=5,
    statistic="athletics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
grandmother_oak_exertion = DragonBloodedCharm.objects.create(
    name="Grandmother Oak Exertion",
    mote_cost=3,
    statistic="athletics",
    min_statistic=4,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
grandmother_oak_exertion.prerequisites.add(strength_of_stone_technique)
perfect_climbing_attitude = DragonBloodedCharm.objects.create(
    name="Perfect Climbing Attitude",
    mote_cost=4,
    statistic="athletics",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
incense_smoke_ladder = DragonBloodedCharm.objects.create(
    name="Incense Smoke Ladder",
    mote_cost=3,
    statistic="athletics",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["air/fire", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
incense_smoke_ladder.prerequisites.add(bellows_pumping_stride, soaring_leap_technique)
mountain_toppling_might = DragonBloodedCharm.objects.create(
    name="Mountain-Toppling Might",
    mote_cost=3,
    statistic="athletics",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
mountain_toppling_might.prerequisites.add(strength_of_stone_technique)
soaring_zephyr_flight = DragonBloodedCharm.objects.create(
    name="Soaring Zephyr Flight",
    mote_cost=5,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "perilous", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 169)
soaring_zephyr_flight.prerequisites.add(incense_smoke_ladder)
unshakable_mountain_spine = DragonBloodedCharm.objects.create(
    name="Unshakable Mountain Spine",
    mote_cost=5,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 170)
unshakable_mountain_spine.prerequisites.add(mountain_toppling_might)
inescapable_blazing_advance = DragonBloodedCharm.objects.create(
    name="Inescapable Blazing Advance",
    mote_cost=5,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 170)
inescapable_blazing_advance.prerequisites.add(bellows_pumping_stride)
dragon_surmounts_the_waterfall = DragonBloodedCharm.objects.create(
    name="Dragon Surmounts the Waterfall",
    mote_cost=5,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 171)
graceful_dryad_dance = DragonBloodedCharm.objects.create(
    name="Graceful Dryad Dance",
    mote_cost=5,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 171)
dancing_ember_stride = DragonBloodedCharm.objects.create(
    name="Dancing Ember Stride",
    mote_cost=4,
    statistic="athletics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 171)
dancing_ember_stride.prerequisites.add(incense_smoke_ladder)
seething_dragon_footprint = DragonBloodedCharm.objects.create(
    name="Seething Dragon Footprint",
    mote_cost=0,
    statistic="athletics",
    min_statistic=5,
    min_essence=4,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 171)
seething_dragon_footprint.prerequisites.add(dancing_ember_stride)
falling_star_maneuver = DragonBloodedCharm.objects.create(
    name="Falling Star Maneuver",
    mote_cost=6,
    statistic="athletics",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 171)
falling_star_maneuver.prerequisites.add(dancing_ember_stride)
precision_observation_method = DragonBloodedCharm.objects.create(
    name="Precision Observation Method",
    mote_cost=1,
    statistic="awareness",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 172)
cloud_piercing_focus = DragonBloodedCharm.objects.create(
    name="Cloud-Piercing Focus",
    mote_cost=1,
    statistic="awareness",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One tick",
    keywords=["balanced", "earth or fire or water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 172)
deep_listening_palm = DragonBloodedCharm.objects.create(
    name="Deep-Listening Palm",
    mote_cost=5,
    statistic="awareness",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 172)
all_encompassing_earth_sense = DragonBloodedCharm.objects.create(
    name="All-Encompassing Earth Sense",
    mote_cost=3,
    statistic="awareness",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 172)
all_encompassing_earth_sense.prerequisites.add(deep_listening_palm)
dragon_s_crushing_gaze = DragonBloodedCharm.objects.create(
    name="Dragon's Crushing Gaze",
    mote_cost=4,
    statistic="awareness",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth or water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 172)
dragon_s_crushing_gaze.prerequisites.add(cloud_piercing_focus)
hesiesh_s_discerning_tongue = DragonBloodedCharm.objects.create(
    name="Hesiesh's Discerning Tongue",
    mote_cost=3,
    statistic="awareness",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 173)
feeling_the_dragon_s_bones = DragonBloodedCharm.objects.create(
    name="Feeling the Dragon's Bones",
    mote_cost=5,
    statistic="awareness",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 173)
feeling_the_dragon_s_bones.prerequisites.add(all_encompassing_earth_sense)
horizon_spanning_echoes = DragonBloodedCharm.objects.create(
    name="Horizon-Spanning Echoes",
    mote_cost=5,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 174)
one_with_earth_embodiment = DragonBloodedCharm.objects.create(
    name="One-With-Earth Embodiment",
    mote_cost=10,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One round",
    keywords=["aura", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 174)
one_with_earth_embodiment.prerequisites.add(feeling_the_dragon_s_bones)
eye_of_blazing_truth = DragonBloodedCharm.objects.create(
    name="Eye of Blazing Truth",
    mote_cost=4,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 174)
serpent_of_the_depths_discernment = DragonBloodedCharm.objects.create(
    name="Serpent-of-the-Depths Discernment",
    mote_cost=3,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 174)
dragon_s_flaring_nostrils = DragonBloodedCharm.objects.create(
    name="Dragon's Flaring Nostrils",
    mote_cost=6,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 174)
dragon_s_twitching_whisker = DragonBloodedCharm.objects.create(
    name="Dragon's Twitching Whisker",
    mote_cost=3,
    statistic="awareness",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 175)
dragon_s_twitching_whisker.prerequisites.add(
    dragon_s_crushing_gaze, feeling_the_dragon_s_bones
)
sense_the_hidden_ember = DragonBloodedCharm.objects.create(
    name="Sense the Hidden Ember",
    mote_cost=1,
    statistic="awareness",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 175)
sense_the_hidden_ember.prerequisites.add(feeling_the_dragon_s_bones)
sense_riding_technique = DragonBloodedCharm.objects.create(
    name="Sense-Riding Technique",
    mote_cost=5,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence + Manipulation) days",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 175)
sense_riding_technique.prerequisites.add(feeling_the_dragon_s_bones)
sense_destroying_method = DragonBloodedCharm.objects.create(
    name="Sense-Destroying Method",
    mote_cost=5,
    statistic="awareness",
    min_statistic=5,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 175)
sense_destroying_method.prerequisites.add(sense_riding_technique)
essence_disruption_attack = DragonBloodedCharm.objects.create(
    name="Essence Disruption Attack",
    mote_cost=5,
    statistic="awareness",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
essence_disruption_attack.prerequisites.add(sense_destroying_method)
become_the_hammer = DragonBloodedCharm.objects.create(
    name="Become the Hammer",
    mote_cost=1,
    statistic="brawl",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental or reflexive",
    duration="Instant",
    keywords=["balanced", "excellency", "uniform", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
pounding_surf_style = DragonBloodedCharm.objects.create(
    name="Pounding Surf Style",
    mote_cost=2,
    statistic="brawl",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
water_dragon_s_coils = DragonBloodedCharm.objects.create(
    name="Water Dragon's Coils",
    mote_cost=3,
    statistic="brawl",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["balanced", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
inescapable_whirlpool_hold = DragonBloodedCharm.objects.create(
    name="Inescapable Whirlpool Hold",
    mote_cost=5,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
inescapable_whirlpool_hold.prerequisites.add(water_dragon_s_coils)
oaken_thew_exertion = DragonBloodedCharm.objects.create(
    name="Oaken Thew Exertion",
    mote_cost=4,
    statistic="brawl",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 176)
# oaken_thew_exertion.prerequisites.add(pounding_surf_style_or_water_dragon_s_coils)
blade_deflecting_palm = DragonBloodedCharm.objects.create(
    name="Blade-Deflecting Palm",
    mote_cost=1,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "uniform", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 177)
crushing_avalanche_grasp = DragonBloodedCharm.objects.create(
    name="Crushing Avalanche Grasp",
    mote_cost=5,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Until the grapple ends",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 177)
crushing_avalanche_grasp.prerequisites.add(inescapable_whirlpool_hold)
currents_sweep_to_sea = DragonBloodedCharm.objects.create(
    name="Currents Sweep to Sea",
    mote_cost=4,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 177)
currents_sweep_to_sea.prerequisites.add(water_dragon_s_coils)
entangling_roots_embrace = DragonBloodedCharm.objects.create(
    name="Entangling Roots Embrace",
    mote_cost=5,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Until the grapple ends",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
entangling_roots_embrace.prerequisites.add(oaken_thew_exertion)
hammering_wave_technique = DragonBloodedCharm.objects.create(
    name="Hammering Wave Technique",
    mote_cost=5,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
hammering_wave_technique.prerequisites.add(pounding_surf_style)
stone_fist_strike = DragonBloodedCharm.objects.create(
    name="Stone Fist Strike",
    mote_cost=3,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
rolling_boulder_blow = DragonBloodedCharm.objects.create(
    name="Rolling Boulder Blow",
    mote_cost=5,
    statistic="brawl",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
rolling_boulder_blow.prerequisites.add(stone_fist_strike)
flying_whirlwind_razor = DragonBloodedCharm.objects.create(
    name="Flying Whirlwind Razor",
    mote_cost=5,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
crater_making_impact = DragonBloodedCharm.objects.create(
    name="Crater-Making Impact",
    mote_cost=5,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 178)
erupting_fury_barrage = DragonBloodedCharm.objects.create(
    name="Erupting Fury Barrage",
    mote_cost=10,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 179)
embracing_the_violent_flow = DragonBloodedCharm.objects.create(
    name="Embracing the Violent Flow",
    mote_cost=10,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "dual", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 179)
body_of_deadly_thorns = DragonBloodedCharm.objects.create(
    name="Body of Deadly Thorns",
    mote_cost=10,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until the grapple ends",
    keywords=["aura", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 179)
become_the_wave = DragonBloodedCharm.objects.create(
    name="Become the Wave",
    mote_cost=2,
    statistic="brawl",
    min_statistic=4,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 179)
become_the_wave.prerequisites.add(hammering_wave_technique)
swift_striking_tide = DragonBloodedCharm.objects.create(
    name="Swift-Striking Tide",
    mote_cost=1,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
swift_striking_tide.prerequisites.add(become_the_wave)
waves_swallow_the_mountain = DragonBloodedCharm.objects.create(
    name="Waves Swallow the Mountain",
    mote_cost=2,
    statistic="brawl",
    min_statistic=4,
    min_essence=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One tick",
    keywords=["perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
waves_swallow_the_mountain.prerequisites.add(currents_sweep_to_sea)
fist_spinning_maelstrom = DragonBloodedCharm.objects.create(
    name="Fist-Spinning Maelstrom",
    mote_cost=4,
    statistic="brawl",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
fist_spinning_maelstrom.prerequisites.add(hammering_wave_technique)
drowning_embrace = DragonBloodedCharm.objects.create(
    name="Drowning Embrace",
    mote_cost=5,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until the grapple ends",
    keywords=["aura", "dual", "perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
drowning_embrace.prerequisites.add(waves_swallow_the_mountain)
hanging_tree_technique = DragonBloodedCharm.objects.create(
    name="Hanging Tree Technique",
    mote_cost=10,
    statistic="brawl",
    min_statistic=5,
    min_essence=4,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until the grapple ends",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
hanging_tree_technique.prerequisites.add(
    entangling_roots_embrace, fist_spinning_maelstrom
)
smashing_tidal_wave_technique = DragonBloodedCharm.objects.create(
    name="Smashing Tidal Wave Technique",
    mote_cost=8,
    statistic="brawl",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["aura", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 180)
smashing_tidal_wave_technique.prerequisites.add(drowning_embrace)
geese_flying_south_administration = DragonBloodedCharm.objects.create(
    name="Geese-Flying-South Administration",
    mote_cost=2,
    statistic="bureaucracy",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 181)
confluence_of_savant_thought = DragonBloodedCharm.objects.create(
    name="Confluence of Savant Thought",
    mote_cost=2,
    statistic="bureaucracy",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 181)
finding_the_water_s_depths = DragonBloodedCharm.objects.create(
    name="Finding The Water's Depths",
    mote_cost=3,
    statistic="bureaucracy",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 181)
testing_the_waters = DragonBloodedCharm.objects.create(
    name="Testing the Waters",
    mote_cost=2,
    statistic="bureaucracy",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 181)
testing_the_waters.prerequisites.add(finding_the_water_s_depths)
benevolent_master_s_blessing = DragonBloodedCharm.objects.create(
    name="Benevolent Master's Blessing",
    mote_cost=1,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 181)
dashing_brook_method = DragonBloodedCharm.objects.create(
    name="Dashing Brook Method",
    mote_cost=2,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="One task",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
dashing_brook_method.prerequisites.add(benevolent_master_s_blessing)
unshakable_mountain_management = DragonBloodedCharm.objects.create(
    name="Unshakable Mountain Management",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
unshakable_mountain_management.prerequisites.add(testing_the_waters)
water_stained_ledger = DragonBloodedCharm.objects.create(
    name="Water-Stained Ledger",
    mote_cost=3,
    statistic="bureaucracy",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
water_stained_ledger.prerequisites.add(confluence_of_savant_thought)
shells_for_silver_ruse = DragonBloodedCharm.objects.create(
    name="Shells-for-Silver Ruse",
    mote_cost=3,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
shells_for_silver_ruse.prerequisites.add(water_stained_ledger)
thoughtful_gift_technique = DragonBloodedCharm.objects.create(
    name="Thoughtful Gift Technique",
    mote_cost=4,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
thoughtful_gift_technique.prerequisites.add(finding_the_water_s_depths)
humble_exemplar_attitude = DragonBloodedCharm.objects.create(
    name="Humble Exemplar Attitude",
    mote_cost=7,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One task",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 182)
graven_stone_edict = DragonBloodedCharm.objects.create(
    name="Graven Stone Edict",
    mote_cost=10,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 183)
seething_firebreak_technique = DragonBloodedCharm.objects.create(
    name="Seething Firebreak Technique",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One story",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 183)
distraction_of_the_babbling_brook = DragonBloodedCharm.objects.create(
    name="Distraction of the Babbling Brook",
    mote_cost=6,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 184)
distraction_of_the_babbling_brook.prerequisites.add(thoughtful_gift_technique)
one_forest_many_trees = DragonBloodedCharm.objects.create(
    name="One Forest, Many Trees",
    mote_cost=7,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 184)
bestow_the_saffron_mantle = DragonBloodedCharm.objects.create(
    name="Bestow the Saffron Mantle",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 185)
bestow_the_saffron_mantle.prerequisites.add(benevolent_master_s_blessing)
blazing_hoard_of_hesiesh = DragonBloodedCharm.objects.create(
    name="Blazing Hoard of Hesiesh",
    mote_cost=3,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 185)
blazing_hoard_of_hesiesh.prerequisites.add(thoughtful_gift_technique)
following_the_river_s_course = DragonBloodedCharm.objects.create(
    name="Following the River's Course",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 185)
following_the_river_s_course.prerequisites.add(
    dashing_brook_method, finding_the_water_s_depths
)
thrashing_carp_serenade = DragonBloodedCharm.objects.create(
    name="Thrashing Carp Serenade",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 185)
thrashing_carp_serenade.prerequisites.add(dashing_brook_method, water_stained_ledger)
sea_changed_secrets = DragonBloodedCharm.objects.create(
    name="Sea-Changed Secrets",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 186)
sea_changed_secrets.prerequisites.add(water_stained_ledger)
sprouting_bamboo_cultivation = DragonBloodedCharm.objects.create(
    name="Sprouting Bamboo Cultivation",
    mote_cost=0,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 186)
sprouting_bamboo_cultivation.prerequisites.add(dashing_brook_method)
drowning_in_negotiation_style = DragonBloodedCharm.objects.create(
    name="Drowning in Negotiation Style",
    mote_cost=10,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 186)
drowning_in_negotiation_style.prerequisites.add(distraction_of_the_babbling_brook)
flowing_authority_insinuation = DragonBloodedCharm.objects.create(
    name="Flowing Authority Insinuation",
    mote_cost=10,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["psyche", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 186)
flowing_authority_insinuation.prerequisites.add(thrashing_carp_serenade)
sowing_the_dragon_s_teeth = DragonBloodedCharm.objects.create(
    name="Sowing the Dragon's Teeth",
    mote_cost=5,
    statistic="bureaucracy",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 186)
sowing_the_dragon_s_teeth.prerequisites.add(sprouting_bamboo_cultivation)
masterful_dragon_artisan_expertise = DragonBloodedCharm.objects.create(
    name="Masterful Dragon-Artisan Expertise",
    mote_cost=1,
    statistic="craft",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 187)
stone_carving_fingers = DragonBloodedCharm.objects.create(
    name="Stone-Carving Fingers",
    mote_cost=6,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="One project",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 187)
flaw_finding_examination = DragonBloodedCharm.objects.create(
    name="Flaw-Finding Examination",
    mote_cost=1,
    statistic="craft",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 187)
shaping_hand_style = DragonBloodedCharm.objects.create(
    name="Shaping Hand Style",
    mote_cost=0,
    statistic="craft",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
shaping_hand_style.prerequisites.add(stone_carving_fingers)
stones_from_rubble_restoration = DragonBloodedCharm.objects.create(
    name="Stones-from-Rubble Restoration",
    mote_cost=5,
    statistic="craft",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="One project",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
stones_from_rubble_restoration.prerequisites.add(flaw_finding_examination)
touch_of_unmaking = DragonBloodedCharm.objects.create(
    name="Touch of Unmaking",
    mote_cost=10,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
touch_of_unmaking.prerequisites.add(stones_from_rubble_restoration)
flawless_facet_realization = DragonBloodedCharm.objects.create(
    name="Flawless Facet Realization",
    mote_cost=6,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
flawless_facet_realization.prerequisites.add(shaping_hand_style)
strike_the_dragon_anvil = DragonBloodedCharm.objects.create(
    name="Strike the Dragon-Anvil",
    mote_cost=1,
    statistic="craft",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=1,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
strike_the_dragon_anvil.prerequisites.add(flawless_facet_realization)
passion_inflaming_artistry = DragonBloodedCharm.objects.create(
    name="Passion-Inflaming Artistry",
    mote_cost=5,
    statistic="craft",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
talents_to_obols_refinement = DragonBloodedCharm.objects.create(
    name="Talents-to-Obols Refinement",
    mote_cost=5,
    statistic="craft",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 188)
ephemeral_form_composition = DragonBloodedCharm.objects.create(
    name="Ephemeral Form Composition",
    mote_cost=5,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="One project",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 189)
eternal_omphalos_forge = DragonBloodedCharm.objects.create(
    name="Eternal Omphalos Forge",
    mote_cost=15,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=15,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One project",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 189)
blazing_dragon_smith_arete = DragonBloodedCharm.objects.create(
    name="Blazing Dragon-Smith Arete",
    mote_cost=15,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One project",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 189)
fortune_from_flotsam_ingenuity = DragonBloodedCharm.objects.create(
    name="Fortune-from-Flotsam Ingenuity",
    mote_cost=15,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=5,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 189)
imago_hatching_realization = DragonBloodedCharm.objects.create(
    name="Imago-Hatching Realization",
    mote_cost=10,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=5,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
forge_hand_prana = DragonBloodedCharm.objects.create(
    name="Forge-Hand Prana",
    mote_cost=5,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One project or One scene",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
forge_hand_prana.prerequisites.add(shaping_hand_style, touch_of_unmaking)
stoking_inspiration_s_forge = DragonBloodedCharm.objects.create(
    name="Stoking Inspiration's Forge",
    mote_cost=0,
    statistic="craft",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
stoking_inspiration_s_forge.prerequisites.add(talents_to_obols_refinement)
threshold_warding_stance = DragonBloodedCharm.objects.create(
    name="Threshold Warding Stance",
    mote_cost=2,
    statistic="dodge",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental or reflexive",
    duration="Instant",
    keywords=["balanced", "excellency", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
flickering_candle_meditation = DragonBloodedCharm.objects.create(
    name="Flickering Candle Meditation",
    mote_cost=1,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
heat_of_battle_advance = DragonBloodedCharm.objects.create(
    name="Heat-of-Battle Advance",
    mote_cost=2,
    statistic="dodge",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 190)
hopping_firecracker_evasion = DragonBloodedCharm.objects.create(
    name="Hopping Firecracker Evasion",
    mote_cost=3,
    statistic="dodge",
    min_statistic=3,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 191)
hopping_firecracker_evasion.prerequisites.add(flickering_candle_meditation)
virtuous_negation_defense = DragonBloodedCharm.objects.create(
    name="Virtuous Negation Defense",
    mote_cost=4,
    statistic="dodge",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["uniform", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 191)
virtuous_negation_defense.prerequisites.add(hopping_firecracker_evasion)
ember_amid_smoke_misdirection = DragonBloodedCharm.objects.create(
    name="Ember-Amid-Smoke Misdirection",
    mote_cost=3,
    statistic="dodge",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 191)
ember_amid_smoke_misdirection.prerequisites.add(flickering_candle_meditation)
safety_among_enemies = DragonBloodedCharm.objects.create(
    name="Safety Among Enemies",
    mote_cost=5,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "perilous", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 191)
unmoving_center_enlightenment = DragonBloodedCharm.objects.create(
    name="Unmoving Center Enlightenment",
    mote_cost=5,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 192)
unassailable_body_of_fire = DragonBloodedCharm.objects.create(
    name="Unassailable Body of Fire",
    mote_cost=7,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "counterattack", "decisive-only", "signa- ture (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 192)
unassailable_body_of_fire.prerequisites.add(hopping_firecracker_evasion)
flow_with_strife = DragonBloodedCharm.objects.create(
    name="Flow With Strife",
    mote_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "perilous", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 192)
swaying_grass_elusion = DragonBloodedCharm.objects.create(
    name="Swaying Grass Elusion",
    mote_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "perilous", "signature (wood)", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 192)
ebbing_tide_recedes = DragonBloodedCharm.objects.create(
    name="Ebbing Tide Recedes",
    mote_cost=4,
    statistic="dodge",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 192)
ebbing_tide_recedes.prerequisites.add(heat_of_battle_advance)
elusive_crosswind_defense = DragonBloodedCharm.objects.create(
    name="Elusive Crosswind Defense",
    mote_cost=4,
    statistic="dodge",
    min_statistic=4,
    min_essence=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "aura", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 193)
elusive_crosswind_defense.prerequisites.add(hopping_firecracker_evasion)
bonfire_shadow_evasion = DragonBloodedCharm.objects.create(
    name="Bonfire Shadow Evasion",
    mote_cost=6,
    statistic="dodge",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["fire", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 193)
bonfire_shadow_evasion.prerequisites.add(ember_amid_smoke_misdirection)
coiling_dragon_dance = DragonBloodedCharm.objects.create(
    name="Coiling Dragon Dance",
    mote_cost=4,
    statistic="dodge",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Aura",
    keywords=["aura", "dual", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 193)
coiling_dragon_dance.prerequisites.add(bonfire_shadow_evasion)
elusive_dragon_god_dispersion = DragonBloodedCharm.objects.create(
    name="Elusive Dragon-God Dispersion",
    mote_cost=0,
    statistic="dodge",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["aura", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 193)
elusive_dragon_god_dispersion.prerequisites.add(unassailable_body_of_fire)
granite_curtain_of_serenity = DragonBloodedCharm.objects.create(
    name="Granite Curtain of Serenity",
    mote_cost=2,
    statistic="integrity",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental or reflexive",
    duration="Instant",
    keywords=["balanced", "earth", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
frozen_heart_prana = DragonBloodedCharm.objects.create(
    name="Frozen Heart Prana",
    mote_cost=4,
    statistic="integrity",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
slippery_thoughts_technique = DragonBloodedCharm.objects.create(
    name="Slippery Thoughts Technique",
    mote_cost=4,
    statistic="integrity",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
oath_of_the_ten_thousand_dragons = DragonBloodedCharm.objects.create(
    name="Oath of the Ten Thousand Dragons",
    mote_cost=0,
    statistic="integrity",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
heart_hardening_meditation = DragonBloodedCharm.objects.create(
    name="Heart-Hardening Meditation",
    mote_cost=6,
    statistic="integrity",
    min_statistic=2,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
inviolate_dragon_spirit = DragonBloodedCharm.objects.create(
    name="Inviolate Dragon Spirit",
    mote_cost=1,
    statistic="integrity",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
inviolate_dragon_spirit.prerequisites.add(heart_hardening_meditation)
unquenchable_battle_passion = DragonBloodedCharm.objects.create(
    name="Unquenchable Battle-Passion",
    mote_cost=5,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 194)
unquenchable_battle_passion.prerequisites.add(inviolate_dragon_spirit)
chaos_warding_prana = DragonBloodedCharm.objects.create(
    name="Chaos-Warding Prana",
    mote_cost=5,
    statistic="integrity",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="(Essence) hours",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 195)
ten_thousand_dragons_fight_as_one = DragonBloodedCharm.objects.create(
    name="Ten Thousand Dragons Fight as One",
    mote_cost=5,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 195)
ten_thousand_dragons_fight_as_one.prerequisites.add(oath_of_the_ten_thousand_dragons)
wound_denying_dragon_faith = DragonBloodedCharm.objects.create(
    name="Wound-Denying Dragon Faith",
    mote_cost=2,
    statistic="integrity",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 195)
wound_denying_dragon_faith.prerequisites.add(ten_thousand_dragons_fight_as_one)
ascendant_ideal_inspiration = DragonBloodedCharm.objects.create(
    name="Ascendant Ideal Inspiration",
    mote_cost=6,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 195)
flawless_diamond_heart = DragonBloodedCharm.objects.create(
    name="Flawless Diamond Heart",
    mote_cost=7,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 195)
immolating_phoenix_soul_fury = DragonBloodedCharm.objects.create(
    name="Immolating Phoenix-Soul Fury",
    mote_cost=8,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["balanced", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 196)
waves_swallow_mountains_persistence = DragonBloodedCharm.objects.create(
    name="Waves-Swallow-Mountains Persistence",
    mote_cost=5,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 196)
roots_of_the_world_meditation = DragonBloodedCharm.objects.create(
    name="Roots-of-the-World Meditation",
    mote_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until meditation is completed",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 196)
thicker_than_stone = DragonBloodedCharm.objects.create(
    name="Thicker Than Stone",
    mote_cost=4,
    statistic="integrity",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 196)
thicker_than_stone.prerequisites.add(
    inviolate_dragon_spirit, ten_thousand_dragons_fight_as_one
)
unflagging_vengeance_meditation = DragonBloodedCharm.objects.create(
    name="Unflagging Vengeance Meditation",
    mote_cost=7,
    statistic="integrity",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 197)
unflagging_vengeance_meditation.prerequisites.add(ten_thousand_dragons_fight_as_one)
the_mountain_still_stands = DragonBloodedCharm.objects.create(
    name="The Mountain Still Stands",
    mote_cost=0,
    statistic="integrity",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 197)
the_mountain_still_stands.prerequisites.add(thicker_than_stone)
indisputable_physical_analysis_technique = DragonBloodedCharm.objects.create(
    name="Indisputable Physical Analysis Technique",
    mote_cost=2,
    statistic="investigation",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 197)
tampering_detection_technique = DragonBloodedCharm.objects.create(
    name="Tampering-Detection Technique",
    mote_cost=1,
    statistic="investigation",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 198)
permeating_insight = DragonBloodedCharm.objects.create(
    name="Permeating Insight",
    mote_cost=4,
    statistic="investigation",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 198)
scent_of_crime_method = DragonBloodedCharm.objects.create(
    name="Scent-of-Crime Method",
    mote_cost=4,
    statistic="investigation",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 198)
scent_of_crime_method.prerequisites.add(permeating_insight)
heart_maze_navigation = DragonBloodedCharm.objects.create(
    name="Heart-Maze Navigation",
    mote_cost=1,
    statistic="investigation",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 198)
heart_maze_navigation.prerequisites.add(scent_of_crime_method)
revelation_of_associates_hunch = DragonBloodedCharm.objects.create(
    name="Revelation-of-Associates Hunch",
    mote_cost=5,
    statistic="investigation",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 198)
revelation_of_associates_hunch.prerequisites.add(scent_of_crime_method)
bloodhound_s_nose_technique = DragonBloodedCharm.objects.create(
    name="Bloodhound's Nose Technique",
    mote_cost=4,
    statistic="investigation",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence) days",
    keywords=["water/wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 199)
bloodhound_s_nose_technique.prerequisites.add(scent_of_crime_method)
tenacious_flowing_truths = DragonBloodedCharm.objects.create(
    name="Tenacious Flowing Truths",
    mote_cost=5,
    statistic="investigation",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 199)
tenacious_flowing_truths.prerequisites.add(tampering_detection_technique)
warrant_of_divine_safety = DragonBloodedCharm.objects.create(
    name="Warrant of Divine Safety",
    mote_cost=5,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="(Essence) hours",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 199)
echoes_caught_in_stone = DragonBloodedCharm.objects.create(
    name="Echoes Caught in Stone",
    mote_cost=3,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 199)
echoes_caught_in_stone.prerequisites.add(bloodhound_s_nose_technique)
shadow_immolating_talon = DragonBloodedCharm.objects.create(
    name="Shadow-Immolating Talon",
    mote_cost=5,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 200)
shadow_immolating_talon.prerequisites.add(heart_maze_navigation)
clear_water_prana = DragonBloodedCharm.objects.create(
    name="Clear Water Prana",
    mote_cost=5,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 200)
clear_water_prana.prerequisites.add(tenacious_flowing_truths)
death_unraveling_eye = DragonBloodedCharm.objects.create(
    name="Death-Unraveling Eye",
    mote_cost=5,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 200)
a_face_in_the_fog = DragonBloodedCharm.objects.create(
    name="A Face in the Fog",
    mote_cost=6,
    statistic="investigation",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 200)
a_face_in_the_fog.prerequisites.add(
    revelation_of_associates_hunch, tenacious_flowing_truths
)
falsehood_unearthing_attitude = DragonBloodedCharm.objects.create(
    name="Falsehood-Unearthing Attitude",
    mote_cost=3,
    statistic="investigation",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 201)
falsehood_unearthing_attitude.prerequisites.add(heart_maze_navigation)
foul_stench_of_lies_discernment = DragonBloodedCharm.objects.create(
    name="Foul Stench of Lies Discernment",
    mote_cost=3,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 201)
foul_stench_of_lies_discernment.prerequisites.add(falsehood_unearthing_attitude)
scent_of_the_stranger_s_threshold = DragonBloodedCharm.objects.create(
    name="Scent of the Stranger's Threshold",
    mote_cost=1,
    statistic="investigation",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 201)
scent_of_the_stranger_s_threshold.prerequisites.add(bloodhound_s_nose_technique)
homeward_trail_discovery_method = DragonBloodedCharm.objects.create(
    name="Homeward Trail Discovery Method",
    mote_cost=0,
    statistic="investigation",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 201)
homeward_trail_discovery_method.prerequisites.add(scent_of_the_stranger_s_threshold)
river_of_memory_meditation = DragonBloodedCharm.objects.create(
    name="River-of-Memory Meditation",
    mote_cost=5,
    statistic="investigation",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 202)
river_of_memory_meditation.prerequisites.add(
    a_face_in_the_fog, bloodhound_s_nose_technique
)
inescapable_wave_insight = DragonBloodedCharm.objects.create(
    name="Inescapable Wave Insight",
    mote_cost=8,
    statistic="investigation",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One investigation",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 202)
inescapable_wave_insight.prerequisites.add(river_of_memory_meditation)
underground_river_s_flow = DragonBloodedCharm.objects.create(
    name="Underground River's Flow",
    mote_cost=2,
    statistic="larceny",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 202)
flowing_body_disguise = DragonBloodedCharm.objects.create(
    name="Flowing Body Disguise",
    mote_cost=2,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 202)
nimble_thief_s_fingers = DragonBloodedCharm.objects.create(
    name="Nimble Thief's Fingers",
    mote_cost=1,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 202)
resetting_tumblers_technique = DragonBloodedCharm.objects.create(
    name="Resetting Tumblers Technique",
    mote_cost=5,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 203)
naked_thief_style = DragonBloodedCharm.objects.create(
    name="Naked Thief Style",
    mote_cost=1,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["stackable", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 203)
naked_thief_style.prerequisites.add(resetting_tumblers_technique)
observer_awareness_method = DragonBloodedCharm.objects.create(
    name="Observer Awareness Method",
    mote_cost=1,
    statistic="larceny",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 203)
rose_among_thorns_distinction = DragonBloodedCharm.objects.create(
    name="Rose-Among-Thorns Distinction",
    mote_cost=5,
    statistic="larceny",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
rose_among_thorns_distinction.prerequisites.add(observer_awareness_method)
whispering_thief_technique = DragonBloodedCharm.objects.create(
    name="Whispering Thief Technique",
    mote_cost=2,
    statistic="larceny",
    min_statistic=4,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
whispering_thief_technique.prerequisites.add(observer_awareness_method)
artful_flowing_theft = DragonBloodedCharm.objects.create(
    name="Artful Flowing Theft",
    mote_cost=5,
    statistic="larceny",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
artful_flowing_theft.prerequisites.add(
    nimble_thief_s_fingers, observer_awareness_method
)
dragon_s_hidden_treasure = DragonBloodedCharm.objects.create(
    name="Dragon's Hidden Treasure",
    mote_cost=1,
    statistic="larceny",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
dragon_s_hidden_treasure.prerequisites.add(naked_thief_style)
face_stealing_reflection = DragonBloodedCharm.objects.create(
    name="Face-Stealing Reflection",
    mote_cost=4,
    statistic="larceny",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
face_stealing_reflection.prerequisites.add(
    flowing_body_disguise, observer_awareness_method
)
bramble_purse_technique = DragonBloodedCharm.objects.create(
    name="Bramble Purse Technique",
    mote_cost=4,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One hour",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 204)
bramble_purse_technique.prerequisites.add(observer_awareness_method)
evidence_erasing_tide = DragonBloodedCharm.objects.create(
    name="Evidence-Erasing Tide",
    mote_cost=4,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 205)
evidence_erasing_tide.prerequisites.add(resetting_tumblers_technique)
instant_disguise_prana = DragonBloodedCharm.objects.create(
    name="Instant Disguise Prana",
    mote_cost=1,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 205)
instant_disguise_prana.prerequisites.add(flowing_body_disguise)
waters_of_honesty_method = DragonBloodedCharm.objects.create(
    name="Waters-of-Honesty Method",
    mote_cost=3,
    statistic="larceny",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 205)
waters_of_honesty_method.prerequisites.add(observer_awareness_method)
vault_emptying_whirlwind_heist = DragonBloodedCharm.objects.create(
    name="Vault-Emptying Whirlwind Heist",
    mote_cost=8,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence) days or Until crime is completed",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 205)
dragon_snatches_jewel = DragonBloodedCharm.objects.create(
    name="Dragon Snatches Jewel",
    mote_cost=5,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 205)
burning_sins_seduction = DragonBloodedCharm.objects.create(
    name="Burning Sins Seduction",
    mote_cost=5,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 206)
flowing_god_dragon_stance = DragonBloodedCharm.objects.create(
    name="Flowing God-Dragon Stance",
    mote_cost=15,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "mute", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 206)
flowing_god_dragon_stance.prerequisites.add(artful_flowing_theft, evidence_erasing_tide)
terrifying_forest_devil_mask = DragonBloodedCharm.objects.create(
    name="Terrifying Forest-Devil Mask",
    mote_cost=5,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 206)
vaporous_visage_evasion = DragonBloodedCharm.objects.create(
    name="Vaporous Visage Evasion",
    mote_cost=3,
    statistic="larceny",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 206)
vaporous_visage_evasion.prerequisites.add(instant_disguise_prana)
incendiary_accusation_approach = DragonBloodedCharm.objects.create(
    name="Incendiary Accusation Approach",
    mote_cost=1,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 207)
incendiary_accusation_approach.prerequisites.add(waters_of_honesty_method)
investigation_deflecting_current = DragonBloodedCharm.objects.create(
    name="Investigation-Deflecting Current",
    mote_cost=3,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 207)
investigation_deflecting_current.prerequisites.add(evidence_erasing_tide)
mischievous_wind_grasp = DragonBloodedCharm.objects.create(
    name="Mischievous Wind Grasp",
    mote_cost=3,
    statistic="larceny",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 207)
mischievous_wind_grasp.prerequisites.add(artful_flowing_theft)
exploding_evidence_technique = DragonBloodedCharm.objects.create(
    name="Exploding Evidence Technique",
    mote_cost=10,
    statistic="larceny",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 207)
exploding_evidence_technique.prerequisites.add(investigation_deflecting_current)
window_in_the_door_technique = DragonBloodedCharm.objects.create(
    name="Window-In-The-Door Technique",
    mote_cost=2,
    statistic="larceny",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One round",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 208)
window_in_the_door_technique.prerequisites.add(mischievous_wind_grasp)
expectation_mirroring_stance = DragonBloodedCharm.objects.create(
    name="Expectation-Mirroring Stance",
    mote_cost=10,
    statistic="larceny",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 208)
expectation_mirroring_stance.prerequisites.add(
    face_stealing_reflection, instant_disguise_prana
)
infallible_alibi_approach = DragonBloodedCharm.objects.create(
    name="Infallible Alibi Approach",
    mote_cost=13,
    statistic="larceny",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 208)
infallible_alibi_approach.prerequisites.add(exploding_evidence_technique)
lightning_quill_mastery = DragonBloodedCharm.objects.create(
    name="Lightning Quill Mastery",
    mote_cost=2,
    statistic="linguistics",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 208)
cryptic_essence_cipher = DragonBloodedCharm.objects.create(
    name="Cryptic Essence Cipher",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 209)
signature_stealing_calligraphy = DragonBloodedCharm.objects.create(
    name="Signature-Stealing Calligraphy",
    mote_cost=4,
    statistic="linguistics",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 209)
fervor_inciting_brushstrokes = DragonBloodedCharm.objects.create(
    name="Fervor-Inciting Brushstrokes",
    mote_cost=3,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 209)
tenacious_dragon_scholar = DragonBloodedCharm.objects.create(
    name="Tenacious Dragon Scholar",
    mote_cost=3,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 209)
wind_carried_words_technique = DragonBloodedCharm.objects.create(
    name="Wind-Carried Words Technique",
    mote_cost=3,
    statistic="linguistics",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 209)
language_learning_ritual = DragonBloodedCharm.objects.create(
    name="Language-Learning Ritual",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
enigma_reading_eye = DragonBloodedCharm.objects.create(
    name="Enigma-Reading Eye",
    mote_cost=3,
    statistic="linguistics",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
enigma_reading_eye.prerequisites.add(cryptic_essence_cipher)
thousand_tongues_meditation = DragonBloodedCharm.objects.create(
    name="Thousand Tongues Meditation",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
thousand_tongues_meditation.prerequisites.add(language_learning_ritual)
voices_on_the_wind = DragonBloodedCharm.objects.create(
    name="Voices on the Wind",
    mote_cost=3,
    statistic="linguistics",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
voices_on_the_wind.prerequisites.add(wind_carried_words_technique)
speech_without_words = DragonBloodedCharm.objects.create(
    name="Speech Without Words",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
speech_without_words.prerequisites.add(voices_on_the_wind)
caustic_wit_invective = DragonBloodedCharm.objects.create(
    name="Caustic Wit Invective",
    mote_cost=1,
    statistic="linguistics",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 210)
caustic_wit_invective.prerequisites.add(fervor_inciting_brushstrokes)
flashing_saga_flourish = DragonBloodedCharm.objects.create(
    name="Flashing Saga Flourish",
    mote_cost=10,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (air)", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 211)
unshattered_diamond_parables = DragonBloodedCharm.objects.create(
    name="Unshattered Diamond Parables",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 211)
wildfire_words_technique = DragonBloodedCharm.objects.create(
    name="Wildfire Words Technique",
    mote_cost=7,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 211)
rewriting_the_truth_technique = DragonBloodedCharm.objects.create(
    name="Rewriting the Truth Technique",
    mote_cost=10,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "signature (water)", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 211)
enthralling_lotus_calligraphy = DragonBloodedCharm.objects.create(
    name="Enthralling Lotus Calligraphy",
    mote_cost=6,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "signature (wood)", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 212)
incendiary_argument_approach = DragonBloodedCharm.objects.create(
    name="Incendiary Argument Approach",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 212)
incendiary_argument_approach.prerequisites.add(caustic_wit_invective)
poisoned_tongue_technique = DragonBloodedCharm.objects.create(
    name="Poisoned Tongue Technique",
    mote_cost=2,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 212)
poisoned_tongue_technique.prerequisites.add(voices_on_the_wind)
reading_the_unspoken_word = DragonBloodedCharm.objects.create(
    name="Reading the Unspoken Word",
    mote_cost=1,
    statistic="linguistics",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 212)
reading_the_unspoken_word.prerequisites.add(speech_without_words)
dragon_s_voice_mastery = DragonBloodedCharm.objects.create(
    name="Dragon's Voice Mastery",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 212)
dragon_s_voice_mastery.prerequisites.add(poisoned_tongue_technique)
tantalizing_dragon_s_tongue = DragonBloodedCharm.objects.create(
    name="Tantalizing Dragon's Tongue",
    mote_cost=7,
    statistic="linguistics",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire/wood", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 213)
tantalizing_dragon_s_tongue.prerequisites.add(incendiary_argument_approach)
intoxicating_lotus_manuscript = DragonBloodedCharm.objects.create(
    name="Intoxicating Lotus Manuscript",
    mote_cost=10,
    statistic="linguistics",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "wood", "written-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 213)
intoxicating_lotus_manuscript.prerequisites.add(
    enthralling_lotus_calligraphy, tantalizing_dragon_s_tongue
)
with_one_mind = DragonBloodedCharm.objects.create(
    name="With One Mind",
    mote_cost=5,
    statistic="linguistics",
    min_statistic=5,
    min_essence=5,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 213)
with_one_mind.prerequisites.add(dragon_s_voice_mastery, speech_without_words)
careful_insight_gathering_study = DragonBloodedCharm.objects.create(
    name="Careful Insight-Gathering Study",
    mote_cost=2,
    statistic="lore",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 214)
opening_the_mind_s_gates = DragonBloodedCharm.objects.create(
    name="Opening the Mind's Gates",
    mote_cost=3,
    statistic="lore",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 214)
flawless_study_focus = DragonBloodedCharm.objects.create(
    name="Flawless Study Focus",
    mote_cost=3,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 214)
flawless_study_focus.prerequisites.add(opening_the_mind_s_gates)
elemental_concentration_trance = DragonBloodedCharm.objects.create(
    name="Elemental Concentration Trance",
    mote_cost=3,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 214)
dragon_kin_empowerment = DragonBloodedCharm.objects.create(
    name="Dragon-Kin Empowerment",
    mote_cost=1,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 214)
dragon_kin_empowerment.prerequisites.add(elemental_concentration_trance)
elemental_bolt_attack = DragonBloodedCharm.objects.create(
    name="Elemental Bolt Attack",
    mote_cost=4,
    statistic="lore",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["dual"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 215)
elemental_bolt_attack.prerequisites.add(elemental_concentration_trance)
elemental_empowerment_meditation = DragonBloodedCharm.objects.create(
    name="Elemental Empowerment Meditation",
    mote_cost=0,
    statistic="lore",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=1,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 216)
elemental_empowerment_meditation.prerequisites.add(elemental_concentration_trance)
sagacious_elder_s_instruction = DragonBloodedCharm.objects.create(
    name="Sagacious Elder's Instruction",
    mote_cost=3,
    statistic="lore",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="(Intelligence) days",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 216)
sagacious_elder_s_instruction.prerequisites.add(opening_the_mind_s_gates)
stern_tutor_discipline = DragonBloodedCharm.objects.create(
    name="Stern Tutor Discipline",
    mote_cost=1,
    statistic="lore",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Varies",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 216)
stern_tutor_discipline.prerequisites.add(sagacious_elder_s_instruction)
lightning_flash_inspiration = DragonBloodedCharm.objects.create(
    name="Lightning Flash Inspiration",
    mote_cost=5,
    statistic="lore",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 216)
lightning_flash_inspiration.prerequisites.add(flawless_study_focus)
fulminating_thunderhead_brilliance = DragonBloodedCharm.objects.create(
    name="Fulminating Thunderhead Brilliance",
    mote_cost=15,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 216)
fulminating_thunderhead_brilliance.prerequisites.add(lightning_flash_inspiration)
truth_in_stone_binding = DragonBloodedCharm.objects.create(
    name="Truth-In-Stone Binding",
    mote_cost=10,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 217)
ten_thousand_minds_ablaze = DragonBloodedCharm.objects.create(
    name="Ten Thousand Minds Ablaze",
    mote_cost=7,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 217)
ink_black_ocean_depths = DragonBloodedCharm.objects.create(
    name="Ink-Black Ocean Depths",
    mote_cost=1,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until completed",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 217)
root_and_branch_wisdom = DragonBloodedCharm.objects.create(
    name="Root-and-Branch Wisdom",
    mote_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 218)
elemental_succor_method = DragonBloodedCharm.objects.create(
    name="Elemental Succor Method",
    mote_cost=0,
    statistic="lore",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 218)
elemental_succor_method.prerequisites.add(elemental_empowerment_meditation)
thunderstruck_charlatan_imprecation = DragonBloodedCharm.objects.create(
    name="Thunderstruck Charlatan Imprecation",
    mote_cost=7,
    statistic="lore",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 218)
thunderstruck_charlatan_imprecation.prerequisites.add(lightning_flash_inspiration)
elemental_burst_technique = DragonBloodedCharm.objects.create(
    name="Elemental Burst Technique",
    mote_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["aura", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 218)
elemental_burst_technique.prerequisites.add(elemental_bolt_attack)
eternal_mind_meditation = DragonBloodedCharm.objects.create(
    name="Eternal Mind Meditation",
    mote_cost=15,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 219)
eternal_mind_meditation.prerequisites.add(lightning_flash_inspiration)
glorious_birthright_font = DragonBloodedCharm.objects.create(
    name="Glorious Birthright Font",
    mote_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 219)
glorious_birthright_font.prerequisites.add(elemental_succor_method)
endless_coils_enlightenment = DragonBloodedCharm.objects.create(
    name="Endless Coils Enlightenment",
    mote_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 219)
endless_coils_enlightenment.prerequisites.add(eternal_mind_meditation)
the_wind_turns = DragonBloodedCharm.objects.create(
    name="The Wind Turns",
    mote_cost=0,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=2,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "aura"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 219)
the_wind_turns.prerequisites.add(glorious_birthright_font)
dragon_vortex_attack = DragonBloodedCharm.objects.create(
    name="Dragon Vortex Attack",
    mote_cost=20,
    statistic="lore",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=2,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 219)
dragon_vortex_attack.prerequisites.add(elemental_burst_technique, the_wind_turns)
master_healer_meditation = DragonBloodedCharm.objects.create(
    name="Master Healer Meditation",
    mote_cost=1,
    statistic="medicine",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 220)
disease_banishing_technique = DragonBloodedCharm.objects.create(
    name="Disease-Banishing Technique",
    mote_cost=3,
    statistic="medicine",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 220)
venom_expulsion_method = DragonBloodedCharm.objects.create(
    name="Venom Expulsion Method",
    mote_cost=2,
    statistic="medicine",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
wound_closing_technique = DragonBloodedCharm.objects.create(
    name="Wound-Closing Technique",
    mote_cost=5,
    statistic="medicine",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
ailment_sensing_meditation = DragonBloodedCharm.objects.create(
    name="Ailment-Sensing Meditation",
    mote_cost=4,
    statistic="medicine",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
nature_s_healing_bounty = DragonBloodedCharm.objects.create(
    name="Nature's Healing Bounty",
    mote_cost=1,
    statistic="medicine",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
indomitable_vitality_discipline = DragonBloodedCharm.objects.create(
    name="Indomitable Vitality Discipline",
    mote_cost=0,
    statistic="medicine",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
indomitable_vitality_discipline.prerequisites.add(disease_banishing_technique)
poisoner_s_deft_hand = DragonBloodedCharm.objects.create(
    name="Poisoner's Deft Hand",
    mote_cost=3,
    statistic="medicine",
    min_statistic=3,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 221)
poisoner_s_deft_hand.prerequisites.add(venom_expulsion_method)
death_defying_endeavor = DragonBloodedCharm.objects.create(
    name="Death-Defying Endeavor",
    mote_cost=4,
    statistic="medicine",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 222)
death_defying_endeavor.prerequisites.add(ailment_sensing_meditation)
grievous_wound_alteration_energy = DragonBloodedCharm.objects.create(
    name="Grievous Wound Alteration Energy",
    mote_cost=0,
    statistic="medicine",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 222)
grievous_wound_alteration_energy.prerequisites.add(wound_closing_technique)
purity_of_mind_method = DragonBloodedCharm.objects.create(
    name="Purity-of-Mind Method",
    mote_cost=10,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Extended action",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 222)
marmoreal_body_fortification = DragonBloodedCharm.objects.create(
    name="Marmoreal Body Fortification",
    mote_cost=4,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 222)
unbinding_the_inner_flame = DragonBloodedCharm.objects.create(
    name="Unbinding the Inner Flame",
    mote_cost=4,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["perilous", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 222)
body_cleansing_ablution = DragonBloodedCharm.objects.create(
    name="Body-Cleansing Ablution",
    mote_cost=10,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 223)
rebirth_of_flesh_and_ivy = DragonBloodedCharm.objects.create(
    name="Rebirth of Flesh and Ivy",
    mote_cost=10,
    statistic="medicine",
    min_statistic=5,
    min_essence=3,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["perilous", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 223)
rebirth_of_flesh_and_ivy.prerequisites.add(grievous_wound_alteration_energy)
dread_infection_strike = DragonBloodedCharm.objects.create(
    name="Dread Infection Strike",
    mote_cost=5,
    statistic="medicine",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 224)
dread_infection_strike.prerequisites.add(indomitable_vitality_discipline)
flesh_as_stone_inurement = DragonBloodedCharm.objects.create(
    name="Flesh-as-Stone Inurement",
    mote_cost=5,
    statistic="medicine",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 224)
flesh_as_stone_inurement.prerequisites.add(grievous_wound_alteration_energy)
jade_crucible_method = DragonBloodedCharm.objects.create(
    name="Jade Crucible Method",
    mote_cost=1,
    statistic="medicine",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    ahl_cost=1,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 224)
jade_crucible_method.prerequisites.add(grievous_wound_alteration_energy)
most_beneficent_seed_of_the_five_dragons = DragonBloodedCharm.objects.create(
    name="Most Beneficent Seed of the Five Dragons",
    mote_cost=5,
    statistic="medicine",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    ahl_cost=1,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 224)
most_beneficent_seed_of_the_five_dragons.prerequisites.add(jade_crucible_method)
stoking_bonfire_style = DragonBloodedCharm.objects.create(
    name="Stoking Bonfire Style",
    mote_cost=1,
    statistic="melee",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental or reflexive",
    duration="Instant",
    keywords=["balanced", "excellency", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
burning_fury_wreath = DragonBloodedCharm.objects.create(
    name="Burning Fury Wreath",
    mote_cost=3,
    statistic="melee",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
flame_borne_interception = DragonBloodedCharm.objects.create(
    name="Flame-Borne Interception",
    mote_cost=4,
    statistic="melee",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["balanced", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
blinding_spark_distraction = DragonBloodedCharm.objects.create(
    name="Blinding Spark Distraction",
    mote_cost=1,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "fire", "uniform", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
blinding_spark_distraction.prerequisites.add(flame_borne_interception)
graceful_flowing_defense = DragonBloodedCharm.objects.create(
    name="Graceful Flowing Defense",
    mote_cost=2,
    statistic="melee",
    min_statistic=3,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "uniform", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
graceful_flowing_defense.prerequisites.add(flame_borne_interception)
crimson_fang_bite = DragonBloodedCharm.objects.create(
    name="Crimson Fang Bite",
    mote_cost=3,
    statistic="melee",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
crimson_fang_bite.prerequisites.add(burning_fury_wreath)
demon_crushing_wolf_bite = DragonBloodedCharm.objects.create(
    name="Demon-Crushing Wolf Bite",
    mote_cost=4,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["perilous", "withering-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
demon_crushing_wolf_bite.prerequisites.add(crimson_fang_bite)
elemental_sheath = DragonBloodedCharm.objects.create(
    name="Elemental Sheath",
    mote_cost=3,
    statistic="melee",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 225)
dragon_graced_weapon = DragonBloodedCharm.objects.create(
    name="Dragon-Graced Weapon",
    mote_cost=0,
    statistic="melee",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 226)
dragon_graced_weapon.prerequisites.add(elemental_sheath)
crossfire_flash = DragonBloodedCharm.objects.create(
    name="Crossfire Flash",
    mote_cost=5,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 226)
crossfire_flash.prerequisites.add(blinding_spark_distraction)
flame_warden_stance = DragonBloodedCharm.objects.create(
    name="Flame Warden Stance",
    mote_cost=3,
    statistic="melee",
    min_statistic=4,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 226)
flame_warden_stance.prerequisites.add(flame_borne_interception)
blazing_interception = DragonBloodedCharm.objects.create(
    name="Blazing Interception",
    mote_cost=4,
    statistic="melee",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["counterattack", "decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 226)
blazing_interception.prerequisites.add(flame_warden_stance)
steel_tempest_strike = DragonBloodedCharm.objects.create(
    name="Steel Tempest Strike",
    mote_cost=4,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 227)
falling_mountain_fang = DragonBloodedCharm.objects.create(
    name="Falling Mountain Fang",
    mote_cost=2,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 227)
harnessed_firestorm_assault = DragonBloodedCharm.objects.create(
    name="Harnessed Firestorm Assault",
    mote_cost=10,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 227)
roaring_river_slash = DragonBloodedCharm.objects.create(
    name="Roaring River Slash",
    mote_cost=5,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 227)
aura_of_grasping_branches = DragonBloodedCharm.objects.create(
    name="Aura of Grasping Branches",
    mote_cost=5,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["perilous", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 227)
dragon_soul_burst = DragonBloodedCharm.objects.create(
    name="Dragon Soul Burst",
    mote_cost=8,
    statistic="melee",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
dragon_soul_burst.prerequisites.add(crimson_fang_bite)
smoldering_essence_attack = DragonBloodedCharm.objects.create(
    name="Smoldering Essence Attack",
    mote_cost=5,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "fire", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
smoldering_essence_attack.prerequisites.add(dragon_soul_burst)
burning_pinnacle_strike = DragonBloodedCharm.objects.create(
    name="Burning Pinnacle Strike",
    mote_cost=3,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
burning_pinnacle_strike.prerequisites.add(smoldering_essence_attack)
root_and_hand_merging = DragonBloodedCharm.objects.create(
    name="Root-and-Hand Merging",
    mote_cost=5,
    statistic="melee",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
root_and_hand_merging.prerequisites.add(elemental_sheath)
portentous_comet_deflection = DragonBloodedCharm.objects.create(
    name="Portentous Comet Deflection",
    mote_cost=3,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
portentous_comet_deflection.prerequisites.add(crossfire_flash)
fire_incites_water_to_a_riot_of_clouds = DragonBloodedCharm.objects.create(
    name="Fire Incites Water to a Riot of Clouds",
    mote_cost=4,
    statistic="melee",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "fire/water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 228)
fire_incites_water_to_a_riot_of_clouds.prerequisites.add(portentous_comet_deflection)
mela_s_flashing_tongue = DragonBloodedCharm.objects.create(
    name="Mela's Flashing Tongue",
    mote_cost=10,
    statistic="melee",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 229)
mela_s_flashing_tongue.prerequisites.add(burning_pinnacle_strike)
mirror_on_water_focus = DragonBloodedCharm.objects.create(
    name="Mirror-on-Water Focus",
    mote_cost=7,
    statistic="melee",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "counterattack", "decisive-only", "mute", "perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 229)
mirror_on_water_focus.prerequisites.add(fire_incites_water_to_a_riot_of_clouds)
hidden_secrets_whisper = DragonBloodedCharm.objects.create(
    name="Hidden Secrets Whisper",
    mote_cost=1,
    statistic="occult",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 230)
soul_fire_cremation_technique = DragonBloodedCharm.objects.create(
    name="Soul-Fire Cremation Technique",
    mote_cost=5,
    statistic="occult",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 230)
seed_and_salt_warding = DragonBloodedCharm.objects.create(
    name="Seed and Salt Warding",
    mote_cost=1,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["earth or wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 230)
spirit_detecting_mirror_technique = DragonBloodedCharm.objects.create(
    name="Spirit-Detecting Mirror Technique",
    mote_cost=4,
    statistic="occult",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 230)
spirit_grounding_shout = DragonBloodedCharm.objects.create(
    name="Spirit-Grounding Shout",
    mote_cost=3,
    statistic="occult",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 231)
spirit_grounding_shout.prerequisites.add(spirit_detecting_mirror_technique)
secret_wind_revelation = DragonBloodedCharm.objects.create(
    name="Secret Wind Revelation",
    mote_cost=3,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 231)
secret_wind_revelation.prerequisites.add(spirit_detecting_mirror_technique)
dragon_s_sacred_talon = DragonBloodedCharm.objects.create(
    name="Dragon's Sacred Talon",
    mote_cost=4,
    statistic="occult",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "dual", "earth or wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 231)
dragon_s_sacred_talon.prerequisites.add(seed_and_salt_warding)
fivefold_resonance_sense = DragonBloodedCharm.objects.create(
    name="Fivefold Resonance Sense",
    mote_cost=5,
    statistic="occult",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air/earth/fire/water/wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 231)
spirit_chaining_strike = DragonBloodedCharm.objects.create(
    name="Spirit-Chaining Strike",
    mote_cost=4,
    statistic="occult",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 231)
spirit_chaining_strike.prerequisites.add(spirit_grounding_shout)
hundred_devils_whirlwind = DragonBloodedCharm.objects.create(
    name="Hundred Devils Whirlwind",
    mote_cost=5,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 232)
sage_of_iron_meditation = DragonBloodedCharm.objects.create(
    name="Sage of Iron Meditation",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Stamina) days",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 232)
smoke_ascends_to_heaven = DragonBloodedCharm.objects.create(
    name="Smoke Ascends to Heaven",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 232)
crashing_wave_dragons_warding = DragonBloodedCharm.objects.create(
    name="Crashing Wave-Dragons Warding",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence) hours",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 233)
eternal_death_banishing_blossom = DragonBloodedCharm.objects.create(
    name="Eternal Death-Banishing Blossom",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=3,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until next turn",
    keywords=["perilous", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 233)
blazing_purification_chant = DragonBloodedCharm.objects.create(
    name="Blazing Purification Chant",
    mote_cost=4,
    statistic="occult",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 233)
blazing_purification_chant.prerequisites.add(
    soul_fire_cremation_technique, spirit_chaining_strike
)
spirit_shredding_attack = DragonBloodedCharm.objects.create(
    name="Spirit-Shredding Attack",
    mote_cost=3,
    statistic="occult",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 234)
spirit_shredding_attack.prerequisites.add(spirit_chaining_strike)
seal_of_heavenly_binding = DragonBloodedCharm.objects.create(
    name="Seal of Heavenly Binding",
    mote_cost=5,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 234)
seal_of_heavenly_binding.prerequisites.add(spirit_shredding_attack)
chaos_banishing_revelation_gesture = DragonBloodedCharm.objects.create(
    name="Chaos-Banishing Revelation Gesture",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 234)
chaos_banishing_revelation_gesture.prerequisites.add(
    dragon_s_sacred_talon, seal_of_heavenly_binding
)
purifying_dragon_suspiration = DragonBloodedCharm.objects.create(
    name="Purifying Dragon Suspiration",
    mote_cost=10,
    statistic="occult",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air/water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 234)
purifying_dragon_suspiration.prerequisites.add(
    blazing_purification_chant, chaos_banishing_revelation_gesture
)
anathema_sealing_tomb = DragonBloodedCharm.objects.create(
    name="Anathema-Sealing Tomb",
    mote_cost=3,
    statistic="occult",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 234)
anathema_sealing_tomb.prerequisites.add(seal_of_heavenly_binding)
terrestrial_circle_sorcery = DragonBloodedCharm.objects.create(
    name="Terrestrial Circle Sorcery",
    mote_cost=0,
    statistic="occult",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=[],
).add_source("Dragon-Blooded: What Fire Has Wrought", 235)
# terrestrial_circle_sorcery.prerequisites.add(any_four_occult_charms)
five_winds_raiment = DragonBloodedCharm.objects.create(
    name="Five Winds Raiment",
    mote_cost=3,
    statistic="occult",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Until spell is cast",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 235)
five_winds_raiment.prerequisites.add(terrestrial_circle_sorcery)
dragon_sorcerer_puissance = DragonBloodedCharm.objects.create(
    name="Dragon-Sorcerer Puissance",
    mote_cost=0,
    statistic="occult",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 235)
dragon_sorcerer_puissance.prerequisites.add(terrestrial_circle_sorcery)
audience_enthusing_display = DragonBloodedCharm.objects.create(
    name="Audience-Enthusing Display",
    mote_cost=2,
    statistic="performance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 235)
hidden_petal_aria = DragonBloodedCharm.objects.create(
    name="Hidden Petal Aria",
    mote_cost=5,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 235)
invisible_street_performer_technique = DragonBloodedCharm.objects.create(
    name="Invisible Street Performer Technique",
    mote_cost=2,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
invisible_street_performer_technique.prerequisites.add(hidden_petal_aria)
dance_of_flashing_swords = DragonBloodedCharm.objects.create(
    name="Dance of Flashing Swords",
    mote_cost=3,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
dance_of_flashing_swords.prerequisites.add(invisible_street_performer_technique)
talented_improvisation = DragonBloodedCharm.objects.create(
    name="Talented Improvisation",
    mote_cost=5,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
soul_stirring_performance = DragonBloodedCharm.objects.create(
    name="Soul-Stirring Performance",
    mote_cost=3,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
soul_stirring_performance.prerequisites.add(talented_improvisation)
heart_strengthening_defense = DragonBloodedCharm.objects.create(
    name="Heart-Strengthening Defense",
    mote_cost=1,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
heart_strengthening_defense.prerequisites.add(soul_stirring_performance)
harmonious_life_affirming_song = DragonBloodedCharm.objects.create(
    name="Harmonious Life-Affirming Song",
    mote_cost=4,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 236)
harmonious_life_affirming_song.prerequisites.add(heart_strengthening_defense)
irresistible_whirlpool_diversion = DragonBloodedCharm.objects.create(
    name="Irresistible Whirlpool Diversion",
    mote_cost=5,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 237)
irresistible_whirlpool_diversion.prerequisites.add(soul_stirring_performance)
thundering_dragon_proclamation = DragonBloodedCharm.objects.create(
    name="Thundering Dragon Proclamation",
    mote_cost=10,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 237)
tears_from_stone_eloquence = DragonBloodedCharm.objects.create(
    name="Tears-From-Stone Eloquence",
    mote_cost=5,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 237)
immolating_passion_alleluia = DragonBloodedCharm.objects.create(
    name="Immolating Passion Alleluia",
    mote_cost=7,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 237)
mesmerizing_siren_call = DragonBloodedCharm.objects.create(
    name="Mesmerizing Siren Call",
    mote_cost=8,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["psyche", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 237)
life_spirit_symphony = DragonBloodedCharm.objects.create(
    name="Life-Spirit Symphony",
    mote_cost=5,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 238)
blossom_hides_thorns = DragonBloodedCharm.objects.create(
    name="Blossom Hides Thorns",
    mote_cost=6,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "mute", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 238)
blossom_hides_thorns.prerequisites.add(dance_of_flashing_swords)
lightning_declamation_style = DragonBloodedCharm.objects.create(
    name="Lightning Declamation Style",
    mote_cost=2,
    statistic="performance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 239)
legend_hewn_wisdom = DragonBloodedCharm.objects.create(
    name="Legend-Hewn Wisdom",
    mote_cost=3,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 239)
legend_hewn_wisdom.prerequisites.add(lightning_declamation_style)
storm_gathering_fervor = DragonBloodedCharm.objects.create(
    name="Storm-Gathering Fervor",
    mote_cost=2,
    statistic="performance",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "aura"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 239)
storm_gathering_fervor.prerequisites.add(lightning_declamation_style)
epoch_saga_memory = DragonBloodedCharm.objects.create(
    name="Epoch Saga Memory",
    mote_cost=3,
    statistic="performance",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 239)
epoch_saga_memory.prerequisites.add(legend_hewn_wisdom)
puissant_precursor_s_monologue = DragonBloodedCharm.objects.create(
    name="Puissant Precursor's Monologue",
    mote_cost=8,
    statistic="performance",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 239)
puissant_precursor_s_monologue.prerequisites.add(
    storm_gathering_fervor, thundering_dragon_proclamation
)
sanxian_charming_fingers = DragonBloodedCharm.objects.create(
    name="Sanxian-Charming Fingers",
    mote_cost=3,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 240)
voice_uplifting_aspect = DragonBloodedCharm.objects.create(
    name="Voice-Uplifting Aspect",
    mote_cost=3,
    statistic="performance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 240)
blossoming_instrument_evocation = DragonBloodedCharm.objects.create(
    name="Blossoming Instrument Evocation",
    mote_cost=2,
    statistic="performance",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 240)
blossoming_instrument_evocation.prerequisites.add(sanxian_charming_fingers)
vibrating_strings_defense = DragonBloodedCharm.objects.create(
    name="Vibrating Strings Defense",
    mote_cost=4,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 240)
vibrating_strings_defense.prerequisites.add(sanxian_charming_fingers)
three_string_sword_prana = DragonBloodedCharm.objects.create(
    name="Three-String Sword Prana",
    mote_cost=7,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 241)
three_string_sword_prana.prerequisites.add(vibrating_strings_defense)
battle_anthem_of_ten_thousand_dragons = DragonBloodedCharm.objects.create(
    name="Battle Anthem of Ten Thousand Dragons",
    mote_cost=4,
    statistic="performance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One performance",
    keywords=["aura", "perilous", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 241)
battle_anthem_of_ten_thousand_dragons.prerequisites.add(three_string_sword_prana)
swaying_boughs_arabesque = DragonBloodedCharm.objects.create(
    name="Swaying Boughs Arabesque",
    mote_cost=4,
    statistic="performance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 241)
petal_strewn_pavane = DragonBloodedCharm.objects.create(
    name="Petal-Strewn Pavane",
    mote_cost=3,
    statistic="performance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "perilous", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 241)
petal_strewn_pavane.prerequisites.add(swaying_boughs_arabesque)
falling_leaves_sway = DragonBloodedCharm.objects.create(
    name="Falling Leaves Sway",
    mote_cost=6,
    statistic="performance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 241)
falling_leaves_sway.prerequisites.add(swaying_boughs_arabesque)
waltz_of_honeyed_wine = DragonBloodedCharm.objects.create(
    name="Waltz of Honeyed Wine",
    mote_cost=2,
    statistic="performance",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
waltz_of_honeyed_wine.prerequisites.add(falling_leaves_sway)
glowing_coal_radiance = DragonBloodedCharm.objects.create(
    name="Glowing Coal Radiance",
    mote_cost=2,
    statistic="presence",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
eternally_argumentative_flame = DragonBloodedCharm.objects.create(
    name="Eternally Argumentative Flame",
    mote_cost=3,
    statistic="presence",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One turn",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
unbearable_taunt_technique = DragonBloodedCharm.objects.create(
    name="Unbearable Taunt Technique",
    mote_cost=2,
    statistic="presence",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
burning_dragon_mien = DragonBloodedCharm.objects.create(
    name="Burning Dragon Mien",
    mote_cost=4,
    statistic="presence",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
warm_faced_seduction_style = DragonBloodedCharm.objects.create(
    name="Warm-Faced Seduction Style",
    mote_cost=3,
    statistic="presence",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 242)
debate_sparking_bonfire = DragonBloodedCharm.objects.create(
    name="Debate-Sparking Bonfire",
    mote_cost=6,
    statistic="presence",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
debate_sparking_bonfire.prerequisites.add(unbearable_taunt_technique)
hot_blooded_ardor = DragonBloodedCharm.objects.create(
    name="Hot-Blooded Ardor",
    mote_cost=4,
    statistic="presence",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
hot_blooded_ardor.prerequisites.add(warm_faced_seduction_style)
passion_transmuting_nuance = DragonBloodedCharm.objects.create(
    name="Passion-Transmuting Nuance",
    mote_cost=5,
    statistic="presence",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
passion_transmuting_nuance.prerequisites.add(
    burning_dragon_mien, unbearable_taunt_technique, warm_faced_seduction_style
)
fearsome_dragon_presence = DragonBloodedCharm.objects.create(
    name="Fearsome Dragon Presence",
    mote_cost=5,
    statistic="presence",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One tick",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
fearsome_dragon_presence.prerequisites.add(burning_dragon_mien)
moth_to_the_candle = DragonBloodedCharm.objects.create(
    name="Moth to the Candle",
    mote_cost=2,
    statistic="presence",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
moth_to_the_candle.prerequisites.add(unbearable_taunt_technique)
grinding_millstone_argument = DragonBloodedCharm.objects.create(
    name="Grinding Millstone Argument",
    mote_cost=3,
    statistic="presence",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 243)
grinding_millstone_argument.prerequisites.add(eternally_argumentative_flame)
haunting_words_infliction = DragonBloodedCharm.objects.create(
    name="Haunting Words Infliction",
    mote_cost=4,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 244)
virtuous_mountain_s_shadow = DragonBloodedCharm.objects.create(
    name="Virtuous Mountain's Shadow",
    mote_cost=8,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 244)
terrifying_fire_dragon_roar = DragonBloodedCharm.objects.create(
    name="Terrifying Fire-Dragon Roar",
    mote_cost=10,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 244)
fluid_recollection_insinuation = DragonBloodedCharm.objects.create(
    name="Fluid Recollection Insinuation",
    mote_cost=6,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 244)
spirit_cultivating_leadership = DragonBloodedCharm.objects.create(
    name="Spirit-Cultivating Leadership",
    mote_cost=1,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence) days",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 245)
blazing_heart_ascendancy = DragonBloodedCharm.objects.create(
    name="Blazing Heart Ascendancy",
    mote_cost=6,
    statistic="presence",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 245)
blazing_heart_ascendancy.prerequisites.add(debate_sparking_bonfire)
heartstring_pulling_approach = DragonBloodedCharm.objects.create(
    name="Heartstring-Pulling Approach",
    mote_cost=3,
    statistic="presence",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 245)
heartstring_pulling_approach.prerequisites.add(hot_blooded_ardor)
aura_of_invulnerability = DragonBloodedCharm.objects.create(
    name="Aura of Invulnerability",
    mote_cost=5,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["aura", "fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 245)
aura_of_invulnerability.prerequisites.add(fearsome_dragon_presence)
vivacious_dragon_beauty = DragonBloodedCharm.objects.create(
    name="Vivacious Dragon Beauty",
    mote_cost=6,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["aura", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 245)
vivacious_dragon_beauty.prerequisites.add(hot_blooded_ardor)
minds_like_fertile_fields = DragonBloodedCharm.objects.create(
    name="Minds Like Fertile Fields",
    mote_cost=1,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["earth", "psyche"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 246)
minds_like_fertile_fields.prerequisites.add(grinding_millstone_argument)
entombed_mind_technique = DragonBloodedCharm.objects.create(
    name="Entombed Mind Technique",
    mote_cost=5,
    statistic="presence",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "earth", "psyche"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 246)
entombed_mind_technique.prerequisites.add(minds_like_fertile_fields)
dragon_warlord_s_convocation = DragonBloodedCharm.objects.create(
    name="Dragon Warlord's Convocation",
    mote_cost=10,
    statistic="presence",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 246)
dragon_warlord_s_convocation.prerequisites.add(
    blazing_heart_ascendancy, heartstring_pulling_approach
)
ox_body_technique = DragonBloodedCharm.objects.create(
    name="Ox-Body Technique",
    mote_cost=0,
    statistic="resistance",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["none"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 246)
purifying_blood_ascendancy = DragonBloodedCharm.objects.create(
    name="Purifying Blood Ascendancy",
    mote_cost=2,
    statistic="resistance",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 246)
body_cleansing_prana = DragonBloodedCharm.objects.create(
    name="Body-Cleansing Prana",
    mote_cost=3,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air or fire or water", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
uneating_earth_meditation = DragonBloodedCharm.objects.create(
    name="Uneating Earth Meditation",
    mote_cost=2,
    statistic="resistance",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One week",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
untiring_earth_meditation = DragonBloodedCharm.objects.create(
    name="Untiring Earth Meditation",
    mote_cost=2,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
untiring_earth_meditation.prerequisites.add(uneating_earth_meditation)
impervious_skin_of_stone = DragonBloodedCharm.objects.create(
    name="Impervious Skin of Stone",
    mote_cost=4,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "earth", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
eternal_tide_endurance = DragonBloodedCharm.objects.create(
    name="Eternal Tide Endurance",
    mote_cost=2,
    statistic="resistance",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
eternal_tide_endurance.prerequisites.add(impervious_skin_of_stone)
supple_viridian_scales = DragonBloodedCharm.objects.create(
    name="Supple Viridian Scales",
    mote_cost=4,
    statistic="resistance",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One tick",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 247)
supple_viridian_scales.prerequisites.add(impervious_skin_of_stone)
element_protection_technique = DragonBloodedCharm.objects.create(
    name="(Element) Protection Technique",
    mote_cost=5,
    statistic="resistance",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["dual"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
element_protection_technique.prerequisites.add(impervious_skin_of_stone)
elemental_aegis = DragonBloodedCharm.objects.create(
    name="Elemental Aegis",
    mote_cost=4,
    statistic="resistance",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["none"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
elemental_aegis.prerequisites.add(supple_viridian_scales)
unsleeping_earth_meditation = DragonBloodedCharm.objects.create(
    name="Unsleeping Earth Meditation",
    mote_cost=5,
    statistic="resistance",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
unsleeping_earth_meditation.prerequisites.add(uneating_earth_meditation)
unbreathing_earth_meditation = DragonBloodedCharm.objects.create(
    name="Unbreathing Earth Meditation",
    mote_cost=5,
    statistic="resistance",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
unbreathing_earth_meditation.prerequisites.add(unsleeping_earth_meditation)
unfeeling_earth_meditation = DragonBloodedCharm.objects.create(
    name="Unfeeling Earth Meditation",
    mote_cost=3,
    statistic="resistance",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
unfeeling_earth_meditation.prerequisites.add(unbreathing_earth_meditation)
body_like_clouds_meditation = DragonBloodedCharm.objects.create(
    name="Body-Like-Clouds Meditation",
    mote_cost=8,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "signature (air)", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 248)
perfected_scales_of_the_dragon = DragonBloodedCharm.objects.create(
    name="Perfected Scales of the Dragon",
    mote_cost=7,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["aura", "decisive-only", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 249)
raging_fire_dragon_spirit = DragonBloodedCharm.objects.create(
    name="Raging Fire-Dragon Spirit",
    mote_cost=6,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    ahl_cost=1,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 249)
fathomless_depths_replenishment = DragonBloodedCharm.objects.create(
    name="Fathomless Depths Replenishment",
    mote_cost=4,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 249)
well_tended_garden_of_the_soul = DragonBloodedCharm.objects.create(
    name="Well-Tended Garden of the Soul",
    mote_cost=5,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until next turn",
    keywords=["aura", "perilous", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 250)
earth_bears_witness = DragonBloodedCharm.objects.create(
    name="Earth Bears Witness",
    mote_cost=5,
    statistic="resistance",
    min_statistic=4,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 250)
earth_bears_witness.prerequisites.add(element_protection_technique)
immovable_mountain_technique = DragonBloodedCharm.objects.create(
    name="Immovable Mountain Technique",
    mote_cost=5,
    statistic="resistance",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 250)
immovable_mountain_technique.prerequisites.add(earth_bears_witness)
ripples_on_water_defense = DragonBloodedCharm.objects.create(
    name="Ripples-on-Water Defense",
    mote_cost=4,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "dual", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 250)
ripples_on_water_defense.prerequisites.add(earth_bears_witness)
dragon_s_unfailing_vigor = DragonBloodedCharm.objects.create(
    name="Dragon's Unfailing Vigor",
    mote_cost=0,
    statistic="resistance",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["none"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
# dragon_s_unfailing_vigor.prerequisites.add(ox_body_technique_(x5))
flowing_dragon_body_endurance = DragonBloodedCharm.objects.create(
    name="Flowing Dragon-Body Endurance",
    mote_cost=4,
    statistic="resistance",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
flowing_dragon_body_endurance.prerequisites.add(ripples_on_water_defense)
revolving_hurricane_force_defense = DragonBloodedCharm.objects.create(
    name="Revolving-Hurricane-Force Defense",
    mote_cost=5,
    statistic="resistance",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Aura",
    keywords=["air", "aura", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
revolving_hurricane_force_defense.prerequisites.add(flowing_dragon_body_endurance)
scattered_pearl_hoof_falls = DragonBloodedCharm.objects.create(
    name="Scattered Pearl Hoof Falls",
    mote_cost=2,
    statistic="ride",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
heaven_gracing_leap = DragonBloodedCharm.objects.create(
    name="Heaven-Gracing Leap",
    mote_cost=4,
    statistic="ride",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
tread_rooted_in_life = DragonBloodedCharm.objects.create(
    name="Tread Rooted in Life",
    mote_cost=4,
    statistic="ride",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 251)
great_heart_companion = DragonBloodedCharm.objects.create(
    name="Great Heart Companion",
    mote_cost=3,
    statistic="ride",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
cloud_harnessing_technique = DragonBloodedCharm.objects.create(
    name="Cloud-Harnessing Technique",
    mote_cost=5,
    statistic="ride",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
cloud_harnessing_technique.prerequisites.add(heaven_gracing_leap)
dance_of_the_jade_bridle = DragonBloodedCharm.objects.create(
    name="Dance of the Jade Bridle",
    mote_cost=4,
    statistic="ride",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
dance_of_the_jade_bridle.prerequisites.add(great_heart_companion)
reins_like_roots_unity = DragonBloodedCharm.objects.create(
    name="Reins-Like-Roots Unity",
    mote_cost=3,
    statistic="ride",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
reins_like_roots_unity.prerequisites.add(great_heart_companion)
creation_turning_hoof = DragonBloodedCharm.objects.create(
    name="Creation-Turning Hoof",
    mote_cost=5,
    statistic="ride",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
creation_turning_hoof.prerequisites.add(tread_rooted_in_life)
ebony_spur_technique = DragonBloodedCharm.objects.create(
    name="Ebony Spur Technique",
    mote_cost=2,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 252)
ebony_spur_technique.prerequisites.add(creation_turning_hoof)
ass_to_elephant_method = DragonBloodedCharm.objects.create(
    name="Ass-to-Elephant Method",
    mote_cost=3,
    statistic="ride",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 253)
ass_to_elephant_method.prerequisites.add(great_heart_companion)
untethered_pegasus_spirit = DragonBloodedCharm.objects.create(
    name="Untethered Pegasus Spirit",
    mote_cost=5,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["aura", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 253)
untethered_pegasus_spirit.prerequisites.add(cloud_harnessing_technique)
mountain_trampling_hoof = DragonBloodedCharm.objects.create(
    name="Mountain-Trampling Hoof",
    mote_cost=3,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 253)
mountain_trampling_hoof.prerequisites.add(ass_to_elephant_method)
charge_of_one_hundred_generals = DragonBloodedCharm.objects.create(
    name="Charge of One Hundred Generals",
    mote_cost=8,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 254)
charge_of_one_hundred_generals.prerequisites.add(ebony_spur_technique)
ride_beneath_the_waves = DragonBloodedCharm.objects.create(
    name="Ride Beneath the Waves",
    mote_cost=3,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 254)
dragon_among_horses_exaltation = DragonBloodedCharm.objects.create(
    name="Dragon-Among-Horses Exaltation",
    mote_cost=5,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=2,
    ahl_cost=1,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 254)
dragon_among_horses_exaltation.prerequisites.add(great_heart_companion)
indomitable_warhorse_endurance = DragonBloodedCharm.objects.create(
    name="Indomitable Warhorse Endurance",
    mote_cost=3,
    statistic="ride",
    min_statistic=4,
    min_essence=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "perilous", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 254)
indomitable_warhorse_endurance.prerequisites.add(reins_like_roots_unity)
seizing_the_reins_approach = DragonBloodedCharm.objects.create(
    name="Seizing-the-Reins Approach",
    mote_cost=1,
    statistic="ride",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 254)
seizing_the_reins_approach.prerequisites.add(dance_of_the_jade_bridle)
unbreakable_stallion_spirit = DragonBloodedCharm.objects.create(
    name="Unbreakable Stallion Spirit",
    mote_cost=5,
    statistic="ride",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
unbreakable_stallion_spirit.prerequisites.add(creation_turning_hoof)
seven_league_gallop = DragonBloodedCharm.objects.create(
    name="Seven-League Gallop",
    mote_cost=1,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One hour",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
seven_league_gallop.prerequisites.add(unbreakable_stallion_spirit)
trail_blazing_dragon_steed = DragonBloodedCharm.objects.create(
    name="Trail-Blazing Dragon Steed",
    mote_cost=5,
    statistic="ride",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
trail_blazing_dragon_steed.prerequisites.add(seven_league_gallop)
vanishing_cloud_rider_ways = DragonBloodedCharm.objects.create(
    name="Vanishing Cloud-Rider Ways",
    mote_cost=4,
    statistic="ride",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
vanishing_cloud_rider_ways.prerequisites.add(cloud_harnessing_technique)
blazing_charger_attack = DragonBloodedCharm.objects.create(
    name="Blazing Charger Attack",
    mote_cost=7,
    statistic="ride",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "fire", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
blazing_charger_attack.prerequisites.add(trail_blazing_dragon_steed)
elusive_skirmisher_tactic = DragonBloodedCharm.objects.create(
    name="Elusive Skirmisher Tactic",
    mote_cost=1,
    statistic="ride",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["uniform", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 255)
elusive_skirmisher_tactic.prerequisites.add(vanishing_cloud_rider_ways)
horses_like_dragons_stampede = DragonBloodedCharm.objects.create(
    name="Horses-Like-Dragons Stampede",
    mote_cost=5,
    statistic="ride",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=2,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until battle is joined",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 256)
horses_like_dragons_stampede.prerequisites.add(
    blazing_charger_attack, seizing_the_reins_approach
)
fine_passage_negotiating_style = DragonBloodedCharm.objects.create(
    name="Fine Passage-Negotiating Style",
    mote_cost=2,
    statistic="sail",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 256)
storm_outrunning_technique = DragonBloodedCharm.objects.create(
    name="Storm-Outrunning Technique",
    mote_cost=2,
    statistic="sail",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["pilot", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 256)
ocean_darting_maneuver = DragonBloodedCharm.objects.create(
    name="Ocean-Darting Maneuver",
    mote_cost=5,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "pilot", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 257)
ocean_darting_maneuver.prerequisites.add(storm_outrunning_technique)
dragon_mariner_attitude = DragonBloodedCharm.objects.create(
    name="Dragon Mariner Attitude",
    mote_cost=5,
    statistic="sail",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 257)
deck_striding_prana = DragonBloodedCharm.objects.create(
    name="Deck-Striding Prana",
    mote_cost=3,
    statistic="sail",
    min_statistic=2,
    min_essence=1,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 257)
deck_striding_prana.prerequisites.add(dragon_mariner_attitude)
hurricane_predicting_glance = DragonBloodedCharm.objects.create(
    name="Hurricane-Predicting Glance",
    mote_cost=5,
    statistic="sail",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 257)
hurricane_predicting_glance.prerequisites.add(dragon_mariner_attitude)
old_salt_spirit = DragonBloodedCharm.objects.create(
    name="Old Salt Spirit",
    mote_cost=5,
    statistic="sail",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["balanced", "mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
old_salt_spirit.prerequisites.add(dragon_mariner_attitude)
seven_seas_wind_luring_chanty = DragonBloodedCharm.objects.create(
    name="Seven Seas Wind-Luring Chanty",
    mote_cost=2,
    statistic="sail",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
seven_seas_wind_luring_chanty.prerequisites.add(hurricane_predicting_glance)
sturdy_bulkhead_concentration = DragonBloodedCharm.objects.create(
    name="Sturdy Bulkhead Concentration",
    mote_cost=4,
    statistic="sail",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
sturdy_bulkhead_concentration.prerequisites.add(ocean_darting_maneuver)
storm_singer_s_reprieve = DragonBloodedCharm.objects.create(
    name="Storm-Singer's Reprieve",
    mote_cost=7,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
storm_singer_s_reprieve.prerequisites.add(seven_seas_wind_luring_chanty)
hull_shattering_avalanche_impact = DragonBloodedCharm.objects.create(
    name="Hull-Shattering Avalanche Impact",
    mote_cost=6,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["pilot", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
dragon_sets_the_seas_ablaze = DragonBloodedCharm.objects.create(
    name="Dragon Sets the Seas Ablaze",
    mote_cost=10,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["pilot", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 258)
shipwreck_strewn_tempest_wake = DragonBloodedCharm.objects.create(
    name="Shipwreck-Strewn Tempest Wake",
    mote_cost=5,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "pilot", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 259)
benediction_of_the_living_ship = DragonBloodedCharm.objects.create(
    name="Benediction of the Living Ship",
    mote_cost=10,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 259)
benediction_of_the_living_ship.prerequisites.add(sturdy_bulkhead_concentration)
vanishing_fog_bank_escape = DragonBloodedCharm.objects.create(
    name="Vanishing Fog-Bank Escape",
    mote_cost=5,
    statistic="sail",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "pilot", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 260)
vanishing_fog_bank_escape.prerequisites.add(seven_seas_wind_luring_chanty)
pirate_masquerading_method = DragonBloodedCharm.objects.create(
    name="Pirate-Masquerading Method",
    mote_cost=5,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 260)
pirate_masquerading_method.prerequisites.add(vanishing_fog_bank_escape)
bellowing_thunder_admiral = DragonBloodedCharm.objects.create(
    name="Bellowing Thunder Admiral",
    mote_cost=8,
    statistic="sail",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 260)
bellowing_thunder_admiral.prerequisites.add(old_salt_spirit)
ship_seizing_dragon_talon = DragonBloodedCharm.objects.create(
    name="Ship-Seizing Dragon Talon",
    mote_cost=1,
    statistic="sail",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 260)
ship_seizing_dragon_talon.prerequisites.add(bellowing_thunder_admiral)
fog_shroud_ambush = DragonBloodedCharm.objects.create(
    name="Fog Shroud Ambush",
    mote_cost=6,
    statistic="sail",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["mute", "pilot", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
fog_shroud_ambush.prerequisites.add(
    pirate_masquerading_method, ship_seizing_dragon_talon
)
loquacious_courtier_technique = DragonBloodedCharm.objects.create(
    name="Loquacious Courtier Technique",
    mote_cost=2,
    statistic="socialize",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental or reflexive",
    duration="Instant",
    keywords=["balanced", "excellency", "fire", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
wary_yellow_dog_attitude = DragonBloodedCharm.objects.create(
    name="Wary Yellow Dog Attitude",
    mote_cost=3,
    statistic="socialize",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
friend_to_all_nations_attitude = DragonBloodedCharm.objects.create(
    name="Friend-to-All-Nations Attitude",
    mote_cost=0,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
loyalty_reading_meditation = DragonBloodedCharm.objects.create(
    name="Loyalty-Reading Meditation",
    mote_cost=4,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
smoke_wreathed_mien = DragonBloodedCharm.objects.create(
    name="Smoke-Wreathed Mien",
    mote_cost=3,
    statistic="socialize",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
auspicious_first_meeting_attitude = DragonBloodedCharm.objects.create(
    name="Auspicious First Meeting Attitude",
    mote_cost=5,
    statistic="socialize",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["balanced", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 261)
auspicious_first_meeting_attitude.prerequisites.add(
    friend_to_all_nations_attitude, loyalty_reading_meditation
)
brother_against_brother_insinuation = DragonBloodedCharm.objects.create(
    name="Brother-Against-Brother Insinuation",
    mote_cost=5,
    statistic="socialize",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 262)
brother_against_brother_insinuation.prerequisites.add(wary_yellow_dog_attitude)
seizing_the_tongue_technique = DragonBloodedCharm.objects.create(
    name="Seizing-the-Tongue Technique",
    mote_cost=6,
    statistic="socialize",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 262)
seizing_the_tongue_technique.prerequisites.add(friend_to_all_nations_attitude)
sweeten_the_tap_method = DragonBloodedCharm.objects.create(
    name="Sweeten-the-Tap Method",
    mote_cost=5,
    statistic="socialize",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["fire/wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 262)
sweeten_the_tap_method.prerequisites.add(friend_to_all_nations_attitude)
shadow_dispersing_radiance = DragonBloodedCharm.objects.create(
    name="Shadow-Dispersing Radiance",
    mote_cost=1,
    statistic="socialize",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 263)
shadow_dispersing_radiance.prerequisites.add(loyalty_reading_meditation)
eye_for_passions_scrutiny = DragonBloodedCharm.objects.create(
    name="Eye-for-Passions Scrutiny",
    mote_cost=2,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 263)
eye_for_passions_scrutiny.prerequisites.add(shadow_dispersing_radiance)
watching_the_salon_s_shadows = DragonBloodedCharm.objects.create(
    name="Watching the Salon's Shadows",
    mote_cost=3,
    statistic="socialize",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 264)
watching_the_salon_s_shadows.prerequisites.add(
    loyalty_reading_meditation, smoke_wreathed_mien
)
smoke_without_flame = DragonBloodedCharm.objects.create(
    name="Smoke Without Flame",
    mote_cost=4,
    statistic="socialize",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 264)
smoke_without_flame.prerequisites.add(smoke_wreathed_mien)
clear_eyed_courtier_s_scrutiny = DragonBloodedCharm.objects.create(
    name="Clear-Eyed Courtier's Scrutiny",
    mote_cost=10,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 264)
unfaltering_pillar_of_unity = DragonBloodedCharm.objects.create(
    name="Unfaltering Pillar of Unity",
    mote_cost=10,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 264)
wildfire_scandal_revelation = DragonBloodedCharm.objects.create(
    name="Wildfire Scandal Revelation",
    mote_cost=15,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["mute", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 264)
ego_dissolving_deception = DragonBloodedCharm.objects.create(
    name="Ego-Dissolving Deception",
    mote_cost=5,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One story",
    keywords=["psyche", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 265)
poisonous_sneer_reproach = DragonBloodedCharm.objects.create(
    name="Poisonous Sneer Reproach",
    mote_cost=2,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 265)
ember_fanning_provocation = DragonBloodedCharm.objects.create(
    name="Ember-Fanning Provocation",
    mote_cost=5,
    statistic="socialize",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 265)
ember_fanning_provocation.prerequisites.add(
    brother_against_brother_insinuation, seizing_the_tongue_technique
)
smoothing_over_the_past_technique = DragonBloodedCharm.objects.create(
    name="Smoothing-Over-the-Past Technique",
    mote_cost=5,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["psyche", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 265)
smoothing_over_the_past_technique.prerequisites.add(ember_fanning_provocation)
enticing_flame_feint = DragonBloodedCharm.objects.create(
    name="Enticing Flame Feint",
    mote_cost=6,
    statistic="socialize",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 266)
enticing_flame_feint.prerequisites.add(watching_the_salon_s_shadows)
rumor_dredging_gaze = DragonBloodedCharm.objects.create(
    name="Rumor-Dredging Gaze",
    mote_cost=6,
    statistic="socialize",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 266)
rumor_dredging_gaze.prerequisites.add(
    auspicious_first_meeting_attitude, shadow_dispersing_radiance
)
implacable_dragon_mien = DragonBloodedCharm.objects.create(
    name="Implacable Dragon Mien",
    mote_cost=5,
    statistic="socialize",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["earth", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 266)
implacable_dragon_mien.prerequisites.add(smoke_without_flame)
rippling_mirror_face = DragonBloodedCharm.objects.create(
    name="Rippling Mirror Face",
    mote_cost=6,
    statistic="socialize",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 266)
rippling_mirror_face.prerequisites.add(rumor_dredging_gaze, smoke_without_flame)
distracting_breeze_meditation = DragonBloodedCharm.objects.create(
    name="Distracting Breeze Meditation",
    mote_cost=2,
    statistic="stealth",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "excellency", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
vanishing_wind_body_technique = DragonBloodedCharm.objects.create(
    name="Vanishing Wind-Body Technique",
    mote_cost=4,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
flowing_shadow_stance = DragonBloodedCharm.objects.create(
    name="Flowing Shadow Stance",
    mote_cost=2,
    statistic="stealth",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
flowing_shadow_stance.prerequisites.add(vanishing_wind_body_technique)
soundless_action_prana = DragonBloodedCharm.objects.create(
    name="Soundless Action Prana",
    mote_cost=4,
    statistic="stealth",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["air", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
soundless_action_prana.prerequisites.add(vanishing_wind_body_technique)
shimmering_heat_mirage_tactic = DragonBloodedCharm.objects.create(
    name="Shimmering Heat-Mirage Tactic",
    mote_cost=4,
    statistic="stealth",
    min_statistic=4,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
shimmering_heat_mirage_tactic.prerequisites.add(flowing_shadow_stance)
whispering_dragon_soul = DragonBloodedCharm.objects.create(
    name="Whispering Dragon Soul",
    mote_cost=2,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["mute", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 267)
sleeping_dragon_s_lair = DragonBloodedCharm.objects.create(
    name="Sleeping Dragon's Lair",
    mote_cost=7,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["mute", "signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 268)
flame_becomes_shadow_technique = DragonBloodedCharm.objects.create(
    name="Flame-Becomes-Shadow Technique",
    mote_cost=2,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["psyche", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 268)
depth_stalking_discipline = DragonBloodedCharm.objects.create(
    name="Depth-Stalking Discipline",
    mote_cost=6,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["aura", "mute", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 268)
depth_stalking_discipline.prerequisites.add(flowing_shadow_stance)
shadow_stalking_predator_spirit = DragonBloodedCharm.objects.create(
    name="Shadow-Stalking Predator Spirit",
    mote_cost=5,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Aura",
    keywords=["aura", "dual", "mute", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 268)
burning_shadow_double = DragonBloodedCharm.objects.create(
    name="Burning Shadow Double",
    mote_cost=1,
    statistic="stealth",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 269)
burning_shadow_double.prerequisites.add(shimmering_heat_mirage_tactic)
zone_of_silence_stance = DragonBloodedCharm.objects.create(
    name="Zone of Silence Stance",
    mote_cost=10,
    statistic="stealth",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 269)
zone_of_silence_stance.prerequisites.add(soundless_action_prana)
deadly_riptide_executioner = DragonBloodedCharm.objects.create(
    name="Deadly Riptide Executioner",
    mote_cost=5,
    statistic="stealth",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Aura",
    keywords=["aura", "dual", "mute", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 269)
deadly_riptide_executioner.prerequisites.add(flowing_shadow_stance)
dragon_shroud_technique = DragonBloodedCharm.objects.create(
    name="Dragon Shroud Technique",
    mote_cost=5,
    statistic="stealth",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["air", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 269)
dragon_shroud_technique.prerequisites.add(zone_of_silence_stance)
mela_s_hungry_jaws = DragonBloodedCharm.objects.create(
    name="Mela's Hungry Jaws",
    mote_cost=3,
    statistic="stealth",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Aura",
    keywords=["air", "aura"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 270)
mela_s_hungry_jaws.prerequisites.add(dragon_shroud_technique)
ration_enhancing_method = DragonBloodedCharm.objects.create(
    name="Ration-Enhancing Method",
    mote_cost=2,
    statistic="survival",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "excellency", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 270)
quarry_revelation_technique = DragonBloodedCharm.objects.create(
    name="Quarry Revelation Technique",
    mote_cost=2,
    statistic="survival",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 270)
trail_concealing_measure = DragonBloodedCharm.objects.create(
    name="Trail-Concealing Measure",
    mote_cost=5,
    statistic="survival",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "mute", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
trail_concealing_measure.prerequisites.add(quarry_revelation_technique)
beast_taming_aspect = DragonBloodedCharm.objects.create(
    name="Beast-Taming Aspect",
    mote_cost=3,
    statistic="survival",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
animal_empathy_technique = DragonBloodedCharm.objects.create(
    name="Animal Empathy Technique",
    mote_cost=4,
    statistic="survival",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
animal_empathy_technique.prerequisites.add(beast_taming_aspect)
wild_wandering_forester_s_charm = DragonBloodedCharm.objects.create(
    name="Wild-Wandering Forester's Charm",
    mote_cost=3,
    statistic="survival",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
mother_of_beasts_mastery = DragonBloodedCharm.objects.create(
    name="Mother-of-Beasts Mastery",
    mote_cost=8,
    statistic="survival",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One week",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
mother_of_beasts_mastery.prerequisites.add(beast_taming_aspect)
invoking_nature_s_forgiveness = DragonBloodedCharm.objects.create(
    name="Invoking Nature's Forgiveness",
    mote_cost=3,
    statistic="survival",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One day",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 271)
stalking_wolf_pursuit = DragonBloodedCharm.objects.create(
    name="Stalking Wolf Pursuit",
    mote_cost=4,
    statistic="survival",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 272)
stalking_wolf_pursuit.prerequisites.add(quarry_revelation_technique)
vanishing_tracks_technique = DragonBloodedCharm.objects.create(
    name="Vanishing Tracks Technique",
    mote_cost=5,
    statistic="survival",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 272)
vanishing_tracks_technique.prerequisites.add(trail_concealing_measure)
cunning_beast_mind_inspiration = DragonBloodedCharm.objects.create(
    name="Cunning Beast-Mind Inspiration",
    mote_cost=2,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One turn",
    keywords=["aura", "signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 272)
cunning_beast_mind_inspiration.prerequisites.add(mother_of_beasts_mastery)
earth_moving_kata = DragonBloodedCharm.objects.create(
    name="Earth-Moving Kata",
    mote_cost=10,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 272)
wildfire_taming_technique = DragonBloodedCharm.objects.create(
    name="Wildfire-Taming Technique",
    mote_cost=10,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 272)
roaring_dragon_font = DragonBloodedCharm.objects.create(
    name="Roaring Dragon Font",
    mote_cost=10,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 273)
stalking_apex_predator_technique = DragonBloodedCharm.objects.create(
    name="Stalking Apex Predator Technique",
    mote_cost=5,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One hour",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 273)
tireless_caravan_prana = DragonBloodedCharm.objects.create(
    name="Tireless Caravan Prana",
    mote_cost=7,
    statistic="survival",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 273)
tireless_caravan_prana.prerequisites.add(invoking_nature_s_forgiveness)
dragon_s_nest_shelter = DragonBloodedCharm.objects.create(
    name="Dragon's Nest Shelter",
    mote_cost=10,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="(Essence) days",
    keywords=["none"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 273)
dragon_s_nest_shelter.prerequisites.add(tireless_caravan_prana)
uncanny_fugitive_s_intuition = DragonBloodedCharm.objects.create(
    name="Uncanny Fugitive's Intuition",
    mote_cost=1,
    statistic="survival",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 274)
uncanny_fugitive_s_intuition.prerequisites.add(vanishing_tracks_technique)
burning_fang_strike = DragonBloodedCharm.objects.create(
    name="Burning Fang Strike",
    mote_cost=3,
    statistic="survival",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 274)
burning_fang_strike.prerequisites.add(mother_of_beasts_mastery)
eternal_elemental_harmony = DragonBloodedCharm.objects.create(
    name="Eternal Elemental Harmony",
    mote_cost=7,
    statistic="survival",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 274)
eternal_elemental_harmony.prerequisites.add(invoking_nature_s_forgiveness)
labyrinth_of_mist_technique = DragonBloodedCharm.objects.create(
    name="Labyrinth of Mist Technique",
    mote_cost=15,
    statistic="survival",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air/water", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 274)
labyrinth_of_mist_technique.prerequisites.add(
    uncanny_fugitive_s_intuition, tireless_caravan_prana
)
seeking_throw_technique = DragonBloodedCharm.objects.create(
    name="Seeking Throw Technique",
    mote_cost=1,
    statistic="thrown",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "excellency", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
armor_rupturing_fang = DragonBloodedCharm.objects.create(
    name="Armor-Rupturing Fang",
    mote_cost=3,
    statistic="thrown",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
blinding_spark_throw = DragonBloodedCharm.objects.create(
    name="Blinding Spark Throw",
    mote_cost=4,
    statistic="thrown",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
venomous_thorn_attack = DragonBloodedCharm.objects.create(
    name="Venomous Thorn Attack",
    mote_cost=3,
    statistic="thrown",
    min_statistic=3,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
arcing_levinbolt_precision = DragonBloodedCharm.objects.create(
    name="Arcing Levinbolt Precision",
    mote_cost=2,
    statistic="thrown",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
arcing_levinbolt_precision.prerequisites.add(armor_rupturing_fang)
earth_shattering_strike = DragonBloodedCharm.objects.create(
    name="Earth-Shattering Strike",
    mote_cost=4,
    statistic="thrown",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
earth_shattering_strike.prerequisites.add(armor_rupturing_fang)
invisibly_hidden_chakram_method = DragonBloodedCharm.objects.create(
    name="Invisibly Hidden Chakram Method",
    mote_cost=2,
    statistic="thrown",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Indefinite",
    keywords=["air", "balanced", "stackable"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 275)
mela_s_twin_fangs = DragonBloodedCharm.objects.create(
    name="Mela's Twin Fangs",
    mote_cost=4,
    statistic="thrown",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "aura", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 276)
mela_s_twin_fangs.prerequisites.add(invisibly_hidden_chakram_method)
elusive_zephyr_strike = DragonBloodedCharm.objects.create(
    name="Elusive Zephyr Strike",
    mote_cost=5,
    statistic="thrown",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 276)
smoke_burst_eruption = DragonBloodedCharm.objects.create(
    name="Smoke Burst Eruption",
    mote_cost=5,
    statistic="thrown",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Until end of next turn",
    keywords=["decisive-only", "fire", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 276)
smoke_burst_eruption.prerequisites.add(blinding_spark_throw)
persistent_hornet_attack = DragonBloodedCharm.objects.create(
    name="Persistent Hornet Attack",
    mote_cost=5,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["aura", "signature (air)", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 276)
persistent_hornet_attack.prerequisites.add(mela_s_twin_fangs)
devastating_avalanche_barrage = DragonBloodedCharm.objects.create(
    name="Devastating Avalanche Barrage",
    mote_cost=5,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "perilous", "signature (earth)", "wither- ing-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 276)
devastating_avalanche_barrage.prerequisites.add(earth_shattering_strike)
exploding_weapon_technique = DragonBloodedCharm.objects.create(
    name="Exploding Weapon Technique",
    mote_cost=5,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 277)
exploding_weapon_technique.prerequisites.add(smoke_burst_eruption)
fatal_riptide_strike = DragonBloodedCharm.objects.create(
    name="Fatal Riptide Strike",
    mote_cost=5,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["mute", "signature (water)", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 277)
hundred_thorns_blossom = DragonBloodedCharm.objects.create(
    name="Hundred Thorns Blossom",
    mote_cost=5,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["aura", "decisive-only", "signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 277)
hundred_thorns_blossom.prerequisites.add(elusive_zephyr_strike)
stone_needle_strike = DragonBloodedCharm.objects.create(
    name="Stone Needle Strike",
    mote_cost=3,
    statistic="thrown",
    min_statistic=4,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 277)
stone_needle_strike.prerequisites.add(earth_shattering_strike)
winter_fang_attack = DragonBloodedCharm.objects.create(
    name="Winter Fang Attack",
    mote_cost=4,
    statistic="thrown",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 278)
winter_fang_attack.prerequisites.add(elusive_zephyr_strike)
thousand_razor_wind = DragonBloodedCharm.objects.create(
    name="Thousand Razor Wind",
    mote_cost=1,
    statistic="thrown",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "aura", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 278)
thousand_razor_wind.prerequisites.add(mela_s_twin_fangs)
whirlwind_shield_technique = DragonBloodedCharm.objects.create(
    name="Whirlwind Shield Technique",
    mote_cost=7,
    statistic="thrown",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="One scene",
    keywords=["air", "aura"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 278)
whirlwind_shield_technique.prerequisites.add(thousand_razor_wind)
vengeful_gust_counterstrike = DragonBloodedCharm.objects.create(
    name="Vengeful Gust Counterstrike",
    mote_cost=3,
    statistic="thrown",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "aura", "clash", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
vengeful_gust_counterstrike.prerequisites.add(whirlwind_shield_technique)
wind_armor_technique = DragonBloodedCharm.objects.create(
    name="Wind Armor Technique",
    mote_cost=0,
    statistic="thrown",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="permanent",
    duration="Permanent",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
wind_armor_technique.prerequisites.add(vengeful_gust_counterstrike)
tactics_mean_everything = DragonBloodedCharm.objects.create(
    name="Tactics Mean Everything",
    mote_cost=1,
    statistic="war",
    min_statistic=1,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth", "excellency"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
excellence_of_the_dutiful_general = DragonBloodedCharm.objects.create(
    name="Excellence of the Dutiful General",
    mote_cost=5,
    statistic="war",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
tireless_footfalls_cadence = DragonBloodedCharm.objects.create(
    name="Tireless Footfalls Cadence",
    mote_cost=3,
    statistic="war",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
tireless_footfalls_cadence.prerequisites.add(excellence_of_the_dutiful_general)
roaring_dragon_officer = DragonBloodedCharm.objects.create(
    name="Roaring Dragon Officer",
    mote_cost=3,
    statistic="war",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One turn",
    keywords=["balanced", "earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
blazing_courageous_swordsman_inspiration = DragonBloodedCharm.objects.create(
    name="Blazing Courageous Swordsman Inspiration",
    mote_cost=2,
    statistic="war",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["balanced", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 279)
blazing_courageous_swordsman_inspiration.prerequisites.add(roaring_dragon_officer)
army_to_mob_assault = DragonBloodedCharm.objects.create(
    name="Army-To-Mob Assault",
    mote_cost=3,
    statistic="war",
    min_statistic=3,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 280)
army_to_mob_assault.prerequisites.add(blazing_courageous_swordsman_inspiration)
choking_weeds_tactic = DragonBloodedCharm.objects.create(
    name="Choking Weeds Tactic",
    mote_cost=1,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 280)
choking_weeds_tactic.prerequisites.add(army_to_mob_assault)
changing_winds_cunning = DragonBloodedCharm.objects.create(
    name="Changing Winds Cunning",
    mote_cost=3,
    statistic="war",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "balanced"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 280)
changing_winds_cunning.prerequisites.add(tireless_footfalls_cadence)
storm_calling_strategos = DragonBloodedCharm.objects.create(
    name="Storm-Calling Strategos",
    mote_cost=10,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until stratagem is completed",
    keywords=["signature (air)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 280)
ramparts_of_obedient_earth = DragonBloodedCharm.objects.create(
    name="Ramparts of Obedient Earth",
    mote_cost=5,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="One scene",
    keywords=["signature (earth)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 280)
deadly_wildfire_legion = DragonBloodedCharm.objects.create(
    name="Deadly Wildfire Legion",
    mote_cost=5,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "signature (fire)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 281)
fog_of_war_misdirection = DragonBloodedCharm.objects.create(
    name="Fog-of-War Misdirection",
    mote_cost=6,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until stratagem is completed",
    keywords=["mute", "signature (water)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 282)
hidden_thorn_treachery = DragonBloodedCharm.objects.create(
    name="Hidden Thorn Treachery",
    mote_cost=5,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="simple",
    duration="Until stratagem is completed",
    keywords=["signature (wood)"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 282)
enfolded_in_the_dragon_s_wings = DragonBloodedCharm.objects.create(
    name="Enfolded in the Dragon's Wings",
    mote_cost=3,
    statistic="war",
    min_statistic=4,
    min_essence=3,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth", "perilous", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 282)
enfolded_in_the_dragon_s_wings.prerequisites.add(tireless_footfalls_cadence)
phantom_fire_warrior_horde = DragonBloodedCharm.objects.create(
    name="Phantom Fire-Warrior Horde",
    mote_cost=5,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=1,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 283)
phantom_fire_warrior_horde.prerequisites.add(blazing_courageous_swordsman_inspiration)
indomitable_flame_of_valor = DragonBloodedCharm.objects.create(
    name="Indomitable Flame of Valor",
    mote_cost=1,
    statistic="war",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="supplemental",
    duration="Instant",
    keywords=["aura", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 283)
indomitable_flame_of_valor.prerequisites.add(phantom_fire_warrior_horde)
blessed_dragon_champion = DragonBloodedCharm.objects.create(
    name="Blessed Dragon Champion",
    mote_cost=5,
    statistic="war",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    charm_type="reflexive",
    duration="One scene",
    keywords=["aura", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 283)
blessed_dragon_champion.prerequisites.add(enfolded_in_the_dragon_s_wings)


air_dragon = MartialArtsStyle.objects.create(
    name="Air Dragon Style", weapons="Unarmed attacks, chakram", armor="light",
).add_source("Dragon-Blooded: What Fire Has Wrought", 286)

air_dragon_s_sight = MartialArtsCharm.objects.create(
    name="Air Dragon's Sight",
    mote_cost=1,
    statistic="martial",
    min_statistic=2,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 286)
cloud_treading_method = MartialArtsCharm.objects.create(
    name="Cloud-Treading Method",
    mote_cost=5,
    statistic="martial",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 287)
wind_dragon_speed = MartialArtsCharm.objects.create(
    name="Wind Dragon Speed",
    mote_cost=5,
    statistic="martial",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 287)
wind_dragon_speed.prerequisites.add(cloud_treading_method)
breath_seizing_technique = MartialArtsCharm.objects.create(
    name="Breath-Seizing Technique",
    mote_cost=4,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 287)
breath_seizing_technique.prerequisites.add(air_dragon_s_sight)
air_dragon_form = MartialArtsCharm.objects.create(
    name="Air Dragon Form",
    mote_cost=8,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["air", "form", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 287)
air_dragon_form.prerequisites.add(breath_seizing_technique, wind_dragon_speed)
shroud_of_unseen_winds = MartialArtsCharm.objects.create(
    name="Shroud of Unseen Winds",
    mote_cost=4,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "mute", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 288)
shroud_of_unseen_winds.prerequisites.add(air_dragon_form)
avenging_wind_strike = MartialArtsCharm.objects.create(
    name="Avenging Wind Strike",
    mote_cost=3,
    statistic="martial",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 288)
avenging_wind_strike.prerequisites.add(air_dragon_form)
lightning_strike_style = MartialArtsCharm.objects.create(
    name="Lightning Strike Style",
    mote_cost=8,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["air", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 288)
lightning_strike_style.prerequisites.add(avenging_wind_strike)
thunderclap_kata = MartialArtsCharm.objects.create(
    name="Thunderclap Kata",
    mote_cost=7,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 289)
thunderclap_kata.prerequisites.add(avenging_wind_strike)
tornado_offense_technique = MartialArtsCharm.objects.create(
    name="Tornado Offense Technique",
    mote_cost=10,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 289)
tornado_offense_technique.prerequisites.add(lightning_strike_style)
wrathful_winds_kiai = MartialArtsCharm.objects.create(
    name="Wrathful Winds Kiai",
    mote_cost=15,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["air", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 289)
wrathful_winds_kiai.prerequisites.add(thunderclap_kata)
hurricane_combat_method = MartialArtsCharm.objects.create(
    name="Hurricane Combat Method",
    mote_cost=6,
    statistic="martial",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=air_dragon,
    charm_type="permanent",
    duration="Permanent",
    keywords=["air"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 289)
hurricane_combat_method.prerequisites.add(
    shroud_of_unseen_winds, tornado_offense_technique, wrathful_winds_kiai
)

earth_dragon = MartialArtsStyle.objects.create(
    name="Earth Dragon Style", weapons="Unarmed attacks, tetsubos", armor="all",
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)

stone_dragon_s_skin = MartialArtsCharm.objects.create(
    name="Stone Dragon's Skin",
    mote_cost=5,
    statistic="martial",
    min_statistic=2,
    min_essence=1,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["dual", "earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)
force_of_the_mountain = MartialArtsCharm.objects.create(
    name="Force of the Mountain",
    mote_cost=3,
    statistic="martial",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)
stillness_of_stone_atemi = MartialArtsCharm.objects.create(
    name="Stillness-of-Stone Atemi",
    mote_cost=2,
    statistic="martial",
    min_statistic=3,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)
stillness_of_stone_atemi.prerequisites.add(force_of_the_mountain)
unmoving_mountain_stance = MartialArtsCharm.objects.create(
    name="Unmoving Mountain Stance",
    mote_cost=6,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["dual", "earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)
unmoving_mountain_stance.prerequisites.add(stone_dragon_s_skin)
earth_dragon_form = MartialArtsCharm.objects.create(
    name="Earth Dragon Form",
    mote_cost=9,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["earth", "form"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 290)
earth_dragon_form.prerequisites.add(stillness_of_stone_atemi, unmoving_mountain_stance)
ghost_grounding_blow = MartialArtsCharm.objects.create(
    name="Ghost-Grounding Blow",
    mote_cost=5,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["earth", "perilous", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 291)
ghost_grounding_blow.prerequisites.add(earth_dragon_form)
earthshaker_attack = MartialArtsCharm.objects.create(
    name="Earthshaker Attack",
    mote_cost=10,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 291)
earthshaker_attack.prerequisites.add(earth_dragon_form)
shattering_fist_strike = MartialArtsCharm.objects.create(
    name="Shattering Fist Strike",
    mote_cost=3,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 291)
shattering_fist_strike.prerequisites.add(earth_dragon_form)
weapon_breaking_defense_technique = MartialArtsCharm.objects.create(
    name="Weapon-Breaking Defense Technique",
    mote_cost=10,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 291)
weapon_breaking_defense_technique.prerequisites.add(shattering_fist_strike)
avalanche_method = MartialArtsCharm.objects.create(
    name="Avalanche Method",
    mote_cost=20,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "earth"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 291)
avalanche_method.prerequisites.add(weapon_breaking_defense_technique)
hungry_earth_strike = MartialArtsCharm.objects.create(
    name="Hungry Earth Strike",
    mote_cost=10,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=6,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["earth", "perilous", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 292)
hungry_earth_strike.prerequisites.add(earthshaker_attack, ghost_grounding_blow)
perfection_of_earth_body = MartialArtsCharm.objects.create(
    name="Perfection of Earth Body",
    mote_cost=6,
    statistic="martial",
    min_statistic=5,
    min_essence=5,
    initiative_cost=6,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=earth_dragon,
    charm_type="permanent",
    duration="Permanent",
    keywords=["earth", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 292)
perfection_of_earth_body.prerequisites.add(avalanche_method, hungry_earth_strike)

fire_dragon = MartialArtsStyle.objects.create(
    name="Fire Dragon Style",
    weapons="Unarmed Attacks, paired short swords",
    armor="light and medium",
).add_source("Dragon-Blooded: What Fire Has Wrought", 292)

flash_fire_technique = MartialArtsCharm.objects.create(
    name="Flash-Fire Technique",
    mote_cost=5,
    statistic="martial",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
searing_edge_attack = MartialArtsCharm.objects.create(
    name="Searing Edge Attack",
    mote_cost=3,
    statistic="martial",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["fire", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
flame_flicker_stance = MartialArtsCharm.objects.create(
    name="Flame-Flicker Stance",
    mote_cost=3,
    statistic="martial",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
flame_flicker_stance.prerequisites.add(flash_fire_technique)
perfect_blazing_blow = MartialArtsCharm.objects.create(
    name="Perfect Blazing Blow",
    mote_cost=3,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
perfect_blazing_blow.prerequisites.add(searing_edge_attack)
fire_dragon_form = MartialArtsCharm.objects.create(
    name="Fire Dragon Form",
    mote_cost=7,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["fire", "form"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
fire_dragon_form.prerequisites.add(flame_flicker_stance, perfect_blazing_blow)
god_immolating_strike = MartialArtsCharm.objects.create(
    name="God-Immolating Strike",
    mote_cost=5,
    statistic="martial",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 293)
god_immolating_strike.prerequisites.add(fire_dragon_form)
essence_igniting_nerve_strike = MartialArtsCharm.objects.create(
    name="Essence-Igniting Nerve Strike",
    mote_cost=4,
    statistic="martial",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["fire", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 294)
essence_igniting_nerve_strike.prerequisites.add(god_immolating_strike)
overwhelming_fire_majesty_stance = MartialArtsCharm.objects.create(
    name="Overwhelming Fire Majesty Stance",
    mote_cost=6,
    statistic="martial",
    min_statistic=4,
    min_essence=3,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["fire", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 294)
overwhelming_fire_majesty_stance.prerequisites.add(fire_dragon_form)
fiery_blade_attack = MartialArtsCharm.objects.create(
    name="Fiery Blade Attack",
    mote_cost=5,
    statistic="martial",
    min_statistic=5,
    min_essence=3,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 294)
fiery_blade_attack.prerequisites.add(fire_dragon_form)
breath_of_the_fire_dragon = MartialArtsCharm.objects.create(
    name="Breath of the Fire Dragon",
    mote_cost=15,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 295)
breath_of_the_fire_dragon.prerequisites.add(overwhelming_fire_majesty_stance)
smoldering_wound_attack = MartialArtsCharm.objects.create(
    name="Smoldering Wound Attack",
    mote_cost=5,
    statistic="martial",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 295)
smoldering_wound_attack.prerequisites.add(
    essence_igniting_nerve_strike, fiery_blade_attack
)
consuming_might_of_the_fire_dragon = MartialArtsCharm.objects.create(
    name="Consuming Might of the Fire Dragon",
    mote_cost=5,
    statistic="martial",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=fire_dragon,
    charm_type="permanent",
    duration="Permanent",
    keywords=["dual", "fire"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 295)
consuming_might_of_the_fire_dragon.prerequisites.add(
    breath_of_the_fire_dragon, smoldering_wound_attack
)

water_dragon = MartialArtsStyle.objects.create(
    name="Water Dragon Style",
    weapons="unarmed attacks, tiger claws",
    armor="light and medium",
).add_source("Dragon-Blooded: What Fire Has Wrought", 295)

flowing_water_defense = MartialArtsCharm.objects.create(
    name="Flowing Water Defense",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 295)
rippling_water_strike = MartialArtsCharm.objects.create(
    name="Rippling Water Strike",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
drowning_in_blood_technique = MartialArtsCharm.objects.create(
    name="Drowning-in-Blood Technique",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
shrugging_water_dragon_escape = MartialArtsCharm.objects.create(
    name="Shrugging Water-Dragon Escape",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
shrugging_water_dragon_escape.prerequisites.add(flowing_water_defense)
water_dragon_form = MartialArtsCharm.objects.create(
    name="Water Dragon Form",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["form", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
water_dragon_form.prerequisites.add(
    drowning_in_blood_technique, shrugging_water_dragon_escape
)
theft_of_essence_method = MartialArtsCharm.objects.create(
    name="Theft-of-Essence Method",
    mote_cost=0,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
theft_of_essence_method.prerequisites.add(water_dragon_form)
bottomless_depths_defense = MartialArtsCharm.objects.create(
    name="Bottomless Depths Defense",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    ahl_cost=1,
    hl_cost=0,
    style=water_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 296)
bottomless_depths_defense.prerequisites.add(water_dragon_form)
essence_dousing_wave_attack = MartialArtsCharm.objects.create(
    name="Essence-Dousing Wave Attack",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 297)
essence_dousing_wave_attack.prerequisites.add(theft_of_essence_method)
flow_reversal_strike = MartialArtsCharm.objects.create(
    name="Flow Reversal Strike",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 297)
flow_reversal_strike.prerequisites.add(theft_of_essence_method)
crashing_wave_style = MartialArtsCharm.objects.create(
    name="Crashing Wave Style",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=4,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["perilous", "water", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 297)
crashing_wave_style.prerequisites.add(flow_reversal_strike)
ghost_restraining_whirlpool = MartialArtsCharm.objects.create(
    name="Ghost-Restraining Whirlpool",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=4,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["perilous", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 297)
ghost_restraining_whirlpool.prerequisites.add(essence_dousing_wave_attack)
tsunami_force_shout = MartialArtsCharm.objects.create(
    name="Tsunami-Force Shout",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=5,
    initiative_cost=10,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=water_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "water"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 297)
tsunami_force_shout.prerequisites.add(
    bottomless_depths_defense, crashing_wave_style, ghost_restraining_whirlpool
)

wood_dragon = MartialArtsStyle.objects.create(
    name="Wood Dragon Style", weapons="unarmed attacks, staff, long bow", armor="light",
).add_source("Dragon-Blooded: What Fire Has Wrought", 298)

wood_dragon_vitality = MartialArtsCharm.objects.create(
    name="Wood Dragon Vitality",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["dual", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 298)
eyes_of_the_wood_dragon = MartialArtsCharm.objects.create(
    name="Eyes of the Wood Dragon",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["withering-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 298)
mind_over_body_meditation = MartialArtsCharm.objects.create(
    name="Mind-Over-Body Meditation",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["perilous", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 298)
mind_over_body_meditation.prerequisites.add(wood_dragon_vitality)
soul_marking_style = MartialArtsCharm.objects.create(
    name="Soul-Marking Style",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
soul_marking_style.prerequisites.add(eyes_of_the_wood_dragon)
wood_dragon_form = MartialArtsCharm.objects.create(
    name="Wood Dragon Form",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="simple",
    duration="One scene",
    keywords=["form", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
wood_dragon_form.prerequisites.add(mind_over_body_meditation, soul_marking_style)
spirit_wracking_method = MartialArtsCharm.objects.create(
    name="Spirit-Wracking Method",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["withering-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
spirit_wracking_method.prerequisites.add(wood_dragon_form)
death_pattern_sensing_attitude = MartialArtsCharm.objects.create(
    name="Death-Pattern-Sensing Attitude",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=3,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="reflexive",
    duration="Until next turn",
    keywords=["perilous", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
death_pattern_sensing_attitude.prerequisites.add(wood_dragon_form)
spirit_rending_technique = MartialArtsCharm.objects.create(
    name="Spirit-Rending Technique",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
spirit_rending_technique.prerequisites.add(spirit_wracking_method)
unbreakable_fascination_kata = MartialArtsCharm.objects.create(
    name="Unbreakable Fascination Kata",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 299)
unbreakable_fascination_kata.prerequisites.add(wood_dragon_form)
enthralling_blow_attack = MartialArtsCharm.objects.create(
    name="Enthralling Blow Attack",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=4,
    initiative_cost=5,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="reflexive",
    duration="Instant",
    keywords=["perilous", "withering-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 300)
enthralling_blow_attack.prerequisites.add(unbreakable_fascination_kata)
wood_dragon_succor = MartialArtsCharm.objects.create(
    name="Wood Dragon Succor",
    mote_cost=15,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=4,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=wood_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 300)
wood_dragon_succor.prerequisites.add(
    death_pattern_sensing_attitude, spirit_rending_technique
)
soul_mastery = MartialArtsCharm.objects.create(
    name="Soul Mastery",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=5,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    ahl_cost=1,
    hl_cost=0,
    style=wood_dragon,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "wood"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 301)
soul_mastery.prerequisites.add(enthralling_blow_attack, wood_dragon_succor)

golden_janissary = MartialArtsStyle.objects.create(
    name="Golden Janissary Style",
    weapons="unarmed attacks, spear, staff",
    armor="light",
).add_source("Dragon-Blooded: What Fire Has Wrought", 301)

where_is_doom_inquisition = MartialArtsCharm.objects.create(
    name="Where-Is-Doom Inquisition",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "mastery"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 301)
rotten_leaf_arrested = MartialArtsCharm.objects.create(
    name="Rotten Leaf Arrested",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="supplemental",
    duration="Instant",
    keywords=["withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 301)
cleansing_flame_strike = MartialArtsCharm.objects.create(
    name="Cleansing Flame Strike",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 301)
cleansing_flame_strike.prerequisites.add(
    rotten_leaf_arrested, where_is_doom_inquisition
)
golden_janissary_form = MartialArtsCharm.objects.create(
    name="Golden Janissary Form",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="simple",
    duration="One scene",
    keywords=["form"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 302)
golden_janissary_form.prerequisites.add(cleansing_flame_strike)
devil_slaying_spear_dance = MartialArtsCharm.objects.create(
    name="Devil-Slaying Spear Dance",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 302)
devil_slaying_spear_dance.prerequisites.add(golden_janissary_form)
paralyzing_combustion_imbuement = MartialArtsCharm.objects.create(
    name="Paralyzing Combustion Imbuement",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 302)
paralyzing_combustion_imbuement.prerequisites.add(devil_slaying_spear_dance)
light_on_dark_shield = MartialArtsCharm.objects.create(
    name="Light-on-Dark Shield",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    initiative_cost=3,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "perilous", "terrestrial", "withering-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 302)
light_on_dark_shield.prerequisites.add(golden_janissary_form)
lone_spark_lights_the_conflagration = MartialArtsCharm.objects.create(
    name="Lone Spark Lights the Conflagration",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=golden_janissary,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 303)
lone_spark_lights_the_conflagration.prerequisites.add(
    light_on_dark_shield, paralyzing_combustion_imbuement
)

mantis = MartialArtsStyle.objects.create(
    name="Mantis Style",
    weapons="unarmed attacks, batons, kamas, nunchaku, seven-section staffs, war fans",
    armor="none",
).add_source("Dragon-Blooded: What Fire Has Wrought", 303)

iron_arm_block = MartialArtsCharm.objects.create(
    name="Iron-Arm Block",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mastery", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 304)
crushing_claw_technique = MartialArtsCharm.objects.create(
    name="Crushing Claw Technique",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 304)
mantis_form = MartialArtsCharm.objects.create(
    name="Mantis Form",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="simple",
    duration="One scene",
    keywords=["form"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 304)
mantis_form.prerequisites.add(crushing_claw_technique, iron_arm_block)
leaping_mantis_technique = MartialArtsCharm.objects.create(
    name="Leaping Mantis Technique",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 304)
leaping_mantis_technique.prerequisites.add(mantis_form)
joint_locking_technique = MartialArtsCharm.objects.create(
    name="Joint-Locking Technique",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="simple",
    duration="Instant",
    keywords=["mastery"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 304)
joint_locking_technique.prerequisites.add(mantis_form)
grasping_claw_method = MartialArtsCharm.objects.create(
    name="Grasping Claw Method",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    initiative_cost=1,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "mastery"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 305)
grasping_claw_method.prerequisites.add(mantis_form)
grasping_mantis_defense = MartialArtsCharm.objects.create(
    name="Grasping Mantis Defense",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="reflexive",
    duration="Instant",
    keywords=["clash", "decisive-only", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 305)
grasping_mantis_defense.prerequisites.add(grasping_claw_method)
joint_breaking_attack = MartialArtsCharm.objects.create(
    name="Joint-Breaking Attack",
    mote_cost=8,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 305)
joint_breaking_attack.prerequisites.add(joint_locking_technique)
unfolding_retribution_strike = MartialArtsCharm.objects.create(
    name="Unfolding Retribution Strike",
    mote_cost=15,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=mantis,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 305)
unfolding_retribution_strike.prerequisites.add(
    grasping_mantis_defense, joint_breaking_attack, leaping_mantis_technique
)

white_veil = MartialArtsStyle.objects.create(
    name="White Veil Style",
    weapons="unarmed attacks, garrotes, hand-needles",
    armor="none",
).add_source("Dragon-Blooded: What Fire Has Wrought", 305)

birdsong_over_blades = MartialArtsCharm.objects.create(
    name="Birdsong Over Blades",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=2,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="reflexive",
    duration="Instant",
    keywords=["decisive-only", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 306)
owl_clutches_at_the_night = MartialArtsCharm.objects.create(
    name="Owl Clutches at the Night",
    mote_cost=2,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="reflexive",
    duration="Instant",
    keywords=["mastery", "uniform"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 306)
owl_clutches_at_the_night.prerequisites.add(birdsong_over_blades)
alehouse_memory_stance = MartialArtsCharm.objects.create(
    name="Alehouse Memory Stance",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=3,
    min_essence=1,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="supplemental",
    duration="Instant",
    keywords=["mute", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 306)
white_veil_form = MartialArtsCharm.objects.create(
    name="White Veil Form",
    mote_cost=7,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=1,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="simple",
    duration="One scene",
    keywords=["form", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 307)
white_veil_form.prerequisites.add(alehouse_memory_stance, owl_clutches_at_the_night)
blithe_unruffled_plumage = MartialArtsCharm.objects.create(
    name="Blithe Unruffled Plumage",
    mote_cost=4,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="supplemental",
    duration="Instant",
    keywords=["dual", "mastery", "mute", "perilous"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 307)
blithe_unruffled_plumage.prerequisites.add(white_veil_form)
blinded_by_laughter = MartialArtsCharm.objects.create(
    name="Blinded by Laughter",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    initiative_cost=0,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="simple",
    duration="Instant",
    keywords=["mastery", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 307)
blinded_by_laughter.prerequisites.add(blithe_unruffled_plumage)
tickling_the_dragon_s_throat = MartialArtsCharm.objects.create(
    name="Tickling the Dragon's Throat",
    mote_cost=3,
    statistic="martial_arts",
    min_statistic=4,
    min_essence=2,
    initiative_cost=2,
    anima_cost=0,
    willpower_cost=0,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="supplemental",
    duration="Instant",
    keywords=["decisive-only", "mastery"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 307)
tickling_the_dragon_s_throat.prerequisites.add(white_veil_form)
the_dragon_dies_in_bed = MartialArtsCharm.objects.create(
    name="The Dragon Dies in Bed",
    mote_cost=5,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=2,
    initiative_cost=4,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 308)
the_dragon_dies_in_bed.prerequisites.add(
    blinded_by_laughter, tickling_the_dragon_s_throat
)
the_dragon_dies_screaming = MartialArtsCharm.objects.create(
    name="The Dragon Dies Screaming",
    mote_cost=6,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=6,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery", "mute"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 308)
the_dragon_dies_screaming.prerequisites.add(the_dragon_dies_in_bed)
the_dragon_succumbs = MartialArtsCharm.objects.create(
    name="The Dragon Succumbs",
    mote_cost=10,
    statistic="martial_arts",
    min_statistic=5,
    min_essence=3,
    initiative_cost=7,
    anima_cost=0,
    willpower_cost=1,
    silverxp_cost=0,
    goldxp_cost=0,
    whitexp_cost=0,
    xp_cost=0,
    lhl_cost=0,
    hl_cost=0,
    style=white_veil,
    charm_type="simple",
    duration="Instant",
    keywords=["decisive-only", "mastery", "mute", "terrestrial"],
).add_source("Dragon-Blooded: What Fire Has Wrought", 308)
the_dragon_succumbs.prerequisites.add(the_dragon_dies_screaming)
